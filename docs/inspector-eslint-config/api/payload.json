{
  "configs": [
    {
      "name": "eslint/defaults/languages",
      "languageOptions": {
        "sourceType": "module",
        "ecmaVersion": "latest",
        "parserOptions": {}
      },
      "linterOptions": {
        "reportUnusedDisableDirectives": 1
      },
      "index": 0
    },
    {
      "name": "eslint/defaults/ignores",
      "ignores": [
        "**/node_modules/",
        ".git/"
      ],
      "index": 1
    },
    {
      "name": "eslint/defaults/files",
      "files": [
        "**/*.js",
        "**/*.mjs"
      ],
      "index": 2
    },
    {
      "name": "eslint/defaults/files-cjs",
      "files": [
        "**/*.cjs"
      ],
      "languageOptions": {
        "sourceType": "commonjs",
        "ecmaVersion": "latest"
      },
      "index": 3
    },
    {
      "name": "NodeJS Globals",
      "languageOptions": {
        "globals": {
          "__dirname": false,
          "__filename": false,
          "AbortController": false,
          "AbortSignal": false,
          "AsyncDisposableStack": false,
          "atob": false,
          "Blob": false,
          "BroadcastChannel": false,
          "btoa": false,
          "Buffer": false,
          "ByteLengthQueuingStrategy": false,
          "clearImmediate": false,
          "clearInterval": false,
          "clearTimeout": false,
          "CloseEvent": false,
          "CompressionStream": false,
          "console": false,
          "CountQueuingStrategy": false,
          "crypto": false,
          "Crypto": false,
          "CryptoKey": false,
          "CustomEvent": false,
          "DecompressionStream": false,
          "DisposableStack": false,
          "DOMException": false,
          "Event": false,
          "EventTarget": false,
          "exports": true,
          "fetch": false,
          "File": false,
          "FormData": false,
          "global": false,
          "Headers": false,
          "MessageChannel": false,
          "MessageEvent": false,
          "MessagePort": false,
          "module": false,
          "navigator": false,
          "Navigator": false,
          "performance": false,
          "Performance": false,
          "PerformanceEntry": false,
          "PerformanceMark": false,
          "PerformanceMeasure": false,
          "PerformanceObserver": false,
          "PerformanceObserverEntryList": false,
          "PerformanceResourceTiming": false,
          "process": false,
          "queueMicrotask": false,
          "ReadableByteStreamController": false,
          "ReadableStream": false,
          "ReadableStreamBYOBReader": false,
          "ReadableStreamBYOBRequest": false,
          "ReadableStreamDefaultController": false,
          "ReadableStreamDefaultReader": false,
          "Request": false,
          "require": false,
          "Response": false,
          "setImmediate": false,
          "setInterval": false,
          "setTimeout": false,
          "structuredClone": false,
          "SubtleCrypto": false,
          "SuppressedError": false,
          "TextDecoder": false,
          "TextDecoderStream": false,
          "TextEncoder": false,
          "TextEncoderStream": false,
          "TransformStream": false,
          "TransformStreamDefaultController": false,
          "URL": false,
          "URLPattern": false,
          "URLSearchParams": false,
          "WebAssembly": false,
          "WebSocket": false,
          "WritableStream": false,
          "WritableStreamDefaultController": false,
          "WritableStreamDefaultWriter": false
        }
      },
      "index": 4
    },
    {
      "name": "eslint/all",
      "rules": {
        "accessor-pairs": "error",
        "array-callback-return": "error",
        "arrow-body-style": "error",
        "block-scoped-var": "error",
        "camelcase": "error",
        "capitalized-comments": "error",
        "class-methods-use-this": "error",
        "complexity": "error",
        "consistent-return": "error",
        "consistent-this": "error",
        "constructor-super": "error",
        "curly": "error",
        "default-case": "error",
        "default-case-last": "error",
        "default-param-last": "error",
        "dot-notation": "error",
        "eqeqeq": "error",
        "for-direction": "error",
        "func-name-matching": "error",
        "func-names": "error",
        "func-style": "error",
        "getter-return": "error",
        "grouped-accessor-pairs": "error",
        "guard-for-in": "error",
        "id-denylist": "error",
        "id-length": "error",
        "id-match": "error",
        "init-declarations": "error",
        "logical-assignment-operators": "error",
        "max-classes-per-file": "error",
        "max-depth": "error",
        "max-lines": "error",
        "max-lines-per-function": "error",
        "max-nested-callbacks": "error",
        "max-params": "error",
        "max-statements": "error",
        "new-cap": "error",
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-async-promise-executor": "error",
        "no-await-in-loop": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-console": "error",
        "no-const-assign": "error",
        "no-constant-binary-expression": "error",
        "no-constant-condition": "error",
        "no-constructor-return": "error",
        "no-continue": "error",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-delete-var": "error",
        "no-div-regex": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-else-return": "error",
        "no-empty": "error",
        "no-empty-character-class": "error",
        "no-empty-function": "error",
        "no-empty-pattern": "error",
        "no-empty-static-block": "error",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-ex-assign": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-label": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-global-assign": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-import-assign": "error",
        "no-inline-comments": "error",
        "no-inner-declarations": "error",
        "no-invalid-regexp": "error",
        "no-invalid-this": "error",
        "no-irregular-whitespace": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "error",
        "no-loss-of-precision": "error",
        "no-magic-numbers": "error",
        "no-misleading-character-class": "error",
        "no-multi-assign": "error",
        "no-multi-str": "error",
        "no-negated-condition": "error",
        "no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-native-nonconstructor": "error",
        "no-new-wrappers": "error",
        "no-nonoctal-decimal-escape": "error",
        "no-obj-calls": "error",
        "no-object-constructor": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error",
        "no-plusplus": "error",
        "no-promise-executor-return": "error",
        "no-proto": "error",
        "no-prototype-builtins": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        "no-restricted-exports": "error",
        "no-restricted-globals": "error",
        "no-restricted-imports": "error",
        "no-restricted-properties": "error",
        "no-restricted-syntax": "error",
        "no-return-assign": "error",
        "no-script-url": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-setter-return": "error",
        "no-shadow": "error",
        "no-shadow-restricted-names": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-ternary": "error",
        "no-this-before-super": "error",
        "no-throw-literal": "error",
        "no-unassigned-vars": "error",
        "no-undef": "error",
        "no-undef-init": "error",
        "no-undefined": "error",
        "no-underscore-dangle": "error",
        "no-unexpected-multiline": "error",
        "no-unmodified-loop-condition": "error",
        "no-unneeded-ternary": "error",
        "no-unreachable": "error",
        "no-unreachable-loop": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unsafe-optional-chaining": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "no-unused-private-class-members": "error",
        "no-unused-vars": "error",
        "no-use-before-define": "error",
        "no-useless-assignment": "error",
        "no-useless-backreference": "error",
        "no-useless-call": "error",
        "no-useless-catch": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-escape": "error",
        "no-useless-rename": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": "error",
        "no-warning-comments": "error",
        "no-with": "error",
        "object-shorthand": "error",
        "one-var": "error",
        "operator-assignment": "error",
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-destructuring": "error",
        "prefer-exponentiation-operator": "error",
        "prefer-named-capture-group": "error",
        "prefer-numeric-literals": "error",
        "prefer-object-has-own": "error",
        "prefer-object-spread": "error",
        "prefer-promise-reject-errors": "error",
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "radix": "error",
        "require-atomic-updates": "error",
        "require-await": "error",
        "require-unicode-regexp": "error",
        "require-yield": "error",
        "sort-imports": "error",
        "sort-keys": "error",
        "sort-vars": "error",
        "strict": "error",
        "symbol-description": "error",
        "unicode-bom": "error",
        "use-isnan": "error",
        "valid-typeof": "error",
        "vars-on-top": "error",
        "yoda": "error"
      },
      "index": 5
    },
    {
      "name": "sonarjs/recommended",
      "plugins": {
        "sonarjs": {}
      },
      "rules": {
        "sonarjs/function-name": "off",
        "sonarjs/class-name": "error",
        "sonarjs/max-lines": "off",
        "sonarjs/no-tab": "off",
        "sonarjs/variable-name": "off",
        "sonarjs/comment-regex": "off",
        "sonarjs/no-commented-code": "error",
        "sonarjs/elseif-without-else": "off",
        "sonarjs/no-fallthrough": "error",
        "sonarjs/nested-control-flow": "off",
        "sonarjs/too-many-break-or-continue-in-loop": "off",
        "sonarjs/max-lines-per-function": "off",
        "sonarjs/no-nested-incdec": "off",
        "sonarjs/no-equals-in-for-termination": "error",
        "sonarjs/no-extra-arguments": "error",
        "sonarjs/no-collapsible-if": "off",
        "sonarjs/expression-complexity": "off",
        "sonarjs/no-redundant-parentheses": "off",
        "sonarjs/no-labels": "error",
        "sonarjs/no-nested-assignment": "error",
        "sonarjs/no-redundant-boolean": "error",
        "sonarjs/prefer-single-boolean-return": "error",
        "sonarjs/unused-import": "error",
        "sonarjs/fixme-tag": "error",
        "sonarjs/todo-tag": "error",
        "sonarjs/useless-string-operation": "off",
        "sonarjs/no-unused-function-argument": "off",
        "sonarjs/no-duplicate-string": "off",
        "sonarjs/no-case-label-in-switch": "error",
        "sonarjs/no-parameter-reassignment": "error",
        "sonarjs/prefer-while": "error",
        "sonarjs/no-sonar-comments": "off",
        "sonarjs/no-small-switch": "error",
        "sonarjs/no-hardcoded-ip": "error",
        "sonarjs/label-position": "error",
        "sonarjs/public-static-readonly": "error",
        "sonarjs/file-header": "off",
        "sonarjs/call-argument-line": "error",
        "sonarjs/max-switch-cases": "error",
        "sonarjs/no-unused-vars": "error",
        "sonarjs/prefer-immediate-return": "off",
        "sonarjs/function-inside-loop": "error",
        "sonarjs/code-eval": "error",
        "sonarjs/no-variable-usage-before-declaration": "off",
        "sonarjs/future-reserved-words": "error",
        "sonarjs/array-constructor": "off",
        "sonarjs/bitwise-operators": "error",
        "sonarjs/no-function-declaration-in-block": "off",
        "sonarjs/no-primitive-wrappers": "error",
        "sonarjs/for-in": "off",
        "sonarjs/cyclomatic-complexity": "off",
        "sonarjs/no-skipped-tests": "error",
        "sonarjs/no-one-iteration-loop": "error",
        "sonarjs/no-identical-expressions": "error",
        "sonarjs/no-nested-switch": "off",
        "sonarjs/constructor-for-side-effects": "error",
        "sonarjs/no-dead-store": "error",
        "sonarjs/no-identical-conditions": "error",
        "sonarjs/no-duplicated-branches": "error",
        "sonarjs/deprecation": "error",
        "sonarjs/no-inverted-boolean-check": "error",
        "sonarjs/misplaced-loop-counter": "error",
        "sonarjs/no-nested-functions": "error",
        "sonarjs/no-hardcoded-passwords": "error",
        "sonarjs/sql-queries": "error",
        "sonarjs/insecure-cookie": "error",
        "sonarjs/no-useless-increment": "error",
        "sonarjs/no-globals-shadowing": "error",
        "sonarjs/no-undefined-assignment": "off",
        "sonarjs/no-empty-test-file": "error",
        "sonarjs/no-ignored-return": "error",
        "sonarjs/no-wildcard-import": "off",
        "sonarjs/arguments-order": "error",
        "sonarjs/pseudo-random": "error",
        "sonarjs/for-loop-increment-sign": "error",
        "sonarjs/cookies": "off",
        "sonarjs/null-dereference": "error",
        "sonarjs/no-selector-parameter": "error",
        "sonarjs/updated-loop-counter": "error",
        "sonarjs/block-scoped-var": "error",
        "sonarjs/no-built-in-override": "off",
        "sonarjs/prefer-object-literal": "off",
        "sonarjs/no-ignored-exceptions": "error",
        "sonarjs/no-gratuitous-expressions": "error",
        "sonarjs/file-uploads": "error",
        "sonarjs/file-permissions": "error",
        "sonarjs/no-empty-character-class": "error",
        "sonarjs/no-unenclosed-multiline-block": "error",
        "sonarjs/index-of-compare-to-positive-number": "error",
        "sonarjs/assertions-in-tests": "error",
        "sonarjs/no-implicit-global": "error",
        "sonarjs/no-useless-catch": "error",
        "sonarjs/xml-parser-xxe": "error",
        "sonarjs/non-existent-operator": "error",
        "sonarjs/web-sql-database": "off",
        "sonarjs/post-message": "error",
        "sonarjs/no-array-delete": "error",
        "sonarjs/no-alphabetical-sort": "error",
        "sonarjs/no-incomplete-assertions": "error",
        "sonarjs/no-global-this": "error",
        "sonarjs/new-operator-misuse": "error",
        "sonarjs/no-delete-var": "error",
        "sonarjs/strings-comparison": "off",
        "sonarjs/file-name-differ-from-class": "off",
        "sonarjs/cookie-no-httponly": "error",
        "sonarjs/no-nested-conditional": "error",
        "sonarjs/no-incorrect-string-concat": "off",
        "sonarjs/different-types-comparison": "error",
        "sonarjs/inverted-assertion-arguments": "error",
        "sonarjs/shorthand-property-grouping": "off",
        "sonarjs/updated-const-var": "error",
        "sonarjs/arguments-usage": "off",
        "sonarjs/destructuring-assignment-syntax": "off",
        "sonarjs/no-invariant-returns": "error",
        "sonarjs/arrow-function-convention": "off",
        "sonarjs/class-prototype": "off",
        "sonarjs/generator-without-yield": "error",
        "sonarjs/no-require-or-define": "off",
        "sonarjs/no-associative-arrays": "error",
        "sonarjs/comma-or-logical-or-case": "error",
        "sonarjs/no-redundant-jump": "error",
        "sonarjs/inconsistent-function-call": "error",
        "sonarjs/no-use-of-empty-return-value": "error",
        "sonarjs/enforce-trailing-comma": "off",
        "sonarjs/void-use": "error",
        "sonarjs/operation-returning-nan": "off",
        "sonarjs/values-not-convertible-to-numbers": "off",
        "sonarjs/non-number-in-arithmetic-expression": "off",
        "sonarjs/cognitive-complexity": "error",
        "sonarjs/argument-type": "error",
        "sonarjs/in-operator-type-error": "error",
        "sonarjs/array-callback-without-return": "error",
        "sonarjs/declarations-in-global-scope": "off",
        "sonarjs/function-return-type": "error",
        "sonarjs/no-inconsistent-returns": "off",
        "sonarjs/no-reference-error": "off",
        "sonarjs/super-invocation": "error",
        "sonarjs/no-all-duplicated-branches": "error",
        "sonarjs/no-same-line-conditional": "error",
        "sonarjs/conditional-indentation": "off",
        "sonarjs/no-collection-size-mischeck": "error",
        "sonarjs/no-unthrown-error": "error",
        "sonarjs/no-unused-collection": "error",
        "sonarjs/no-os-command-from-path": "error",
        "sonarjs/no-misleading-array-reverse": "error",
        "sonarjs/no-for-in-iterable": "off",
        "sonarjs/no-element-overwrite": "error",
        "sonarjs/no-identical-functions": "error",
        "sonarjs/no-empty-collection": "error",
        "sonarjs/no-redundant-assignments": "error",
        "sonarjs/prefer-type-guard": "error",
        "sonarjs/use-type-alias": "error",
        "sonarjs/no-return-type-any": "off",
        "sonarjs/no-implicit-dependencies": "off",
        "sonarjs/no-useless-intersection": "error",
        "sonarjs/weak-ssl": "error",
        "sonarjs/no-weak-keys": "error",
        "sonarjs/csrf": "error",
        "sonarjs/production-debug": "error",
        "sonarjs/prefer-default-last": "error",
        "sonarjs/no-in-misuse": "error",
        "sonarjs/no-duplicate-in-composite": "error",
        "sonarjs/max-union-size": "off",
        "sonarjs/no-undefined-argument": "error",
        "sonarjs/no-nested-template-literals": "error",
        "sonarjs/prefer-promise-shorthand": "error",
        "sonarjs/os-command": "error",
        "sonarjs/no-redundant-optional": "error",
        "sonarjs/regular-expr": "off",
        "sonarjs/encryption": "off",
        "sonarjs/hashing": "error",
        "sonarjs/bool-param-default": "off",
        "sonarjs/xpath": "off",
        "sonarjs/sockets": "off",
        "sonarjs/no-try-promise": "error",
        "sonarjs/process-argv": "off",
        "sonarjs/standard-input": "off",
        "sonarjs/unverified-certificate": "error",
        "sonarjs/no-unsafe-unzip": "error",
        "sonarjs/cors": "error",
        "sonarjs/link-with-target-blank": "error",
        "sonarjs/disabled-auto-escaping": "error",
        "sonarjs/table-header": "error",
        "sonarjs/no-table-as-layout": "error",
        "sonarjs/table-header-reference": "error",
        "sonarjs/object-alt-content": "error",
        "sonarjs/no-clear-text-protocols": "error",
        "sonarjs/publicly-writable-directories": "error",
        "sonarjs/unverified-hostname": "error",
        "sonarjs/encryption-secure-mode": "error",
        "sonarjs/no-weak-cipher": "error",
        "sonarjs/no-intrusive-permissions": "error",
        "sonarjs/insecure-jwt-token": "error",
        "sonarjs/x-powered-by": "error",
        "sonarjs/hidden-files": "error",
        "sonarjs/content-length": "error",
        "sonarjs/disabled-resource-integrity": "error",
        "sonarjs/content-security-policy": "error",
        "sonarjs/no-mixed-content": "error",
        "sonarjs/frame-ancestors": "error",
        "sonarjs/no-mime-sniff": "error",
        "sonarjs/no-referrer-policy": "error",
        "sonarjs/strict-transport-security": "error",
        "sonarjs/certificate-transparency": "off",
        "sonarjs/dns-prefetching": "off",
        "sonarjs/confidential-information-logging": "error",
        "sonarjs/no-ip-forward": "error",
        "sonarjs/empty-string-repetition": "error",
        "sonarjs/regex-complexity": "error",
        "sonarjs/anchor-precedence": "error",
        "sonarjs/slow-regex": "error",
        "sonarjs/no-invalid-regexp": "error",
        "sonarjs/unused-named-groups": "error",
        "sonarjs/no-same-argument-assert": "error",
        "sonarjs/unicode-aware-regex": "off",
        "sonarjs/no-misleading-character-class": "error",
        "sonarjs/duplicates-in-character-class": "error",
        "sonarjs/session-regeneration": "error",
        "sonarjs/test-check-exception": "error",
        "sonarjs/stable-tests": "error",
        "sonarjs/no-empty-after-reluctant": "error",
        "sonarjs/single-character-alternation": "error",
        "sonarjs/no-code-after-done": "error",
        "sonarjs/disabled-timeout": "error",
        "sonarjs/chai-determinate-assertion": "error",
        "sonarjs/aws-s3-bucket-server-encryption": "off",
        "sonarjs/aws-s3-bucket-insecure-http": "error",
        "sonarjs/aws-s3-bucket-versioning": "error",
        "sonarjs/aws-s3-bucket-granted-access": "error",
        "sonarjs/no-angular-bypass-sanitization": "error",
        "sonarjs/aws-iam-public-access": "error",
        "sonarjs/aws-ec2-unencrypted-ebs-volume": "error",
        "sonarjs/aws-s3-bucket-public-access": "error",
        "sonarjs/no-vue-bypass-sanitization": "off",
        "sonarjs/aws-iam-all-privileges": "error",
        "sonarjs/aws-rds-unencrypted-databases": "error",
        "sonarjs/aws-iam-all-resources-accessible": "off",
        "sonarjs/aws-opensearchservice-domain": "error",
        "sonarjs/aws-iam-privilege-escalation": "error",
        "sonarjs/aws-sagemaker-unencrypted-notebook": "error",
        "sonarjs/aws-restricted-ip-admin-access": "error",
        "sonarjs/no-empty-alternatives": "error",
        "sonarjs/no-control-regex": "error",
        "sonarjs/no-regex-spaces": "error",
        "sonarjs/aws-sns-unencrypted-topics": "error",
        "sonarjs/existing-groups": "error",
        "sonarjs/aws-ec2-rds-dms-public": "error",
        "sonarjs/aws-sqs-unencrypted-queue": "error",
        "sonarjs/no-empty-group": "error",
        "sonarjs/aws-efs-unencrypted": "error",
        "sonarjs/aws-apigateway-public-api": "error",
        "sonarjs/stateful-regex": "error",
        "sonarjs/concise-regex": "error",
        "sonarjs/single-char-in-character-classes": "error",
        "sonarjs/no-hardcoded-secrets": "error",
        "sonarjs/no-exclusive-tests": "error",
        "sonarjs/jsx-no-leaked-render": "error",
        "sonarjs/no-hook-setter-in-body": "error",
        "sonarjs/no-useless-react-setstate": "error",
        "sonarjs/no-uniq-key": "error",
        "sonarjs/redundant-type-aliases": "error",
        "sonarjs/prefer-regexp-exec": "error",
        "sonarjs/no-internal-api-use": "error",
        "sonarjs/prefer-read-only-props": "error",
        "sonarjs/no-literal-call": "error",
        "sonarjs/reduce-initial-value": "error",
        "sonarjs/no-async-constructor": "error"
      },
      "settings": {
        "react": {
          "version": "999.999.999"
        }
      },
      "index": 6
    },
    {
      "rules": {
        "import/no-unresolved": "error",
        "import/named": "error",
        "import/namespace": "error",
        "import/default": "error",
        "import/export": "error",
        "import/no-named-as-default": "warn",
        "import/no-named-as-default-member": "warn",
        "import/no-duplicates": "warn"
      },
      "languageOptions": {
        "ecmaVersion": 2018,
        "sourceType": "module"
      },
      "name": "import/recommended",
      "plugins": {
        "import": {}
      },
      "index": 7
    },
    {
      "settings": {
        "import/extensions": [
          ".ts",
          ".cts",
          ".mts",
          ".tsx",
          ".js",
          ".jsx",
          ".mjs",
          ".cjs"
        ],
        "import/external-module-folders": [
          "node_modules",
          "node_modules/@types"
        ],
        "import/parsers": {
          "@typescript-eslint/parser": [
            ".ts",
            ".cts",
            ".mts",
            ".tsx"
          ]
        },
        "import/resolver": {
          "node": {
            "extensions": [
              ".ts",
              ".cts",
              ".mts",
              ".tsx",
              ".js",
              ".jsx",
              ".mjs",
              ".cjs"
            ]
          }
        }
      },
      "rules": {
        "import/named": "off"
      },
      "name": "import/typescript",
      "plugins": {
        "import": {}
      },
      "index": 8
    },
    {
      "name": "Typescript import/resolver",
      "settings": {
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true
          }
        }
      },
      "index": 9
    },
    {
      "languageOptions": {
        "globals": {
          "AggregateError": false,
          "Array": false,
          "ArrayBuffer": false,
          "Atomics": false,
          "BigInt": false,
          "BigInt64Array": false,
          "BigUint64Array": false,
          "Boolean": false,
          "DataView": false,
          "Date": false,
          "decodeURI": false,
          "decodeURIComponent": false,
          "encodeURI": false,
          "encodeURIComponent": false,
          "Error": false,
          "escape": false,
          "eval": false,
          "EvalError": false,
          "FinalizationRegistry": false,
          "Float16Array": false,
          "Float32Array": false,
          "Float64Array": false,
          "Function": false,
          "globalThis": false,
          "Infinity": false,
          "Int16Array": false,
          "Int32Array": false,
          "Int8Array": false,
          "Intl": false,
          "isFinite": false,
          "isNaN": false,
          "Iterator": false,
          "JSON": false,
          "Map": false,
          "Math": false,
          "NaN": false,
          "Number": false,
          "Object": false,
          "parseFloat": false,
          "parseInt": false,
          "Promise": false,
          "Proxy": false,
          "RangeError": false,
          "ReferenceError": false,
          "Reflect": false,
          "RegExp": false,
          "Set": false,
          "SharedArrayBuffer": false,
          "String": false,
          "Symbol": false,
          "SyntaxError": false,
          "TypeError": false,
          "Uint16Array": false,
          "Uint32Array": false,
          "Uint8Array": false,
          "Uint8ClampedArray": false,
          "undefined": false,
          "unescape": false,
          "URIError": false,
          "WeakMap": false,
          "WeakRef": false,
          "WeakSet": false
        }
      },
      "name": "unicorn/recommended",
      "plugins": {
        "unicorn": {}
      },
      "rules": {
        "no-negated-condition": "off",
        "no-nested-ternary": "off",
        "unicorn/better-regex": "off",
        "unicorn/catch-error-name": "error",
        "unicorn/consistent-assert": "error",
        "unicorn/consistent-date-clone": "error",
        "unicorn/consistent-destructuring": "off",
        "unicorn/consistent-empty-array-spread": "error",
        "unicorn/consistent-existence-index-check": "error",
        "unicorn/consistent-function-scoping": "error",
        "unicorn/custom-error-definition": "off",
        "unicorn/empty-brace-spaces": "error",
        "unicorn/error-message": "error",
        "unicorn/escape-case": "error",
        "unicorn/expiring-todo-comments": "error",
        "unicorn/explicit-length-check": "error",
        "unicorn/filename-case": "error",
        "unicorn/import-style": "error",
        "unicorn/new-for-builtins": "error",
        "unicorn/no-abusive-eslint-disable": "error",
        "unicorn/no-accessor-recursion": "error",
        "unicorn/no-anonymous-default-export": "error",
        "unicorn/no-array-callback-reference": "error",
        "unicorn/no-array-for-each": "error",
        "unicorn/no-array-method-this-argument": "error",
        "unicorn/no-array-reduce": "error",
        "unicorn/no-array-reverse": "error",
        "unicorn/no-await-expression-member": "error",
        "unicorn/no-await-in-promise-methods": "error",
        "unicorn/no-console-spaces": "error",
        "unicorn/no-document-cookie": "error",
        "unicorn/no-empty-file": "error",
        "unicorn/no-for-loop": "error",
        "unicorn/no-hex-escape": "error",
        "unicorn/no-instanceof-builtins": "error",
        "unicorn/no-invalid-fetch-options": "error",
        "unicorn/no-invalid-remove-event-listener": "error",
        "unicorn/no-keyword-prefix": "off",
        "unicorn/no-lonely-if": "error",
        "unicorn/no-magic-array-flat-depth": "error",
        "unicorn/no-named-default": "error",
        "unicorn/no-negated-condition": "error",
        "unicorn/no-negation-in-equality-check": "error",
        "unicorn/no-nested-ternary": "error",
        "unicorn/no-new-array": "error",
        "unicorn/no-new-buffer": "error",
        "unicorn/no-null": "error",
        "unicorn/no-object-as-default-parameter": "error",
        "unicorn/no-process-exit": "error",
        "unicorn/no-single-promise-in-promise-methods": "error",
        "unicorn/no-static-only-class": "error",
        "unicorn/no-thenable": "error",
        "unicorn/no-this-assignment": "error",
        "unicorn/no-typeof-undefined": "error",
        "unicorn/no-unnecessary-array-flat-depth": "error",
        "unicorn/no-unnecessary-array-splice-count": "error",
        "unicorn/no-unnecessary-await": "error",
        "unicorn/no-unnecessary-polyfills": "error",
        "unicorn/no-unnecessary-slice-end": "error",
        "unicorn/no-unreadable-array-destructuring": "error",
        "unicorn/no-unreadable-iife": "error",
        "unicorn/no-unused-properties": "off",
        "unicorn/no-useless-error-capture-stack-trace": "error",
        "unicorn/no-useless-fallback-in-spread": "error",
        "unicorn/no-useless-length-check": "error",
        "unicorn/no-useless-promise-resolve-reject": "error",
        "unicorn/no-useless-spread": "error",
        "unicorn/no-useless-switch-case": "error",
        "unicorn/no-useless-undefined": "error",
        "unicorn/no-zero-fractions": "error",
        "unicorn/number-literal-case": "error",
        "unicorn/numeric-separators-style": "error",
        "unicorn/prefer-add-event-listener": "error",
        "unicorn/prefer-array-find": "error",
        "unicorn/prefer-array-flat": "error",
        "unicorn/prefer-array-flat-map": "error",
        "unicorn/prefer-array-index-of": "error",
        "unicorn/prefer-array-some": "error",
        "unicorn/prefer-at": "error",
        "unicorn/prefer-blob-reading-methods": "error",
        "unicorn/prefer-class-fields": "error",
        "unicorn/prefer-code-point": "error",
        "unicorn/prefer-date-now": "error",
        "unicorn/prefer-default-parameters": "error",
        "unicorn/prefer-dom-node-append": "error",
        "unicorn/prefer-dom-node-dataset": "error",
        "unicorn/prefer-dom-node-remove": "error",
        "unicorn/prefer-dom-node-text-content": "error",
        "unicorn/prefer-event-target": "error",
        "unicorn/prefer-export-from": "error",
        "unicorn/prefer-global-this": "error",
        "unicorn/prefer-import-meta-properties": "off",
        "unicorn/prefer-includes": "error",
        "unicorn/prefer-json-parse-buffer": "off",
        "unicorn/prefer-keyboard-event-key": "error",
        "unicorn/prefer-logical-operator-over-ternary": "error",
        "unicorn/prefer-math-min-max": "error",
        "unicorn/prefer-math-trunc": "error",
        "unicorn/prefer-modern-dom-apis": "error",
        "unicorn/prefer-modern-math-apis": "error",
        "unicorn/prefer-module": "error",
        "unicorn/prefer-native-coercion-functions": "error",
        "unicorn/prefer-negative-index": "error",
        "unicorn/prefer-node-protocol": "error",
        "unicorn/prefer-number-properties": "error",
        "unicorn/prefer-object-from-entries": "error",
        "unicorn/prefer-optional-catch-binding": "error",
        "unicorn/prefer-prototype-methods": "error",
        "unicorn/prefer-query-selector": "error",
        "unicorn/prefer-reflect-apply": "error",
        "unicorn/prefer-regexp-test": "error",
        "unicorn/prefer-set-has": "error",
        "unicorn/prefer-set-size": "error",
        "unicorn/prefer-single-call": "error",
        "unicorn/prefer-spread": "error",
        "unicorn/prefer-string-raw": "error",
        "unicorn/prefer-string-replace-all": "error",
        "unicorn/prefer-string-slice": "error",
        "unicorn/prefer-string-starts-ends-with": "error",
        "unicorn/prefer-string-trim-start-end": "error",
        "unicorn/prefer-structured-clone": "error",
        "unicorn/prefer-switch": "error",
        "unicorn/prefer-ternary": "error",
        "unicorn/prefer-top-level-await": "error",
        "unicorn/prefer-type-error": "error",
        "unicorn/prevent-abbreviations": "error",
        "unicorn/relative-url-style": "error",
        "unicorn/require-array-join-separator": "error",
        "unicorn/require-module-specifiers": "error",
        "unicorn/require-number-to-fixed-digits-argument": "error",
        "unicorn/require-post-message-target-origin": "off",
        "unicorn/string-content": "off",
        "unicorn/switch-case-braces": "error",
        "unicorn/template-indent": "error",
        "unicorn/text-encoding-identifier-case": "error",
        "unicorn/throw-new-error": "error"
      },
      "index": 10
    },
    {
      "name": "typescript-eslint/base",
      "languageOptions": {
        "parser": "typescript-eslint/parser",
        "sourceType": "module"
      },
      "plugins": {
        "@typescript-eslint": {}
      },
      "index": 11
    },
    {
      "files": [
        "**/*.ts",
        "**/*.tsx",
        "**/*.mts",
        "**/*.cts"
      ],
      "rules": {
        "constructor-super": "off",
        "getter-return": "off",
        "no-class-assign": "off",
        "no-const-assign": "off",
        "no-dupe-args": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-func-assign": "off",
        "no-import-assign": "off",
        "no-new-native-nonconstructor": "off",
        "no-new-symbol": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-this-before-super": "off",
        "no-undef": "off",
        "no-unreachable": "off",
        "no-unsafe-negation": "off",
        "no-var": "error",
        "no-with": "off",
        "prefer-const": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error"
      },
      "name": "typescript-eslint/eslint-recommended",
      "index": 12
    },
    {
      "name": "typescript-eslint/recommended-type-checked",
      "rules": {
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-array-delete": "error",
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-duplicate-enum-values": "error",
        "@typescript-eslint/no-duplicate-type-constituents": "error",
        "@typescript-eslint/no-empty-object-type": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "no-implied-eval": "off",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-redundant-type-constituents": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unnecessary-type-constraint": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-declaration-merging": "error",
        "@typescript-eslint/no-unsafe-enum-comparison": "error",
        "@typescript-eslint/no-unsafe-function-type": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-unsafe-unary-minus": "error",
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-wrapper-object-types": "error",
        "no-throw-literal": "off",
        "@typescript-eslint/only-throw-error": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "prefer-promise-reject-errors": "off",
        "@typescript-eslint/prefer-promise-reject-errors": "error",
        "require-await": "off",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/restrict-template-expressions": "error",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/unbound-method": "error"
      },
      "index": 13
    },
    {
      "name": "Typescript languageOptions",
      "languageOptions": {
        "sourceType": "module",
        "ecmaVersion": "latest",
        "parserOptions": {
          "ecmaVersion": "latest",
          "projectService": true,
          "tsconfigRootDir": "/Users/zavoloklom/Projects/zavoloklom/shareable-configs/packages/eslint-config/src"
        }
      },
      "index": 14
    },
    {
      "name": "eslint-plugin-prettier/recommended",
      "plugins": {
        "prettier": {}
      },
      "rules": {
        "curly": 0,
        "no-unexpected-multiline": 0,
        "@stylistic/lines-around-comment": 0,
        "@stylistic/max-len": 0,
        "@stylistic/no-confusing-arrow": 0,
        "@stylistic/no-mixed-operators": 0,
        "@stylistic/no-tabs": 0,
        "@stylistic/quotes": 0,
        "@stylistic/js/lines-around-comment": 0,
        "@stylistic/js/max-len": 0,
        "@stylistic/js/no-confusing-arrow": 0,
        "@stylistic/js/no-mixed-operators": 0,
        "@stylistic/js/no-tabs": 0,
        "@stylistic/js/quotes": 0,
        "@stylistic/ts/lines-around-comment": 0,
        "@stylistic/ts/quotes": 0,
        "@typescript-eslint/lines-around-comment": 0,
        "@typescript-eslint/quotes": 0,
        "babel/quotes": 0,
        "unicorn/template-indent": 0,
        "vue/html-self-closing": 0,
        "vue/max-len": 0,
        "@babel/object-curly-spacing": "off",
        "@babel/semi": "off",
        "@stylistic/array-bracket-newline": "off",
        "@stylistic/array-bracket-spacing": "off",
        "@stylistic/array-element-newline": "off",
        "@stylistic/arrow-parens": "off",
        "@stylistic/arrow-spacing": "off",
        "@stylistic/block-spacing": "off",
        "@stylistic/brace-style": "off",
        "@stylistic/comma-dangle": "off",
        "@stylistic/comma-spacing": "off",
        "@stylistic/comma-style": "off",
        "@stylistic/computed-property-spacing": "off",
        "@stylistic/dot-location": "off",
        "@stylistic/eol-last": "off",
        "@stylistic/func-call-spacing": "off",
        "@stylistic/function-call-argument-newline": "off",
        "@stylistic/function-call-spacing": "off",
        "@stylistic/function-paren-newline": "off",
        "@stylistic/generator-star-spacing": "off",
        "@stylistic/implicit-arrow-linebreak": "off",
        "@stylistic/indent": "off",
        "@stylistic/jsx-quotes": "off",
        "@stylistic/key-spacing": "off",
        "@stylistic/keyword-spacing": "off",
        "@stylistic/linebreak-style": "off",
        "@stylistic/max-statements-per-line": "off",
        "@stylistic/multiline-ternary": "off",
        "@stylistic/new-parens": "off",
        "@stylistic/newline-per-chained-call": "off",
        "@stylistic/no-extra-parens": "off",
        "@stylistic/no-extra-semi": "off",
        "@stylistic/no-floating-decimal": "off",
        "@stylistic/no-mixed-spaces-and-tabs": "off",
        "@stylistic/no-multi-spaces": "off",
        "@stylistic/no-multiple-empty-lines": "off",
        "@stylistic/no-trailing-spaces": "off",
        "@stylistic/no-whitespace-before-property": "off",
        "@stylistic/nonblock-statement-body-position": "off",
        "@stylistic/object-curly-newline": "off",
        "@stylistic/object-curly-spacing": "off",
        "@stylistic/object-property-newline": "off",
        "@stylistic/one-var-declaration-per-line": "off",
        "@stylistic/operator-linebreak": "off",
        "@stylistic/padded-blocks": "off",
        "@stylistic/quote-props": "off",
        "@stylistic/rest-spread-spacing": "off",
        "@stylistic/semi": "off",
        "@stylistic/semi-spacing": "off",
        "@stylistic/semi-style": "off",
        "@stylistic/space-before-blocks": "off",
        "@stylistic/space-before-function-paren": "off",
        "@stylistic/space-in-parens": "off",
        "@stylistic/space-infix-ops": "off",
        "@stylistic/space-unary-ops": "off",
        "@stylistic/switch-colon-spacing": "off",
        "@stylistic/template-curly-spacing": "off",
        "@stylistic/template-tag-spacing": "off",
        "@stylistic/wrap-iife": "off",
        "@stylistic/wrap-regex": "off",
        "@stylistic/yield-star-spacing": "off",
        "@stylistic/member-delimiter-style": "off",
        "@stylistic/type-annotation-spacing": "off",
        "@stylistic/jsx-child-element-spacing": "off",
        "@stylistic/jsx-closing-bracket-location": "off",
        "@stylistic/jsx-closing-tag-location": "off",
        "@stylistic/jsx-curly-newline": "off",
        "@stylistic/jsx-curly-spacing": "off",
        "@stylistic/jsx-equals-spacing": "off",
        "@stylistic/jsx-first-prop-new-line": "off",
        "@stylistic/jsx-indent": "off",
        "@stylistic/jsx-indent-props": "off",
        "@stylistic/jsx-max-props-per-line": "off",
        "@stylistic/jsx-newline": "off",
        "@stylistic/jsx-one-expression-per-line": "off",
        "@stylistic/jsx-props-no-multi-spaces": "off",
        "@stylistic/jsx-tag-spacing": "off",
        "@stylistic/jsx-wrap-multilines": "off",
        "@stylistic/indent-binary-ops": "off",
        "@stylistic/type-generic-spacing": "off",
        "@stylistic/type-named-tuple-spacing": "off",
        "@stylistic/js/array-bracket-newline": "off",
        "@stylistic/js/array-bracket-spacing": "off",
        "@stylistic/js/array-element-newline": "off",
        "@stylistic/js/arrow-parens": "off",
        "@stylistic/js/arrow-spacing": "off",
        "@stylistic/js/block-spacing": "off",
        "@stylistic/js/brace-style": "off",
        "@stylistic/js/comma-dangle": "off",
        "@stylistic/js/comma-spacing": "off",
        "@stylistic/js/comma-style": "off",
        "@stylistic/js/computed-property-spacing": "off",
        "@stylistic/js/dot-location": "off",
        "@stylistic/js/eol-last": "off",
        "@stylistic/js/func-call-spacing": "off",
        "@stylistic/js/function-call-argument-newline": "off",
        "@stylistic/js/function-call-spacing": "off",
        "@stylistic/js/function-paren-newline": "off",
        "@stylistic/js/generator-star-spacing": "off",
        "@stylistic/js/implicit-arrow-linebreak": "off",
        "@stylistic/js/indent": "off",
        "@stylistic/js/jsx-quotes": "off",
        "@stylistic/js/key-spacing": "off",
        "@stylistic/js/keyword-spacing": "off",
        "@stylistic/js/linebreak-style": "off",
        "@stylistic/js/max-statements-per-line": "off",
        "@stylistic/js/multiline-ternary": "off",
        "@stylistic/js/new-parens": "off",
        "@stylistic/js/newline-per-chained-call": "off",
        "@stylistic/js/no-extra-parens": "off",
        "@stylistic/js/no-extra-semi": "off",
        "@stylistic/js/no-floating-decimal": "off",
        "@stylistic/js/no-mixed-spaces-and-tabs": "off",
        "@stylistic/js/no-multi-spaces": "off",
        "@stylistic/js/no-multiple-empty-lines": "off",
        "@stylistic/js/no-trailing-spaces": "off",
        "@stylistic/js/no-whitespace-before-property": "off",
        "@stylistic/js/nonblock-statement-body-position": "off",
        "@stylistic/js/object-curly-newline": "off",
        "@stylistic/js/object-curly-spacing": "off",
        "@stylistic/js/object-property-newline": "off",
        "@stylistic/js/one-var-declaration-per-line": "off",
        "@stylistic/js/operator-linebreak": "off",
        "@stylistic/js/padded-blocks": "off",
        "@stylistic/js/quote-props": "off",
        "@stylistic/js/rest-spread-spacing": "off",
        "@stylistic/js/semi": "off",
        "@stylistic/js/semi-spacing": "off",
        "@stylistic/js/semi-style": "off",
        "@stylistic/js/space-before-blocks": "off",
        "@stylistic/js/space-before-function-paren": "off",
        "@stylistic/js/space-in-parens": "off",
        "@stylistic/js/space-infix-ops": "off",
        "@stylistic/js/space-unary-ops": "off",
        "@stylistic/js/switch-colon-spacing": "off",
        "@stylistic/js/template-curly-spacing": "off",
        "@stylistic/js/template-tag-spacing": "off",
        "@stylistic/js/wrap-iife": "off",
        "@stylistic/js/wrap-regex": "off",
        "@stylistic/js/yield-star-spacing": "off",
        "@stylistic/ts/block-spacing": "off",
        "@stylistic/ts/brace-style": "off",
        "@stylistic/ts/comma-dangle": "off",
        "@stylistic/ts/comma-spacing": "off",
        "@stylistic/ts/func-call-spacing": "off",
        "@stylistic/ts/function-call-spacing": "off",
        "@stylistic/ts/indent": "off",
        "@stylistic/ts/key-spacing": "off",
        "@stylistic/ts/keyword-spacing": "off",
        "@stylistic/ts/member-delimiter-style": "off",
        "@stylistic/ts/no-extra-parens": "off",
        "@stylistic/ts/no-extra-semi": "off",
        "@stylistic/ts/object-curly-spacing": "off",
        "@stylistic/ts/semi": "off",
        "@stylistic/ts/space-before-blocks": "off",
        "@stylistic/ts/space-before-function-paren": "off",
        "@stylistic/ts/space-infix-ops": "off",
        "@stylistic/ts/type-annotation-spacing": "off",
        "@stylistic/jsx/jsx-child-element-spacing": "off",
        "@stylistic/jsx/jsx-closing-bracket-location": "off",
        "@stylistic/jsx/jsx-closing-tag-location": "off",
        "@stylistic/jsx/jsx-curly-newline": "off",
        "@stylistic/jsx/jsx-curly-spacing": "off",
        "@stylistic/jsx/jsx-equals-spacing": "off",
        "@stylistic/jsx/jsx-first-prop-new-line": "off",
        "@stylistic/jsx/jsx-indent": "off",
        "@stylistic/jsx/jsx-indent-props": "off",
        "@stylistic/jsx/jsx-max-props-per-line": "off",
        "@typescript-eslint/block-spacing": "off",
        "@typescript-eslint/brace-style": "off",
        "@typescript-eslint/comma-dangle": "off",
        "@typescript-eslint/comma-spacing": "off",
        "@typescript-eslint/func-call-spacing": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/key-spacing": "off",
        "@typescript-eslint/keyword-spacing": "off",
        "@typescript-eslint/member-delimiter-style": "off",
        "@typescript-eslint/no-extra-parens": "off",
        "@typescript-eslint/no-extra-semi": "off",
        "@typescript-eslint/object-curly-spacing": "off",
        "@typescript-eslint/semi": "off",
        "@typescript-eslint/space-before-blocks": "off",
        "@typescript-eslint/space-before-function-paren": "off",
        "@typescript-eslint/space-infix-ops": "off",
        "@typescript-eslint/type-annotation-spacing": "off",
        "babel/object-curly-spacing": "off",
        "babel/semi": "off",
        "flowtype/boolean-style": "off",
        "flowtype/delimiter-dangle": "off",
        "flowtype/generic-spacing": "off",
        "flowtype/object-type-curly-spacing": "off",
        "flowtype/object-type-delimiter": "off",
        "flowtype/quotes": "off",
        "flowtype/semi": "off",
        "flowtype/space-after-type-colon": "off",
        "flowtype/space-before-generic-bracket": "off",
        "flowtype/space-before-type-colon": "off",
        "flowtype/union-intersection-spacing": "off",
        "react/jsx-child-element-spacing": "off",
        "react/jsx-closing-bracket-location": "off",
        "react/jsx-closing-tag-location": "off",
        "react/jsx-curly-newline": "off",
        "react/jsx-curly-spacing": "off",
        "react/jsx-equals-spacing": "off",
        "react/jsx-first-prop-new-line": "off",
        "react/jsx-indent": "off",
        "react/jsx-indent-props": "off",
        "react/jsx-max-props-per-line": "off",
        "react/jsx-newline": "off",
        "react/jsx-one-expression-per-line": "off",
        "react/jsx-props-no-multi-spaces": "off",
        "react/jsx-tag-spacing": "off",
        "react/jsx-wrap-multilines": "off",
        "standard/array-bracket-even-spacing": "off",
        "standard/computed-property-even-spacing": "off",
        "standard/object-curly-even-spacing": "off",
        "unicorn/empty-brace-spaces": "off",
        "unicorn/no-nested-ternary": "off",
        "unicorn/number-literal-case": "off",
        "vue/array-bracket-newline": "off",
        "vue/array-bracket-spacing": "off",
        "vue/array-element-newline": "off",
        "vue/arrow-spacing": "off",
        "vue/block-spacing": "off",
        "vue/block-tag-newline": "off",
        "vue/brace-style": "off",
        "vue/comma-dangle": "off",
        "vue/comma-spacing": "off",
        "vue/comma-style": "off",
        "vue/dot-location": "off",
        "vue/func-call-spacing": "off",
        "vue/html-closing-bracket-newline": "off",
        "vue/html-closing-bracket-spacing": "off",
        "vue/html-end-tags": "off",
        "vue/html-indent": "off",
        "vue/html-quotes": "off",
        "vue/key-spacing": "off",
        "vue/keyword-spacing": "off",
        "vue/max-attributes-per-line": "off",
        "vue/multiline-html-element-content-newline": "off",
        "vue/multiline-ternary": "off",
        "vue/mustache-interpolation-spacing": "off",
        "vue/no-extra-parens": "off",
        "vue/no-multi-spaces": "off",
        "vue/no-spaces-around-equal-signs-in-attribute": "off",
        "vue/object-curly-newline": "off",
        "vue/object-curly-spacing": "off",
        "vue/object-property-newline": "off",
        "vue/operator-linebreak": "off",
        "vue/quote-props": "off",
        "vue/script-indent": "off",
        "vue/singleline-html-element-content-newline": "off",
        "vue/space-in-parens": "off",
        "vue/space-infix-ops": "off",
        "vue/space-unary-ops": "off",
        "vue/template-curly-spacing": "off",
        "space-unary-word-ops": "off",
        "generator-star": "off",
        "no-comma-dangle": "off",
        "no-reserved-keys": "off",
        "no-space-before-semi": "off",
        "no-wrap-func": "off",
        "space-after-function-name": "off",
        "space-before-function-parentheses": "off",
        "space-in-brackets": "off",
        "no-arrow-condition": "off",
        "space-after-keywords": "off",
        "space-before-keywords": "off",
        "space-return-throw-case": "off",
        "no-spaced-func": "off",
        "indent-legacy": "off",
        "array-bracket-newline": "off",
        "array-bracket-spacing": "off",
        "array-element-newline": "off",
        "arrow-parens": "off",
        "arrow-spacing": "off",
        "block-spacing": "off",
        "brace-style": "off",
        "comma-dangle": "off",
        "comma-spacing": "off",
        "comma-style": "off",
        "computed-property-spacing": "off",
        "dot-location": "off",
        "eol-last": "off",
        "func-call-spacing": "off",
        "function-call-argument-newline": "off",
        "function-paren-newline": "off",
        "generator-star-spacing": "off",
        "implicit-arrow-linebreak": "off",
        "indent": "off",
        "jsx-quotes": "off",
        "key-spacing": "off",
        "keyword-spacing": "off",
        "linebreak-style": "off",
        "lines-around-comment": 0,
        "max-len": 0,
        "max-statements-per-line": "off",
        "multiline-ternary": "off",
        "new-parens": "off",
        "newline-per-chained-call": "off",
        "no-confusing-arrow": 0,
        "no-extra-parens": "off",
        "no-extra-semi": "off",
        "no-floating-decimal": "off",
        "no-mixed-operators": 0,
        "no-mixed-spaces-and-tabs": "off",
        "no-multi-spaces": "off",
        "no-multiple-empty-lines": "off",
        "no-tabs": 0,
        "no-trailing-spaces": "off",
        "no-whitespace-before-property": "off",
        "nonblock-statement-body-position": "off",
        "object-curly-newline": "off",
        "object-curly-spacing": "off",
        "object-property-newline": "off",
        "one-var-declaration-per-line": "off",
        "operator-linebreak": "off",
        "padded-blocks": "off",
        "quote-props": "off",
        "quotes": 0,
        "rest-spread-spacing": "off",
        "semi": "off",
        "semi-spacing": "off",
        "semi-style": "off",
        "space-before-blocks": "off",
        "space-before-function-paren": "off",
        "space-in-parens": "off",
        "space-infix-ops": "off",
        "space-unary-ops": "off",
        "switch-colon-spacing": "off",
        "template-curly-spacing": "off",
        "template-tag-spacing": "off",
        "wrap-iife": "off",
        "wrap-regex": "off",
        "yield-star-spacing": "off",
        "react/jsx-space-before-closing": "off",
        "arrow-body-style": 0,
        "prefer-arrow-callback": 0,
        "prettier/prettier": "error"
      },
      "index": 15
    },
    {
      "name": "Rewrite rules (unicorn)",
      "rules": {
        "unicorn/prevent-abbreviations": [
          2,
          {
            "allowList": {
              "utils": true,
              "lib": true,
              "pkg": true,
              "i": true,
              "j": true
            }
          }
        ],
        "unicorn/no-null": 0,
        "unicorn/switch-case-braces": [
          2,
          "avoid"
        ],
        "unicorn/import-style": [
          2,
          {
            "styles": {
              "node:path": {
                "named": true,
                "default": false
              }
            }
          }
        ],
        "no-continue": 0
      },
      "index": 16
    },
    {
      "name": "Rewrite rules (sonarjs)",
      "rules": {
        "sonarjs/cognitive-complexity": 1,
        "sonarjs/no-duplicate-string": 2,
        "sonarjs/no-collapsible-if": 2,
        "sonarjs/prefer-object-literal": 2,
        "sonarjs/todo-tag": 1,
        "no-warning-comments": 0,
        "complexity": 0,
        "max-lines-per-function": 0,
        "max-lines": 0,
        "max-params": 0,
        "max-statements": 0,
        "max-depth": 0
      },
      "index": 17
    },
    {
      "name": "Rewrite rules (import)",
      "rules": {
        "import/first": 2,
        "import/named": 2,
        "import/newline-after-import": 2,
        "import/no-absolute-path": 2,
        "import/no-amd": 2,
        "import/no-cycle": 0,
        "import/no-duplicates": 2,
        "import/no-dynamic-require": 2,
        "import/no-extraneous-dependencies": [
          2,
          {
            "devDependencies": [
              "test/**",
              "tests/**",
              "spec/**",
              "**/__tests__/**",
              "**/__mocks__/**",
              "test.{js,jsx,ts,tsx}",
              "test-*.{js,jsx,ts,tsx}",
              "**/*{.,_}{test,spec}.{js,jsx,ts,tsx}",
              "**/*.config.{js,mjs,cjs,ts}",
              "**/*.config.*.{js,mjs,cjs,ts}",
              "**/*rc.{js,mjs,cjs,ts}"
            ],
            "optionalDependencies": false,
            "peerDependencies": false
          }
        ],
        "import/no-import-module-exports": 2,
        "import/no-mutable-exports": 2,
        "import/no-named-as-default": 2,
        "import/no-named-default": 2,
        "import/no-relative-packages": 2,
        "import/no-self-import": 2,
        "import/no-useless-path-segments": [
          2,
          {
            "commonjs": true
          }
        ],
        "import/order": [
          2,
          {
            "groups": [
              [
                "builtin",
                "external"
              ],
              [
                "internal",
                "parent",
                "sibling",
                "index",
                "object",
                "unknown"
              ],
              "type"
            ],
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            }
          }
        ],
        "sort-imports": [
          2,
          {
            "ignoreDeclarationSort": true,
            "allowSeparatedGroups": true
          }
        ],
        "import/prefer-default-export": 0,
        "import/no-default-export": 2,
        "import/exports-last": 2
      },
      "index": 18
    },
    {
      "name": "Rules Adjustments",
      "rules": {
        "one-var": [
          2,
          "never"
        ],
        "id-length": [
          2,
          {
            "exceptions": [
              "a",
              "b",
              "i",
              "j",
              "t"
            ]
          }
        ],
        "sort-keys": 0,
        "no-magic-numbers": [
          2,
          {
            "ignoreNumericLiteralTypes": true,
            "ignoreEnums": true,
            "ignoreArrayIndexes": true,
            "ignore": [
              -1,
              0,
              1,
              2
            ]
          }
        ],
        "no-inline-comments": 0,
        "capitalized-comments": [
          2,
          "always",
          {
            "ignoreConsecutiveComments": true
          }
        ],
        "no-ternary": 0,
        "init-declarations": 0,
        "logical-assignment-operators": 0,
        "no-empty-function": [
          2,
          {
            "allow": [
              "arrowFunctions",
              "methods"
            ]
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          2,
          {
            "args": "none"
          }
        ],
        "eqeqeq": [
          2,
          "always",
          {
            "null": "ignore"
          }
        ],
        "no-plusplus": [
          2,
          {
            "allowForLoopAfterthoughts": true
          }
        ],
        "no-restricted-globals": [
          2,
          {
            "name": "addEventListener",
            "message": "Use window.addEventListener instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "blur",
            "message": "Use window.blur instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "close",
            "message": "Use window.close instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "closed",
            "message": "Use window.closed instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "confirm",
            "message": "Use window.confirm instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "defaultStatus",
            "message": "Use window.defaultStatus instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "defaultstatus",
            "message": "Use window.defaultstatus instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "event",
            "message": "Use window.event instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "external",
            "message": "Use window.external instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "find",
            "message": "Use window.find instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "focus",
            "message": "Use window.focus instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "frameElement",
            "message": "Use window.frameElement instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "frames",
            "message": "Use window.frames instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "history",
            "message": "Use window.history instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "innerHeight",
            "message": "Use window.innerHeight instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "innerWidth",
            "message": "Use window.innerWidth instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "length",
            "message": "Use window.length instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "location",
            "message": "Use window.location instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "locationbar",
            "message": "Use window.locationbar instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "menubar",
            "message": "Use window.menubar instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "moveBy",
            "message": "Use window.moveBy instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "moveTo",
            "message": "Use window.moveTo instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "name",
            "message": "Use window.name instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "onblur",
            "message": "Use window.onblur instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "onerror",
            "message": "Use window.onerror instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "onfocus",
            "message": "Use window.onfocus instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "onload",
            "message": "Use window.onload instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "onresize",
            "message": "Use window.onresize instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "onunload",
            "message": "Use window.onunload instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "open",
            "message": "Use window.open instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "opener",
            "message": "Use window.opener instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "opera",
            "message": "Use window.opera instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "outerHeight",
            "message": "Use window.outerHeight instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "outerWidth",
            "message": "Use window.outerWidth instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "pageXOffset",
            "message": "Use window.pageXOffset instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "pageYOffset",
            "message": "Use window.pageYOffset instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "parent",
            "message": "Use window.parent instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "print",
            "message": "Use window.print instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "removeEventListener",
            "message": "Use window.removeEventListener instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "resizeBy",
            "message": "Use window.resizeBy instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "resizeTo",
            "message": "Use window.resizeTo instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "screen",
            "message": "Use window.screen instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "screenLeft",
            "message": "Use window.screenLeft instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "screenTop",
            "message": "Use window.screenTop instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "screenX",
            "message": "Use window.screenX instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "screenY",
            "message": "Use window.screenY instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "scroll",
            "message": "Use window.scroll instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "scrollbars",
            "message": "Use window.scrollbars instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "scrollBy",
            "message": "Use window.scrollBy instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "scrollTo",
            "message": "Use window.scrollTo instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "scrollX",
            "message": "Use window.scrollX instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "scrollY",
            "message": "Use window.scrollY instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "self",
            "message": "Use window.self instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "status",
            "message": "Use window.status instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "statusbar",
            "message": "Use window.statusbar instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "stop",
            "message": "Use window.stop instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "toolbar",
            "message": "Use window.toolbar instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          },
          {
            "name": "top",
            "message": "Use window.top instead. https://github.com/facebook/create-react-app/blob/HEAD/packages/confusing-browser-globals/README.md"
          }
        ]
      },
      "index": 19
    },
    {
      "name": "Naming Convention",
      "rules": {
        "@typescript-eslint/naming-convention": [
          2,
          {
            "selector": "typeLike",
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": "interface",
            "format": [
              "PascalCase"
            ],
            "custom": {
              "regex": "^I[A-Z]",
              "match": false
            }
          },
          {
            "selector": "enumMember",
            "format": [
              "UPPER_CASE"
            ]
          },
          {
            "selector": [
              "variable",
              "parameter",
              "classProperty"
            ],
            "format": [
              "camelCase"
            ]
          },
          {
            "selector": "variable",
            "modifiers": [
              "const"
            ],
            "format": [
              "camelCase",
              "UPPER_CASE"
            ]
          },
          {
            "selector": "variable",
            "types": [
              "boolean"
            ],
            "format": [
              "camelCase"
            ],
            "custom": {
              "regex": "^(is|has|should)[A-Z]([a-zA-Z0-9]+)$",
              "match": true
            }
          },
          {
            "selector": [
              "function",
              "method"
            ],
            "format": [
              "camelCase"
            ]
          },
          {
            "selector": "variable",
            "format": [
              "PascalCase"
            ],
            "modifiers": [
              "exported"
            ],
            "filter": {
              "regex": "^[A-Z]",
              "match": true
            }
          }
        ]
      },
      "index": 20
    },
    {
      "name": "typescript-eslint/disable-type-checked",
      "files": [
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "rules": {
        "@typescript-eslint/await-thenable": "off",
        "@typescript-eslint/consistent-return": "off",
        "@typescript-eslint/consistent-type-exports": "off",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-array-delete": "off",
        "@typescript-eslint/no-base-to-string": "off",
        "@typescript-eslint/no-confusing-void-expression": "off",
        "@typescript-eslint/no-deprecated": "off",
        "@typescript-eslint/no-duplicate-type-constituents": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-for-in-array": "off",
        "@typescript-eslint/no-implied-eval": "off",
        "@typescript-eslint/no-meaningless-void-operator": "off",
        "@typescript-eslint/no-misused-promises": "off",
        "@typescript-eslint/no-misused-spread": "off",
        "@typescript-eslint/no-mixed-enums": "off",
        "@typescript-eslint/no-redundant-type-constituents": "off",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "off",
        "@typescript-eslint/no-unnecessary-condition": "off",
        "@typescript-eslint/no-unnecessary-qualifier": "off",
        "@typescript-eslint/no-unnecessary-template-expression": "off",
        "@typescript-eslint/no-unnecessary-type-arguments": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "off",
        "@typescript-eslint/no-unnecessary-type-conversion": "off",
        "@typescript-eslint/no-unnecessary-type-parameters": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-enum-comparison": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-type-assertion": "off",
        "@typescript-eslint/no-unsafe-unary-minus": "off",
        "@typescript-eslint/non-nullable-type-assertion-style": "off",
        "@typescript-eslint/only-throw-error": "off",
        "@typescript-eslint/prefer-destructuring": "off",
        "@typescript-eslint/prefer-find": "off",
        "@typescript-eslint/prefer-includes": "off",
        "@typescript-eslint/prefer-nullish-coalescing": "off",
        "@typescript-eslint/prefer-optional-chain": "off",
        "@typescript-eslint/prefer-promise-reject-errors": "off",
        "@typescript-eslint/prefer-readonly": "off",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/prefer-reduce-type-parameter": "off",
        "@typescript-eslint/prefer-regexp-exec": "off",
        "@typescript-eslint/prefer-return-this-type": "off",
        "@typescript-eslint/prefer-string-starts-ends-with": "off",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/related-getter-setter-pairs": "off",
        "@typescript-eslint/require-array-sort-compare": "off",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/return-await": "off",
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/switch-exhaustiveness-check": "off",
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/use-unknown-in-catch-callback-variable": "off"
      },
      "languageOptions": {
        "parserOptions": {
          "program": null,
          "project": null,
          "projectService": false
        }
      },
      "index": 21
    }
  ],
  "rules": {
    "accessor-pairs": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "enforceForClassMembers": true,
          "getWithoutSet": false,
          "setWithoutGet": true
        }
      ],
      "docs": {
        "description": "Enforce getter and setter pairs in objects and classes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/accessor-pairs"
      },
      "name": "accessor-pairs",
      "plugin": "eslint"
    },
    "array-bracket-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "array-bracket-newline",
              "url": "https://eslint.style/rules/array-bracket-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce linebreaks after opening and before closing array brackets",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-bracket-newline"
      },
      "fixable": "whitespace",
      "name": "array-bracket-newline",
      "plugin": "eslint"
    },
    "array-bracket-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "array-bracket-spacing",
              "url": "https://eslint.style/rules/array-bracket-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside array brackets",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-bracket-spacing"
      },
      "fixable": "whitespace",
      "name": "array-bracket-spacing",
      "plugin": "eslint"
    },
    "array-callback-return": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowImplicit": false,
          "checkForEach": false,
          "allowVoid": false
        }
      ],
      "docs": {
        "description": "Enforce `return` statements in callbacks of array methods",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-callback-return"
      },
      "hasSuggestions": true,
      "name": "array-callback-return",
      "plugin": "eslint"
    },
    "array-element-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "array-element-newline",
              "url": "https://eslint.style/rules/array-element-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce line breaks after each array element",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-element-newline"
      },
      "fixable": "whitespace",
      "name": "array-element-newline",
      "plugin": "eslint"
    },
    "arrow-body-style": {
      "type": "suggestion",
      "defaultOptions": [
        "as-needed"
      ],
      "docs": {
        "description": "Require braces around arrow function bodies",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/arrow-body-style"
      },
      "fixable": "code",
      "name": "arrow-body-style",
      "plugin": "eslint"
    },
    "arrow-parens": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "arrow-parens",
              "url": "https://eslint.style/rules/arrow-parens"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require parentheses around arrow function arguments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/arrow-parens"
      },
      "fixable": "code",
      "name": "arrow-parens",
      "plugin": "eslint"
    },
    "arrow-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "arrow-spacing",
              "url": "https://eslint.style/rules/arrow-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after the arrow in arrow functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/arrow-spacing"
      },
      "fixable": "whitespace",
      "name": "arrow-spacing",
      "plugin": "eslint"
    },
    "block-scoped-var": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of variables within the scope they are defined",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/block-scoped-var"
      },
      "name": "block-scoped-var",
      "plugin": "eslint"
    },
    "block-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "block-spacing",
              "url": "https://eslint.style/rules/block-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow or enforce spaces inside of blocks after opening block and before closing block",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/block-spacing"
      },
      "fixable": "whitespace",
      "name": "block-spacing",
      "plugin": "eslint"
    },
    "brace-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "brace-style",
              "url": "https://eslint.style/rules/brace-style"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent brace style for blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/brace-style"
      },
      "fixable": "whitespace",
      "name": "brace-style",
      "plugin": "eslint"
    },
    "callback-return": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "callback-return",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/callback-return.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require `return` statements after callbacks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/callback-return"
      },
      "name": "callback-return",
      "plugin": "eslint"
    },
    "camelcase": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "ignoreDestructuring": false,
          "ignoreGlobals": false,
          "ignoreImports": false,
          "properties": "always"
        }
      ],
      "docs": {
        "description": "Enforce camelcase naming convention",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/camelcase"
      },
      "name": "camelcase",
      "plugin": "eslint"
    },
    "capitalized-comments": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce or disallow capitalization of the first letter of a comment",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/capitalized-comments"
      },
      "fixable": "code",
      "name": "capitalized-comments",
      "plugin": "eslint"
    },
    "class-methods-use-this": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "defaultOptions": [
        {
          "enforceForClassFields": true,
          "exceptMethods": [],
          "ignoreOverrideMethods": false
        }
      ],
      "docs": {
        "description": "Enforce that class methods utilize `this`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/class-methods-use-this"
      },
      "name": "class-methods-use-this",
      "plugin": "eslint"
    },
    "comma-dangle": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "comma-dangle",
              "url": "https://eslint.style/rules/comma-dangle"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow trailing commas",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/comma-dangle"
      },
      "fixable": "code",
      "name": "comma-dangle",
      "plugin": "eslint"
    },
    "comma-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "comma-spacing",
              "url": "https://eslint.style/rules/comma-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after commas",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/comma-spacing"
      },
      "fixable": "whitespace",
      "name": "comma-spacing",
      "plugin": "eslint"
    },
    "comma-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "comma-style",
              "url": "https://eslint.style/rules/comma-style"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent comma style",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/comma-style"
      },
      "fixable": "code",
      "name": "comma-style",
      "plugin": "eslint"
    },
    "complexity": {
      "type": "suggestion",
      "defaultOptions": [
        20
      ],
      "docs": {
        "description": "Enforce a maximum cyclomatic complexity allowed in a program",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/complexity"
      },
      "name": "complexity",
      "plugin": "eslint"
    },
    "computed-property-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "computed-property-spacing",
              "url": "https://eslint.style/rules/computed-property-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside computed property brackets",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/computed-property-spacing"
      },
      "fixable": "whitespace",
      "name": "computed-property-spacing",
      "plugin": "eslint"
    },
    "consistent-return": {
      "type": "suggestion",
      "docs": {
        "description": "Require `return` statements to either always or never specify values",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/consistent-return"
      },
      "defaultOptions": [
        {
          "treatUndefinedAsUnspecified": false
        }
      ],
      "name": "consistent-return",
      "plugin": "eslint"
    },
    "consistent-this": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent naming when capturing the current execution context",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/consistent-this"
      },
      "defaultOptions": [
        "that"
      ],
      "name": "consistent-this",
      "plugin": "eslint"
    },
    "constructor-super": {
      "type": "problem",
      "docs": {
        "description": "Require `super()` calls in constructors",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/constructor-super"
      },
      "name": "constructor-super",
      "plugin": "eslint"
    },
    "curly": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent brace style for all control statements",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/curly"
      },
      "defaultOptions": [
        "all"
      ],
      "fixable": "code",
      "name": "curly",
      "plugin": "eslint"
    },
    "default-case": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Require `default` cases in `switch` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/default-case"
      },
      "name": "default-case",
      "plugin": "eslint"
    },
    "default-case-last": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce `default` clauses in `switch` statements to be last",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/default-case-last"
      },
      "name": "default-case-last",
      "plugin": "eslint"
    },
    "default-param-last": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Enforce default parameters to be last",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/default-param-last"
      },
      "name": "default-param-last",
      "plugin": "eslint"
    },
    "dot-location": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "dot-location",
              "url": "https://eslint.style/rules/dot-location"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent newlines before and after dots",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/dot-location"
      },
      "fixable": "code",
      "name": "dot-location",
      "plugin": "eslint"
    },
    "dot-notation": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowKeywords": true,
          "allowPattern": ""
        }
      ],
      "docs": {
        "description": "Enforce dot notation whenever possible",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/dot-notation"
      },
      "fixable": "code",
      "name": "dot-notation",
      "plugin": "eslint"
    },
    "eol-last": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "eol-last",
              "url": "https://eslint.style/rules/eol-last"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow newline at the end of files",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/eol-last"
      },
      "fixable": "whitespace",
      "name": "eol-last",
      "plugin": "eslint"
    },
    "eqeqeq": {
      "type": "suggestion",
      "hasSuggestions": true,
      "docs": {
        "description": "Require the use of `===` and `!==`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/eqeqeq"
      },
      "fixable": "code",
      "name": "eqeqeq",
      "plugin": "eslint"
    },
    "for-direction": {
      "type": "problem",
      "docs": {
        "description": "Enforce `for` loop update clause moving the counter in the right direction",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/for-direction"
      },
      "fixable": null,
      "name": "for-direction",
      "plugin": "eslint"
    },
    "func-call-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "function-call-spacing",
              "url": "https://eslint.style/rules/function-call-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing between function identifiers and their invocations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/func-call-spacing"
      },
      "fixable": "whitespace",
      "name": "func-call-spacing",
      "plugin": "eslint"
    },
    "func-name-matching": {
      "type": "suggestion",
      "docs": {
        "description": "Require function names to match the name of the variable or property to which they are assigned",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/func-name-matching"
      },
      "name": "func-name-matching",
      "plugin": "eslint"
    },
    "func-names": {
      "type": "suggestion",
      "defaultOptions": [
        "always",
        {}
      ],
      "docs": {
        "description": "Require or disallow named `function` expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/func-names"
      },
      "name": "func-names",
      "plugin": "eslint"
    },
    "func-style": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "defaultOptions": [
        "expression",
        {
          "allowArrowFunctions": false,
          "allowTypeAnnotation": false,
          "overrides": {}
        }
      ],
      "docs": {
        "description": "Enforce the consistent use of either `function` declarations or expressions assigned to variables",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/func-style"
      },
      "name": "func-style",
      "plugin": "eslint"
    },
    "function-call-argument-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "function-call-argument-newline",
              "url": "https://eslint.style/rules/function-call-argument-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce line breaks between arguments of a function call",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/function-call-argument-newline"
      },
      "fixable": "whitespace",
      "name": "function-call-argument-newline",
      "plugin": "eslint"
    },
    "function-paren-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "function-paren-newline",
              "url": "https://eslint.style/rules/function-paren-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent line breaks inside function parentheses",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/function-paren-newline"
      },
      "fixable": "whitespace",
      "name": "function-paren-newline",
      "plugin": "eslint"
    },
    "generator-star-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "generator-star-spacing",
              "url": "https://eslint.style/rules/generator-star-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing around `*` operators in generator functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/generator-star-spacing"
      },
      "fixable": "whitespace",
      "name": "generator-star-spacing",
      "plugin": "eslint"
    },
    "getter-return": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowImplicit": false
        }
      ],
      "docs": {
        "description": "Enforce `return` statements in getters",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/getter-return"
      },
      "fixable": null,
      "name": "getter-return",
      "plugin": "eslint"
    },
    "global-require": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "global-require",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/global-require.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require `require()` calls to be placed at top-level module scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/global-require"
      },
      "name": "global-require",
      "plugin": "eslint"
    },
    "grouped-accessor-pairs": {
      "type": "suggestion",
      "defaultOptions": [
        "anyOrder"
      ],
      "docs": {
        "description": "Require grouped accessor pairs in object literals and classes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/grouped-accessor-pairs"
      },
      "name": "grouped-accessor-pairs",
      "plugin": "eslint"
    },
    "guard-for-in": {
      "type": "suggestion",
      "docs": {
        "description": "Require `for-in` loops to include an `if` statement",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/guard-for-in"
      },
      "name": "guard-for-in",
      "plugin": "eslint"
    },
    "handle-callback-err": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "handle-callback-err",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/handle-callback-err.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require error handling in callbacks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/handle-callback-err"
      },
      "name": "handle-callback-err",
      "plugin": "eslint"
    },
    "id-blacklist": {
      "deprecated": {
        "message": "The rule was renamed.",
        "url": "https://eslint.org/blog/2020/07/eslint-v7.5.0-released/#deprecating-id-blacklist",
        "deprecatedSince": "7.5.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "id-denylist",
              "url": "https://eslint.org/docs/rules/id-denylist"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified identifiers",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/id-blacklist"
      },
      "name": "id-blacklist",
      "plugin": "eslint"
    },
    "id-denylist": {
      "type": "suggestion",
      "defaultOptions": [],
      "docs": {
        "description": "Disallow specified identifiers",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/id-denylist"
      },
      "name": "id-denylist",
      "plugin": "eslint"
    },
    "id-length": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "exceptionPatterns": [],
          "exceptions": [],
          "min": 2,
          "properties": "always"
        }
      ],
      "docs": {
        "description": "Enforce minimum and maximum identifier lengths",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/id-length"
      },
      "name": "id-length",
      "plugin": "eslint"
    },
    "id-match": {
      "type": "suggestion",
      "defaultOptions": [
        "^.+$",
        {
          "classFields": false,
          "ignoreDestructuring": false,
          "onlyDeclarations": false,
          "properties": false
        }
      ],
      "docs": {
        "description": "Require identifiers to match a specified regular expression",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/id-match"
      },
      "name": "id-match",
      "plugin": "eslint"
    },
    "implicit-arrow-linebreak": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "implicit-arrow-linebreak",
              "url": "https://eslint.style/rules/implicit-arrow-linebreak"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce the location of arrow function bodies",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/implicit-arrow-linebreak"
      },
      "fixable": "whitespace",
      "name": "implicit-arrow-linebreak",
      "plugin": "eslint"
    },
    "indent": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "indent",
              "url": "https://eslint.style/rules/indent"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent indentation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/indent"
      },
      "fixable": "whitespace",
      "name": "indent",
      "plugin": "eslint"
    },
    "indent-legacy": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent indentation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/indent-legacy"
      },
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "4.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "indent",
              "url": "https://eslint.style/rules/indent"
            }
          }
        ]
      },
      "fixable": "whitespace",
      "name": "indent-legacy",
      "plugin": "eslint"
    },
    "init-declarations": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Require or disallow initialization in variable declarations",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/init-declarations"
      },
      "name": "init-declarations",
      "plugin": "eslint"
    },
    "jsx-quotes": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "jsx-quotes",
              "url": "https://eslint.style/rules/jsx-quotes"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce the consistent use of either double or single quotes in JSX attributes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/jsx-quotes"
      },
      "fixable": "whitespace",
      "name": "jsx-quotes",
      "plugin": "eslint"
    },
    "key-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "key-spacing",
              "url": "https://eslint.style/rules/key-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing between keys and values in object literal properties",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/key-spacing"
      },
      "fixable": "whitespace",
      "name": "key-spacing",
      "plugin": "eslint"
    },
    "keyword-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "keyword-spacing",
              "url": "https://eslint.style/rules/keyword-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after keywords",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/keyword-spacing"
      },
      "fixable": "whitespace",
      "name": "keyword-spacing",
      "plugin": "eslint"
    },
    "line-comment-position": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "9.3.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "line-comment-position",
              "url": "https://eslint.style/rules/line-comment-position"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce position of line comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/line-comment-position"
      },
      "name": "line-comment-position",
      "plugin": "eslint"
    },
    "linebreak-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "linebreak-style",
              "url": "https://eslint.style/rules/linebreak-style"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreak style",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/linebreak-style"
      },
      "fixable": "whitespace",
      "name": "linebreak-style",
      "plugin": "eslint"
    },
    "lines-around-comment": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "lines-around-comment",
              "url": "https://eslint.style/rules/lines-around-comment"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require empty lines around comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/lines-around-comment"
      },
      "fixable": "whitespace",
      "name": "lines-around-comment",
      "plugin": "eslint"
    },
    "lines-around-directive": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow newlines around directives",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/lines-around-directive"
      },
      "fixable": "whitespace",
      "deprecated": {
        "message": "The rule was replaced with a more general rule.",
        "url": "https://eslint.org/blog/2017/06/eslint-v4.0.0-released/",
        "deprecatedSince": "4.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "The new rule moved to a plugin.",
            "url": "https://eslint.org/docs/latest/rules/padding-line-between-statements#examples",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padding-line-between-statements",
              "url": "https://eslint.style/rules/padding-line-between-statements"
            }
          }
        ]
      },
      "name": "lines-around-directive",
      "plugin": "eslint"
    },
    "lines-between-class-members": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "lines-between-class-members",
              "url": "https://eslint.style/rules/lines-between-class-members"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow an empty line between class members",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/lines-between-class-members"
      },
      "fixable": "whitespace",
      "name": "lines-between-class-members",
      "plugin": "eslint"
    },
    "logical-assignment-operators": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow logical assignment operator shorthand",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/logical-assignment-operators"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "logical-assignment-operators",
      "plugin": "eslint"
    },
    "max-classes-per-file": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of classes per file",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-classes-per-file"
      },
      "name": "max-classes-per-file",
      "plugin": "eslint"
    },
    "max-depth": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum depth that blocks can be nested",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-depth"
      },
      "name": "max-depth",
      "plugin": "eslint"
    },
    "max-len": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "max-len",
              "url": "https://eslint.style/rules/max-len"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce a maximum line length",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-len"
      },
      "name": "max-len",
      "plugin": "eslint"
    },
    "max-lines": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of lines per file",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-lines"
      },
      "name": "max-lines",
      "plugin": "eslint"
    },
    "max-lines-per-function": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of lines of code in a function",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-lines-per-function"
      },
      "name": "max-lines-per-function",
      "plugin": "eslint"
    },
    "max-nested-callbacks": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum depth that callbacks can be nested",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-nested-callbacks"
      },
      "name": "max-nested-callbacks",
      "plugin": "eslint"
    },
    "max-params": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Enforce a maximum number of parameters in function definitions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-params"
      },
      "name": "max-params",
      "plugin": "eslint"
    },
    "max-statements": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of statements allowed in function blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-statements"
      },
      "name": "max-statements",
      "plugin": "eslint"
    },
    "max-statements-per-line": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "max-statements-per-line",
              "url": "https://eslint.style/rules/max-statements-per-line"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce a maximum number of statements allowed per line",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-statements-per-line"
      },
      "name": "max-statements-per-line",
      "plugin": "eslint"
    },
    "multiline-comment-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "9.3.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "multiline-comment-style",
              "url": "https://eslint.style/rules/multiline-comment-style"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Enforce a particular style for multiline comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/multiline-comment-style"
      },
      "fixable": "whitespace",
      "name": "multiline-comment-style",
      "plugin": "eslint"
    },
    "multiline-ternary": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "multiline-ternary",
              "url": "https://eslint.style/rules/multiline-ternary"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce newlines between operands of ternary expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/multiline-ternary"
      },
      "fixable": "whitespace",
      "name": "multiline-ternary",
      "plugin": "eslint"
    },
    "new-cap": {
      "type": "suggestion",
      "docs": {
        "description": "Require constructor names to begin with a capital letter",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/new-cap"
      },
      "defaultOptions": [
        {
          "capIsNew": true,
          "capIsNewExceptions": [
            "Array",
            "Boolean",
            "Date",
            "Error",
            "Function",
            "Number",
            "Object",
            "RegExp",
            "String",
            "Symbol",
            "BigInt"
          ],
          "newIsCap": true,
          "newIsCapExceptions": [],
          "properties": true
        }
      ],
      "name": "new-cap",
      "plugin": "eslint"
    },
    "new-parens": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "new-parens",
              "url": "https://eslint.style/rules/new-parens"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce or disallow parentheses when invoking a constructor with no arguments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/new-parens"
      },
      "fixable": "code",
      "name": "new-parens",
      "plugin": "eslint"
    },
    "newline-after-var": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow an empty line after variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/newline-after-var"
      },
      "fixable": "whitespace",
      "deprecated": {
        "message": "The rule was replaced with a more general rule.",
        "url": "https://eslint.org/blog/2017/06/eslint-v4.0.0-released/",
        "deprecatedSince": "4.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "The new rule moved to a plugin.",
            "url": "https://eslint.org/docs/latest/rules/padding-line-between-statements#examples",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padding-line-between-statements",
              "url": "https://eslint.style/rules/padding-line-between-statements"
            }
          }
        ]
      },
      "name": "newline-after-var",
      "plugin": "eslint"
    },
    "newline-before-return": {
      "type": "layout",
      "docs": {
        "description": "Require an empty line before `return` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/newline-before-return"
      },
      "fixable": "whitespace",
      "deprecated": {
        "message": "The rule was replaced with a more general rule.",
        "url": "https://eslint.org/blog/2017/06/eslint-v4.0.0-released/",
        "deprecatedSince": "4.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "The new rule moved to a plugin.",
            "url": "https://eslint.org/docs/latest/rules/padding-line-between-statements#examples",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padding-line-between-statements",
              "url": "https://eslint.style/rules/padding-line-between-statements"
            }
          }
        ]
      },
      "name": "newline-before-return",
      "plugin": "eslint"
    },
    "newline-per-chained-call": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "newline-per-chained-call",
              "url": "https://eslint.style/rules/newline-per-chained-call"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require a newline after each call in a method chain",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/newline-per-chained-call"
      },
      "fixable": "whitespace",
      "name": "newline-per-chained-call",
      "plugin": "eslint"
    },
    "no-alert": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `alert`, `confirm`, and `prompt`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-alert"
      },
      "name": "no-alert",
      "plugin": "eslint"
    },
    "no-array-constructor": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Disallow `Array` constructors",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-array-constructor"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "no-array-constructor",
      "plugin": "eslint"
    },
    "no-async-promise-executor": {
      "type": "problem",
      "docs": {
        "description": "Disallow using an async function as a Promise executor",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-async-promise-executor"
      },
      "fixable": null,
      "name": "no-async-promise-executor",
      "plugin": "eslint"
    },
    "no-await-in-loop": {
      "type": "problem",
      "docs": {
        "description": "Disallow `await` inside of loops",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-await-in-loop"
      },
      "name": "no-await-in-loop",
      "plugin": "eslint"
    },
    "no-bitwise": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "int32Hint": false
        }
      ],
      "docs": {
        "description": "Disallow bitwise operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-bitwise"
      },
      "name": "no-bitwise",
      "plugin": "eslint"
    },
    "no-buffer-constructor": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-deprecated-api",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-deprecated-api.md"
            }
          }
        ]
      },
      "type": "problem",
      "docs": {
        "description": "Disallow use of the `Buffer()` constructor",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-buffer-constructor"
      },
      "name": "no-buffer-constructor",
      "plugin": "eslint"
    },
    "no-caller": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `arguments.caller` or `arguments.callee`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-caller"
      },
      "name": "no-caller",
      "plugin": "eslint"
    },
    "no-case-declarations": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow lexical declarations in case clauses",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-case-declarations"
      },
      "hasSuggestions": true,
      "name": "no-case-declarations",
      "plugin": "eslint"
    },
    "no-catch-shadow": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `catch` clause parameters from shadowing variables in the outer scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-catch-shadow"
      },
      "deprecated": {
        "message": "This rule was renamed.",
        "url": "https://eslint.org/blog/2018/07/eslint-v5.1.0-released/",
        "deprecatedSince": "5.1.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-shadow",
              "url": "https://eslint.org/docs/rules/no-shadow"
            }
          }
        ]
      },
      "name": "no-catch-shadow",
      "plugin": "eslint"
    },
    "no-class-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning class members",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-class-assign"
      },
      "name": "no-class-assign",
      "plugin": "eslint"
    },
    "no-compare-neg-zero": {
      "type": "problem",
      "docs": {
        "description": "Disallow comparing against `-0`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-compare-neg-zero"
      },
      "fixable": null,
      "name": "no-compare-neg-zero",
      "plugin": "eslint"
    },
    "no-cond-assign": {
      "type": "problem",
      "defaultOptions": [
        "except-parens"
      ],
      "docs": {
        "description": "Disallow assignment operators in conditional expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-cond-assign"
      },
      "name": "no-cond-assign",
      "plugin": "eslint"
    },
    "no-confusing-arrow": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-confusing-arrow",
              "url": "https://eslint.style/rules/no-confusing-arrow"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow arrow functions where they could be confused with comparisons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-confusing-arrow"
      },
      "fixable": "code",
      "name": "no-confusing-arrow",
      "plugin": "eslint"
    },
    "no-console": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow the use of `console`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-console"
      },
      "hasSuggestions": true,
      "name": "no-console",
      "plugin": "eslint"
    },
    "no-const-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning `const`, `using`, and `await using` variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-const-assign"
      },
      "name": "no-const-assign",
      "plugin": "eslint"
    },
    "no-constant-binary-expression": {
      "type": "problem",
      "docs": {
        "description": "Disallow expressions where the operation doesn't affect the value",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-constant-binary-expression"
      },
      "name": "no-constant-binary-expression",
      "plugin": "eslint"
    },
    "no-constant-condition": {
      "type": "problem",
      "defaultOptions": [
        {
          "checkLoops": "allExceptWhileTrue"
        }
      ],
      "docs": {
        "description": "Disallow constant expressions in conditions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-constant-condition"
      },
      "name": "no-constant-condition",
      "plugin": "eslint"
    },
    "no-constructor-return": {
      "type": "problem",
      "docs": {
        "description": "Disallow returning value from constructor",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-constructor-return"
      },
      "fixable": null,
      "name": "no-constructor-return",
      "plugin": "eslint"
    },
    "no-continue": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `continue` statements",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-continue"
      },
      "name": "no-continue",
      "plugin": "eslint"
    },
    "no-control-regex": {
      "type": "problem",
      "docs": {
        "description": "Disallow control characters in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-control-regex"
      },
      "name": "no-control-regex",
      "plugin": "eslint"
    },
    "no-debugger": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of `debugger`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-debugger"
      },
      "fixable": null,
      "name": "no-debugger",
      "plugin": "eslint"
    },
    "no-delete-var": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow deleting variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-delete-var"
      },
      "name": "no-delete-var",
      "plugin": "eslint"
    },
    "no-div-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow equal signs explicitly at the beginning of regular expressions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-div-regex"
      },
      "fixable": "code",
      "name": "no-div-regex",
      "plugin": "eslint"
    },
    "no-dupe-args": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate arguments in `function` definitions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-args"
      },
      "name": "no-dupe-args",
      "plugin": "eslint"
    },
    "no-dupe-class-members": {
      "type": "problem",
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow duplicate class members",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-class-members"
      },
      "name": "no-dupe-class-members",
      "plugin": "eslint"
    },
    "no-dupe-else-if": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate conditions in if-else-if chains",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-else-if"
      },
      "name": "no-dupe-else-if",
      "plugin": "eslint"
    },
    "no-dupe-keys": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate keys in object literals",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-keys"
      },
      "name": "no-dupe-keys",
      "plugin": "eslint"
    },
    "no-duplicate-case": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate case labels",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-duplicate-case"
      },
      "name": "no-duplicate-case",
      "plugin": "eslint"
    },
    "no-duplicate-imports": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "problem",
      "defaultOptions": [
        {
          "includeExports": false,
          "allowSeparateTypeImports": false
        }
      ],
      "docs": {
        "description": "Disallow duplicate module imports",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-duplicate-imports"
      },
      "name": "no-duplicate-imports",
      "plugin": "eslint"
    },
    "no-else-return": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowElseIf": true
        }
      ],
      "docs": {
        "description": "Disallow `else` blocks after `return` statements in `if` statements",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-else-return"
      },
      "fixable": "code",
      "name": "no-else-return",
      "plugin": "eslint"
    },
    "no-empty": {
      "hasSuggestions": true,
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowEmptyCatch": false
        }
      ],
      "docs": {
        "description": "Disallow empty block statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty"
      },
      "name": "no-empty",
      "plugin": "eslint"
    },
    "no-empty-character-class": {
      "type": "problem",
      "docs": {
        "description": "Disallow empty character classes in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty-character-class"
      },
      "name": "no-empty-character-class",
      "plugin": "eslint"
    },
    "no-empty-function": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": []
        }
      ],
      "docs": {
        "description": "Disallow empty functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-empty-function"
      },
      "name": "no-empty-function",
      "plugin": "eslint"
    },
    "no-empty-pattern": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowObjectPatternsAsParameters": false
        }
      ],
      "docs": {
        "description": "Disallow empty destructuring patterns",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty-pattern"
      },
      "name": "no-empty-pattern",
      "plugin": "eslint"
    },
    "no-empty-static-block": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow empty static blocks",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty-static-block"
      },
      "name": "no-empty-static-block",
      "plugin": "eslint"
    },
    "no-eq-null": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `null` comparisons without type-checking operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-eq-null"
      },
      "name": "no-eq-null",
      "plugin": "eslint"
    },
    "no-eval": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowIndirect": false
        }
      ],
      "docs": {
        "description": "Disallow the use of `eval()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-eval"
      },
      "name": "no-eval",
      "plugin": "eslint"
    },
    "no-ex-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning exceptions in `catch` clauses",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-ex-assign"
      },
      "name": "no-ex-assign",
      "plugin": "eslint"
    },
    "no-extend-native": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "exceptions": []
        }
      ],
      "docs": {
        "description": "Disallow extending native types",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extend-native"
      },
      "name": "no-extend-native",
      "plugin": "eslint"
    },
    "no-extra-bind": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary calls to `.bind()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-bind"
      },
      "fixable": "code",
      "name": "no-extra-bind",
      "plugin": "eslint"
    },
    "no-extra-boolean-cast": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow unnecessary boolean casts",
        "recommended": true,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-extra-boolean-cast"
      },
      "fixable": "code",
      "name": "no-extra-boolean-cast",
      "plugin": "eslint"
    },
    "no-extra-label": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary labels",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-extra-label"
      },
      "fixable": "code",
      "name": "no-extra-label",
      "plugin": "eslint"
    },
    "no-extra-parens": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-extra-parens",
              "url": "https://eslint.style/rules/no-extra-parens"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow unnecessary parentheses",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-parens"
      },
      "fixable": "code",
      "name": "no-extra-parens",
      "plugin": "eslint"
    },
    "no-extra-semi": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-extra-semi",
              "url": "https://eslint.style/rules/no-extra-semi"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary semicolons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-semi"
      },
      "fixable": "code",
      "name": "no-extra-semi",
      "plugin": "eslint"
    },
    "no-fallthrough": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowEmptyCase": false,
          "reportUnusedFallthroughComment": false
        }
      ],
      "docs": {
        "description": "Disallow fallthrough of `case` statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-fallthrough"
      },
      "name": "no-fallthrough",
      "plugin": "eslint"
    },
    "no-floating-decimal": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-floating-decimal",
              "url": "https://eslint.style/rules/no-floating-decimal"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow leading or trailing decimal points in numeric literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-floating-decimal"
      },
      "fixable": "code",
      "name": "no-floating-decimal",
      "plugin": "eslint"
    },
    "no-func-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning `function` declarations",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-func-assign"
      },
      "name": "no-func-assign",
      "plugin": "eslint"
    },
    "no-global-assign": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "exceptions": []
        }
      ],
      "docs": {
        "description": "Disallow assignments to native objects or read-only global variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-global-assign"
      },
      "name": "no-global-assign",
      "plugin": "eslint"
    },
    "no-implicit-coercion": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Disallow shorthand type conversions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-implicit-coercion"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "allow": [],
          "boolean": true,
          "disallowTemplateShorthand": false,
          "number": true,
          "string": true
        }
      ],
      "name": "no-implicit-coercion",
      "plugin": "eslint"
    },
    "no-implicit-globals": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "lexicalBindings": false
        }
      ],
      "docs": {
        "description": "Disallow declarations in the global scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-implicit-globals"
      },
      "name": "no-implicit-globals",
      "plugin": "eslint"
    },
    "no-implied-eval": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `eval()`-like methods",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-implied-eval"
      },
      "name": "no-implied-eval",
      "plugin": "eslint"
    },
    "no-import-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow assigning to imported bindings",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-import-assign"
      },
      "name": "no-import-assign",
      "plugin": "eslint"
    },
    "no-inline-comments": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow inline comments after code",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-inline-comments"
      },
      "name": "no-inline-comments",
      "plugin": "eslint"
    },
    "no-inner-declarations": {
      "type": "problem",
      "defaultOptions": [
        "functions",
        {
          "blockScopedFunctions": "allow"
        }
      ],
      "docs": {
        "description": "Disallow variable or `function` declarations in nested blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-inner-declarations"
      },
      "name": "no-inner-declarations",
      "plugin": "eslint"
    },
    "no-invalid-regexp": {
      "type": "problem",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow invalid regular expression strings in `RegExp` constructors",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-invalid-regexp"
      },
      "name": "no-invalid-regexp",
      "plugin": "eslint"
    },
    "no-invalid-this": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "defaultOptions": [
        {
          "capIsConstructor": true
        }
      ],
      "docs": {
        "description": "Disallow use of `this` in contexts where the value of `this` is `undefined`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-invalid-this"
      },
      "name": "no-invalid-this",
      "plugin": "eslint"
    },
    "no-irregular-whitespace": {
      "type": "problem",
      "defaultOptions": [
        {
          "skipComments": false,
          "skipJSXText": false,
          "skipRegExps": false,
          "skipStrings": true,
          "skipTemplates": false
        }
      ],
      "docs": {
        "description": "Disallow irregular whitespace",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-irregular-whitespace"
      },
      "name": "no-irregular-whitespace",
      "plugin": "eslint"
    },
    "no-iterator": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of the `__iterator__` property",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-iterator"
      },
      "name": "no-iterator",
      "plugin": "eslint"
    },
    "no-label-var": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow labels that share a name with a variable",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-label-var"
      },
      "name": "no-label-var",
      "plugin": "eslint"
    },
    "no-labels": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowLoop": false,
          "allowSwitch": false
        }
      ],
      "docs": {
        "description": "Disallow labeled statements",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-labels"
      },
      "name": "no-labels",
      "plugin": "eslint"
    },
    "no-lone-blocks": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary nested blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-lone-blocks"
      },
      "name": "no-lone-blocks",
      "plugin": "eslint"
    },
    "no-lonely-if": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `if` statements as the only statement in `else` blocks",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-lonely-if"
      },
      "fixable": "code",
      "name": "no-lonely-if",
      "plugin": "eslint"
    },
    "no-loop-func": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow function declarations that contain unsafe references inside loop statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-loop-func"
      },
      "name": "no-loop-func",
      "plugin": "eslint"
    },
    "no-loss-of-precision": {
      "type": "problem",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow literal numbers that lose precision",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-loss-of-precision"
      },
      "name": "no-loss-of-precision",
      "plugin": "eslint"
    },
    "no-magic-numbers": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow magic numbers",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-magic-numbers"
      },
      "name": "no-magic-numbers",
      "plugin": "eslint"
    },
    "no-misleading-character-class": {
      "type": "problem",
      "docs": {
        "description": "Disallow characters which are made with multiple code points in character class syntax",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-misleading-character-class"
      },
      "hasSuggestions": true,
      "name": "no-misleading-character-class",
      "plugin": "eslint"
    },
    "no-mixed-operators": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-mixed-operators",
              "url": "https://eslint.style/rules/no-mixed-operators"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow mixed binary operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-mixed-operators"
      },
      "name": "no-mixed-operators",
      "plugin": "eslint"
    },
    "no-mixed-requires": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-mixed-requires",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-mixed-requires.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow `require` calls to be mixed with regular variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-mixed-requires"
      },
      "name": "no-mixed-requires",
      "plugin": "eslint"
    },
    "no-mixed-spaces-and-tabs": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-mixed-spaces-and-tabs",
              "url": "https://eslint.style/rules/no-mixed-spaces-and-tabs"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow mixed spaces and tabs for indentation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-mixed-spaces-and-tabs"
      },
      "name": "no-mixed-spaces-and-tabs",
      "plugin": "eslint"
    },
    "no-multi-assign": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "ignoreNonDeclaration": false
        }
      ],
      "docs": {
        "description": "Disallow use of chained assignment expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multi-assign"
      },
      "name": "no-multi-assign",
      "plugin": "eslint"
    },
    "no-multi-spaces": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-multi-spaces",
              "url": "https://eslint.style/rules/no-multi-spaces"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow multiple spaces",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multi-spaces"
      },
      "fixable": "whitespace",
      "name": "no-multi-spaces",
      "plugin": "eslint"
    },
    "no-multi-str": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow multiline strings",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-multi-str"
      },
      "name": "no-multi-str",
      "plugin": "eslint"
    },
    "no-multiple-empty-lines": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-multiple-empty-lines",
              "url": "https://eslint.style/rules/no-multiple-empty-lines"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow multiple empty lines",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multiple-empty-lines"
      },
      "fixable": "whitespace",
      "name": "no-multiple-empty-lines",
      "plugin": "eslint"
    },
    "no-native-reassign": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow assignments to native objects or read-only global variables",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-native-reassign"
      },
      "deprecated": {
        "message": "Renamed rule.",
        "url": "https://eslint.org/blog/2016/08/eslint-v3.3.0-released/#deprecated-rules",
        "deprecatedSince": "3.3.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-global-assign",
              "url": "https://eslint.org/docs/rules/no-global-assign"
            }
          }
        ]
      },
      "name": "no-native-reassign",
      "plugin": "eslint"
    },
    "no-negated-condition": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow negated conditions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-negated-condition"
      },
      "name": "no-negated-condition",
      "plugin": "eslint"
    },
    "no-negated-in-lhs": {
      "type": "problem",
      "docs": {
        "description": "Disallow negating the left operand in `in` expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-negated-in-lhs"
      },
      "deprecated": {
        "message": "Renamed rule.",
        "url": "https://eslint.org/blog/2016/08/eslint-v3.3.0-released/#deprecated-rules",
        "deprecatedSince": "3.3.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-unsafe-negation",
              "url": "https://eslint.org/docs/rules/no-unsafe-negation"
            }
          }
        ]
      },
      "name": "no-negated-in-lhs",
      "plugin": "eslint"
    },
    "no-nested-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow nested ternary expressions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-nested-ternary"
      },
      "name": "no-nested-ternary",
      "plugin": "eslint"
    },
    "no-new": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators outside of assignments or comparisons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new"
      },
      "name": "no-new",
      "plugin": "eslint"
    },
    "no-new-func": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators with the `Function` object",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-func"
      },
      "name": "no-new-func",
      "plugin": "eslint"
    },
    "no-new-native-nonconstructor": {
      "type": "problem",
      "docs": {
        "description": "Disallow `new` operators with global non-constructor functions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"
      },
      "name": "no-new-native-nonconstructor",
      "plugin": "eslint"
    },
    "no-new-object": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `Object` constructors",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-object"
      },
      "deprecated": {
        "message": "The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.",
        "url": "https://eslint.org/blog/2023/09/eslint-v8.50.0-released/",
        "deprecatedSince": "8.50.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-object-constructor",
              "url": "https://eslint.org/docs/rules/no-object-constructor"
            }
          }
        ]
      },
      "name": "no-new-object",
      "plugin": "eslint"
    },
    "no-new-require": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-new-require",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-new-require.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators with calls to `require`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-require"
      },
      "name": "no-new-require",
      "plugin": "eslint"
    },
    "no-new-symbol": {
      "type": "problem",
      "docs": {
        "description": "Disallow `new` operators with the `Symbol` object",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-symbol"
      },
      "deprecated": {
        "message": "The rule was replaced with a more general rule.",
        "url": "https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended",
        "deprecatedSince": "9.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-new-native-nonconstructor",
              "url": "https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"
            }
          }
        ]
      },
      "name": "no-new-symbol",
      "plugin": "eslint"
    },
    "no-new-wrappers": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators with the `String`, `Number`, and `Boolean` objects",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-wrappers"
      },
      "name": "no-new-wrappers",
      "plugin": "eslint"
    },
    "no-nonoctal-decimal-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `\\8` and `\\9` escape sequences in string literals",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-nonoctal-decimal-escape"
      },
      "hasSuggestions": true,
      "name": "no-nonoctal-decimal-escape",
      "plugin": "eslint"
    },
    "no-obj-calls": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling global object properties as functions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-obj-calls"
      },
      "name": "no-obj-calls",
      "plugin": "eslint"
    },
    "no-object-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow calls to the `Object` constructor without an argument",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-object-constructor"
      },
      "hasSuggestions": true,
      "name": "no-object-constructor",
      "plugin": "eslint"
    },
    "no-octal": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow octal literals",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-octal"
      },
      "name": "no-octal",
      "plugin": "eslint"
    },
    "no-octal-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow octal escape sequences in string literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-octal-escape"
      },
      "name": "no-octal-escape",
      "plugin": "eslint"
    },
    "no-param-reassign": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow reassigning function parameters",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-param-reassign"
      },
      "name": "no-param-reassign",
      "plugin": "eslint"
    },
    "no-path-concat": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-path-concat",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-path-concat.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow string concatenation with `__dirname` and `__filename`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-path-concat"
      },
      "name": "no-path-concat",
      "plugin": "eslint"
    },
    "no-plusplus": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowForLoopAfterthoughts": false
        }
      ],
      "docs": {
        "description": "Disallow the unary operators `++` and `--`",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-plusplus"
      },
      "name": "no-plusplus",
      "plugin": "eslint"
    },
    "no-process-env": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-process-env",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-process-env.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `process.env`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-process-env"
      },
      "name": "no-process-env",
      "plugin": "eslint"
    },
    "no-process-exit": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-process-exit",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-process-exit.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `process.exit()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-process-exit"
      },
      "name": "no-process-exit",
      "plugin": "eslint"
    },
    "no-promise-executor-return": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowVoid": false
        }
      ],
      "docs": {
        "description": "Disallow returning values from Promise executor functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-promise-executor-return"
      },
      "hasSuggestions": true,
      "name": "no-promise-executor-return",
      "plugin": "eslint"
    },
    "no-proto": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of the `__proto__` property",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-proto"
      },
      "name": "no-proto",
      "plugin": "eslint"
    },
    "no-prototype-builtins": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling some `Object.prototype` methods directly on objects",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-prototype-builtins"
      },
      "hasSuggestions": true,
      "name": "no-prototype-builtins",
      "plugin": "eslint"
    },
    "no-redeclare": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "builtinGlobals": true
        }
      ],
      "docs": {
        "description": "Disallow variable redeclaration",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-redeclare"
      },
      "name": "no-redeclare",
      "plugin": "eslint"
    },
    "no-regex-spaces": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow multiple spaces in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-regex-spaces"
      },
      "fixable": "code",
      "name": "no-regex-spaces",
      "plugin": "eslint"
    },
    "no-restricted-exports": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified names in exports",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-exports"
      },
      "name": "no-restricted-exports",
      "plugin": "eslint"
    },
    "no-restricted-globals": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified global variables",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-globals"
      },
      "name": "no-restricted-globals",
      "plugin": "eslint"
    },
    "no-restricted-imports": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified modules when loaded by `import`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-imports"
      },
      "name": "no-restricted-imports",
      "plugin": "eslint"
    },
    "no-restricted-modules": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-restricted-require",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-restricted-require.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified modules when loaded by `require`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-modules"
      },
      "name": "no-restricted-modules",
      "plugin": "eslint"
    },
    "no-restricted-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain properties on certain objects",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-properties"
      },
      "name": "no-restricted-properties",
      "plugin": "eslint"
    },
    "no-restricted-syntax": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified syntax",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-syntax"
      },
      "name": "no-restricted-syntax",
      "plugin": "eslint"
    },
    "no-return-assign": {
      "type": "suggestion",
      "defaultOptions": [
        "except-parens"
      ],
      "docs": {
        "description": "Disallow assignment operators in `return` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-return-assign"
      },
      "name": "no-return-assign",
      "plugin": "eslint"
    },
    "no-return-await": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary `return await`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-return-await"
      },
      "fixable": null,
      "deprecated": {
        "message": "The original assumption of the rule no longer holds true because of engine optimization.",
        "deprecatedSince": "8.46.0",
        "availableUntil": null,
        "replacedBy": []
      },
      "name": "no-return-await",
      "plugin": "eslint"
    },
    "no-script-url": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `javascript:` URLs",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-script-url"
      },
      "name": "no-script-url",
      "plugin": "eslint"
    },
    "no-self-assign": {
      "type": "problem",
      "defaultOptions": [
        {
          "props": true
        }
      ],
      "docs": {
        "description": "Disallow assignments where both sides are exactly the same",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-self-assign"
      },
      "name": "no-self-assign",
      "plugin": "eslint"
    },
    "no-self-compare": {
      "type": "problem",
      "docs": {
        "description": "Disallow comparisons where both sides are exactly the same",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-self-compare"
      },
      "name": "no-self-compare",
      "plugin": "eslint"
    },
    "no-sequences": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow comma operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-sequences"
      },
      "defaultOptions": [
        {
          "allowInParentheses": true
        }
      ],
      "name": "no-sequences",
      "plugin": "eslint"
    },
    "no-setter-return": {
      "type": "problem",
      "docs": {
        "description": "Disallow returning values from setters",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-setter-return"
      },
      "name": "no-setter-return",
      "plugin": "eslint"
    },
    "no-shadow": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "defaultOptions": [
        {
          "allow": [],
          "builtinGlobals": false,
          "hoist": "functions",
          "ignoreOnInitialization": false,
          "ignoreTypeValueShadow": true,
          "ignoreFunctionTypeParameterNameValueShadow": true
        }
      ],
      "docs": {
        "description": "Disallow variable declarations from shadowing variables declared in the outer scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-shadow"
      },
      "name": "no-shadow",
      "plugin": "eslint"
    },
    "no-shadow-restricted-names": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "reportGlobalThis": false
        }
      ],
      "docs": {
        "description": "Disallow identifiers from shadowing restricted names",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-shadow-restricted-names"
      },
      "name": "no-shadow-restricted-names",
      "plugin": "eslint"
    },
    "no-spaced-func": {
      "type": "layout",
      "docs": {
        "description": "Disallow spacing between function identifiers and their applications (deprecated)",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-spaced-func"
      },
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2016/08/eslint-v3.3.0-released/#deprecated-rules",
        "deprecatedSince": "3.3.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "function-call-spacing",
              "url": "https://eslint.style/rules/function-call-spacing"
            }
          }
        ]
      },
      "fixable": "whitespace",
      "name": "no-spaced-func",
      "plugin": "eslint"
    },
    "no-sparse-arrays": {
      "type": "problem",
      "docs": {
        "description": "Disallow sparse arrays",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-sparse-arrays"
      },
      "name": "no-sparse-arrays",
      "plugin": "eslint"
    },
    "no-sync": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-sync",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-sync.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow synchronous methods",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-sync"
      },
      "name": "no-sync",
      "plugin": "eslint"
    },
    "no-tabs": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-tabs",
              "url": "https://eslint.style/rules/no-tabs"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow all tabs",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-tabs"
      },
      "name": "no-tabs",
      "plugin": "eslint"
    },
    "no-template-curly-in-string": {
      "type": "problem",
      "docs": {
        "description": "Disallow template literal placeholder syntax in regular strings",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-template-curly-in-string"
      },
      "name": "no-template-curly-in-string",
      "plugin": "eslint"
    },
    "no-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow ternary operators",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-ternary"
      },
      "name": "no-ternary",
      "plugin": "eslint"
    },
    "no-this-before-super": {
      "type": "problem",
      "docs": {
        "description": "Disallow `this`/`super` before calling `super()` in constructors",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-this-before-super"
      },
      "name": "no-this-before-super",
      "plugin": "eslint"
    },
    "no-throw-literal": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow throwing literals as exceptions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-throw-literal"
      },
      "name": "no-throw-literal",
      "plugin": "eslint"
    },
    "no-trailing-spaces": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-trailing-spaces",
              "url": "https://eslint.style/rules/no-trailing-spaces"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow trailing whitespace at the end of lines",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-trailing-spaces"
      },
      "fixable": "whitespace",
      "name": "no-trailing-spaces",
      "plugin": "eslint"
    },
    "no-unassigned-vars": {
      "type": "problem",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow `let` or `var` variables that are read but never assigned",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unassigned-vars"
      },
      "name": "no-unassigned-vars",
      "plugin": "eslint"
    },
    "no-undef": {
      "type": "problem",
      "defaultOptions": [
        {
          "typeof": false
        }
      ],
      "docs": {
        "description": "Disallow the use of undeclared variables unless mentioned in `/*global */` comments",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-undef"
      },
      "name": "no-undef",
      "plugin": "eslint"
    },
    "no-undef-init": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow initializing variables to `undefined`",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-undef-init"
      },
      "fixable": "code",
      "name": "no-undef-init",
      "plugin": "eslint"
    },
    "no-undefined": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `undefined` as an identifier",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-undefined"
      },
      "name": "no-undefined",
      "plugin": "eslint"
    },
    "no-underscore-dangle": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "allowAfterSuper": false,
          "allowAfterThis": false,
          "allowAfterThisConstructor": false,
          "allowFunctionParams": true,
          "allowInArrayDestructuring": true,
          "allowInObjectDestructuring": true,
          "enforceInClassFields": false,
          "enforceInMethodNames": false
        }
      ],
      "docs": {
        "description": "Disallow dangling underscores in identifiers",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-underscore-dangle"
      },
      "name": "no-underscore-dangle",
      "plugin": "eslint"
    },
    "no-unexpected-multiline": {
      "type": "problem",
      "docs": {
        "description": "Disallow confusing multiline expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unexpected-multiline"
      },
      "name": "no-unexpected-multiline",
      "plugin": "eslint"
    },
    "no-unmodified-loop-condition": {
      "type": "problem",
      "docs": {
        "description": "Disallow unmodified loop conditions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unmodified-loop-condition"
      },
      "name": "no-unmodified-loop-condition",
      "plugin": "eslint"
    },
    "no-unneeded-ternary": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "defaultAssignment": true
        }
      ],
      "docs": {
        "description": "Disallow ternary operators when simpler alternatives exist",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-unneeded-ternary"
      },
      "fixable": "code",
      "name": "no-unneeded-ternary",
      "plugin": "eslint"
    },
    "no-unreachable": {
      "type": "problem",
      "docs": {
        "description": "Disallow unreachable code after `return`, `throw`, `continue`, and `break` statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unreachable"
      },
      "name": "no-unreachable",
      "plugin": "eslint"
    },
    "no-unreachable-loop": {
      "type": "problem",
      "defaultOptions": [
        {
          "ignore": []
        }
      ],
      "docs": {
        "description": "Disallow loops with a body that allows only one iteration",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unreachable-loop"
      },
      "name": "no-unreachable-loop",
      "plugin": "eslint"
    },
    "no-unsafe-finally": {
      "type": "problem",
      "docs": {
        "description": "Disallow control flow statements in `finally` blocks",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unsafe-finally"
      },
      "name": "no-unsafe-finally",
      "plugin": "eslint"
    },
    "no-unsafe-negation": {
      "type": "problem",
      "defaultOptions": [
        {
          "enforceForOrderingRelations": false
        }
      ],
      "docs": {
        "description": "Disallow negating the left operand of relational operators",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unsafe-negation"
      },
      "hasSuggestions": true,
      "fixable": null,
      "name": "no-unsafe-negation",
      "plugin": "eslint"
    },
    "no-unsafe-optional-chaining": {
      "type": "problem",
      "defaultOptions": [
        {
          "disallowArithmeticOperators": false
        }
      ],
      "docs": {
        "description": "Disallow use of optional chaining in contexts where the `undefined` value is not allowed",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining"
      },
      "fixable": null,
      "name": "no-unsafe-optional-chaining",
      "plugin": "eslint"
    },
    "no-unused-expressions": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Disallow unused expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unused-expressions"
      },
      "defaultOptions": [
        {
          "allowShortCircuit": false,
          "allowTernary": false,
          "allowTaggedTemplates": false,
          "enforceForJSX": false,
          "ignoreDirectives": false
        }
      ],
      "name": "no-unused-expressions",
      "plugin": "eslint"
    },
    "no-unused-labels": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unused labels",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unused-labels"
      },
      "fixable": "code",
      "name": "no-unused-labels",
      "plugin": "eslint"
    },
    "no-unused-private-class-members": {
      "type": "problem",
      "docs": {
        "description": "Disallow unused private class members",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unused-private-class-members"
      },
      "name": "no-unused-private-class-members",
      "plugin": "eslint"
    },
    "no-unused-vars": {
      "type": "problem",
      "docs": {
        "description": "Disallow unused variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unused-vars"
      },
      "hasSuggestions": true,
      "name": "no-unused-vars",
      "plugin": "eslint"
    },
    "no-use-before-define": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "problem",
      "docs": {
        "description": "Disallow the use of variables before they are defined",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-use-before-define"
      },
      "defaultOptions": [
        {
          "classes": true,
          "functions": true,
          "variables": true,
          "allowNamedExports": false,
          "enums": true,
          "typedefs": true,
          "ignoreTypeReferences": true
        }
      ],
      "name": "no-use-before-define",
      "plugin": "eslint"
    },
    "no-useless-assignment": {
      "type": "problem",
      "docs": {
        "description": "Disallow variable assignments when the value is not used",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-assignment"
      },
      "name": "no-useless-assignment",
      "plugin": "eslint"
    },
    "no-useless-backreference": {
      "type": "problem",
      "docs": {
        "description": "Disallow useless backreferences in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-backreference"
      },
      "name": "no-useless-backreference",
      "plugin": "eslint"
    },
    "no-useless-call": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary calls to `.call()` and `.apply()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-call"
      },
      "name": "no-useless-call",
      "plugin": "eslint"
    },
    "no-useless-catch": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary `catch` clauses",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-catch"
      },
      "name": "no-useless-catch",
      "plugin": "eslint"
    },
    "no-useless-computed-key": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "enforceForClassMembers": true
        }
      ],
      "docs": {
        "description": "Disallow unnecessary computed property keys in objects and classes",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-computed-key"
      },
      "fixable": "code",
      "name": "no-useless-computed-key",
      "plugin": "eslint"
    },
    "no-useless-concat": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary concatenation of literals or template literals",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-concat"
      },
      "name": "no-useless-concat",
      "plugin": "eslint"
    },
    "no-useless-constructor": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary constructors",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-constructor"
      },
      "hasSuggestions": true,
      "name": "no-useless-constructor",
      "plugin": "eslint"
    },
    "no-useless-escape": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowRegexCharacters": []
        }
      ],
      "docs": {
        "description": "Disallow unnecessary escape characters",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-escape"
      },
      "hasSuggestions": true,
      "name": "no-useless-escape",
      "plugin": "eslint"
    },
    "no-useless-rename": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "ignoreDestructuring": false,
          "ignoreImport": false,
          "ignoreExport": false
        }
      ],
      "docs": {
        "description": "Disallow renaming import, export, and destructured assignments to the same name",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-rename"
      },
      "fixable": "code",
      "name": "no-useless-rename",
      "plugin": "eslint"
    },
    "no-useless-return": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow redundant return statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-return"
      },
      "fixable": "code",
      "name": "no-useless-return",
      "plugin": "eslint"
    },
    "no-var": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Require `let` or `const` instead of `var`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-var"
      },
      "fixable": "code",
      "name": "no-var",
      "plugin": "eslint"
    },
    "no-void": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowAsStatement": false
        }
      ],
      "docs": {
        "description": "Disallow `void` operators",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-void"
      },
      "name": "no-void",
      "plugin": "eslint"
    },
    "no-warning-comments": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "location": "start",
          "terms": [
            "todo",
            "fixme",
            "xxx"
          ]
        }
      ],
      "docs": {
        "description": "Disallow specified warning terms in comments",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-warning-comments"
      },
      "name": "no-warning-comments",
      "plugin": "eslint"
    },
    "no-whitespace-before-property": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-whitespace-before-property",
              "url": "https://eslint.style/rules/no-whitespace-before-property"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow whitespace before properties",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-whitespace-before-property"
      },
      "fixable": "whitespace",
      "name": "no-whitespace-before-property",
      "plugin": "eslint"
    },
    "no-with": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `with` statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-with"
      },
      "name": "no-with",
      "plugin": "eslint"
    },
    "nonblock-statement-body-position": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "nonblock-statement-body-position",
              "url": "https://eslint.style/rules/nonblock-statement-body-position"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce the location of single-line statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/nonblock-statement-body-position"
      },
      "fixable": "whitespace",
      "name": "nonblock-statement-body-position",
      "plugin": "eslint"
    },
    "object-curly-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "object-curly-newline",
              "url": "https://eslint.style/rules/object-curly-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent line breaks after opening and before closing braces",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-curly-newline"
      },
      "fixable": "whitespace",
      "name": "object-curly-newline",
      "plugin": "eslint"
    },
    "object-curly-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "object-curly-spacing",
              "url": "https://eslint.style/rules/object-curly-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside braces",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-curly-spacing"
      },
      "fixable": "whitespace",
      "name": "object-curly-spacing",
      "plugin": "eslint"
    },
    "object-property-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "object-property-newline",
              "url": "https://eslint.style/rules/object-property-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce placing object properties on separate lines",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-property-newline"
      },
      "fixable": "whitespace",
      "name": "object-property-newline",
      "plugin": "eslint"
    },
    "object-shorthand": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow method and property shorthand syntax for object literals",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/object-shorthand"
      },
      "fixable": "code",
      "name": "object-shorthand",
      "plugin": "eslint"
    },
    "one-var": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce variables to be declared either together or separately in functions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/one-var"
      },
      "fixable": "code",
      "name": "one-var",
      "plugin": "eslint"
    },
    "one-var-declaration-per-line": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "one-var-declaration-per-line",
              "url": "https://eslint.style/rules/one-var-declaration-per-line"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow newlines around variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/one-var-declaration-per-line"
      },
      "fixable": "whitespace",
      "name": "one-var-declaration-per-line",
      "plugin": "eslint"
    },
    "operator-assignment": {
      "type": "suggestion",
      "defaultOptions": [
        "always"
      ],
      "docs": {
        "description": "Require or disallow assignment operator shorthand where possible",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/operator-assignment"
      },
      "fixable": "code",
      "name": "operator-assignment",
      "plugin": "eslint"
    },
    "operator-linebreak": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "operator-linebreak",
              "url": "https://eslint.style/rules/operator-linebreak"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreak style for operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/operator-linebreak"
      },
      "fixable": "code",
      "name": "operator-linebreak",
      "plugin": "eslint"
    },
    "padded-blocks": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padded-blocks",
              "url": "https://eslint.style/rules/padded-blocks"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow padding within blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/padded-blocks"
      },
      "fixable": "whitespace",
      "name": "padded-blocks",
      "plugin": "eslint"
    },
    "padding-line-between-statements": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padding-line-between-statements",
              "url": "https://eslint.style/rules/padding-line-between-statements"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow padding lines between statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/padding-line-between-statements"
      },
      "fixable": "whitespace",
      "name": "padding-line-between-statements",
      "plugin": "eslint"
    },
    "prefer-arrow-callback": {
      "type": "suggestion",
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "defaultOptions": [
        {
          "allowNamedFunctions": false,
          "allowUnboundThis": true
        }
      ],
      "docs": {
        "description": "Require using arrow functions for callbacks",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-arrow-callback"
      },
      "fixable": "code",
      "name": "prefer-arrow-callback",
      "plugin": "eslint"
    },
    "prefer-const": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "destructuring": "any",
          "ignoreReadBeforeAssign": false
        }
      ],
      "docs": {
        "description": "Require `const` declarations for variables that are never reassigned after declared",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-const"
      },
      "fixable": "code",
      "name": "prefer-const",
      "plugin": "eslint"
    },
    "prefer-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Require destructuring from arrays and/or objects",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-destructuring"
      },
      "fixable": "code",
      "name": "prefer-destructuring",
      "plugin": "eslint"
    },
    "prefer-exponentiation-operator": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `Math.pow` in favor of the `**` operator",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-exponentiation-operator"
      },
      "fixable": "code",
      "name": "prefer-exponentiation-operator",
      "plugin": "eslint"
    },
    "prefer-named-capture-group": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using named capture group in regular expression",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-named-capture-group"
      },
      "hasSuggestions": true,
      "name": "prefer-named-capture-group",
      "plugin": "eslint"
    },
    "prefer-numeric-literals": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-numeric-literals"
      },
      "fixable": "code",
      "name": "prefer-numeric-literals",
      "plugin": "eslint"
    },
    "prefer-object-has-own": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow use of `Object.prototype.hasOwnProperty.call()` and prefer use of `Object.hasOwn()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-object-has-own"
      },
      "fixable": "code",
      "name": "prefer-object-has-own",
      "plugin": "eslint"
    },
    "prefer-object-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-object-spread"
      },
      "fixable": "code",
      "name": "prefer-object-spread",
      "plugin": "eslint"
    },
    "prefer-promise-reject-errors": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowEmptyReject": false
        }
      ],
      "docs": {
        "description": "Require using Error objects as Promise rejection reasons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-promise-reject-errors"
      },
      "fixable": null,
      "name": "prefer-promise-reject-errors",
      "plugin": "eslint"
    },
    "prefer-reflect": {
      "type": "suggestion",
      "docs": {
        "description": "Require `Reflect` methods where applicable",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-reflect"
      },
      "deprecated": {
        "message": "The original intention of this rule was misguided.",
        "deprecatedSince": "3.9.0",
        "availableUntil": null,
        "replacedBy": []
      },
      "name": "prefer-reflect",
      "plugin": "eslint"
    },
    "prefer-regex-literals": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "disallowRedundantWrapping": false
        }
      ],
      "docs": {
        "description": "Disallow use of the `RegExp` constructor in favor of regular expression literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-regex-literals"
      },
      "hasSuggestions": true,
      "name": "prefer-regex-literals",
      "plugin": "eslint"
    },
    "prefer-rest-params": {
      "type": "suggestion",
      "docs": {
        "description": "Require rest parameters instead of `arguments`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-rest-params"
      },
      "name": "prefer-rest-params",
      "plugin": "eslint"
    },
    "prefer-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Require spread operators instead of `.apply()`",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-spread"
      },
      "fixable": null,
      "name": "prefer-spread",
      "plugin": "eslint"
    },
    "prefer-template": {
      "type": "suggestion",
      "docs": {
        "description": "Require template literals instead of string concatenation",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-template"
      },
      "fixable": "code",
      "name": "prefer-template",
      "plugin": "eslint"
    },
    "quote-props": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "quote-props",
              "url": "https://eslint.style/rules/quote-props"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require quotes around object literal property names",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/quote-props"
      },
      "fixable": "code",
      "name": "quote-props",
      "plugin": "eslint"
    },
    "quotes": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "quotes",
              "url": "https://eslint.style/rules/quotes"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce the consistent use of either backticks, double, or single quotes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/quotes"
      },
      "fixable": "code",
      "name": "quotes",
      "plugin": "eslint"
    },
    "radix": {
      "type": "suggestion",
      "defaultOptions": [
        "always"
      ],
      "docs": {
        "description": "Enforce the consistent use of the radix argument when using `parseInt()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/radix"
      },
      "hasSuggestions": true,
      "name": "radix",
      "plugin": "eslint"
    },
    "require-atomic-updates": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowProperties": false
        }
      ],
      "docs": {
        "description": "Disallow assignments that can lead to race conditions due to usage of `await` or `yield`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/require-atomic-updates"
      },
      "fixable": null,
      "name": "require-atomic-updates",
      "plugin": "eslint"
    },
    "require-await": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow async functions which have no `await` expression",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/require-await"
      },
      "hasSuggestions": true,
      "name": "require-await",
      "plugin": "eslint"
    },
    "require-unicode-regexp": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `u` or `v` flag on regular expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/require-unicode-regexp"
      },
      "hasSuggestions": true,
      "name": "require-unicode-regexp",
      "plugin": "eslint"
    },
    "require-yield": {
      "type": "suggestion",
      "docs": {
        "description": "Require generator functions to contain `yield`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/require-yield"
      },
      "name": "require-yield",
      "plugin": "eslint"
    },
    "rest-spread-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "rest-spread-spacing",
              "url": "https://eslint.style/rules/rest-spread-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce spacing between rest and spread operators and their expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/rest-spread-spacing"
      },
      "fixable": "whitespace",
      "name": "rest-spread-spacing",
      "plugin": "eslint"
    },
    "semi": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "semi",
              "url": "https://eslint.style/rules/semi"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow semicolons instead of ASI",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/semi"
      },
      "fixable": "code",
      "name": "semi",
      "plugin": "eslint"
    },
    "semi-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "semi-spacing",
              "url": "https://eslint.style/rules/semi-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after semicolons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/semi-spacing"
      },
      "fixable": "whitespace",
      "name": "semi-spacing",
      "plugin": "eslint"
    },
    "semi-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "semi-style",
              "url": "https://eslint.style/rules/semi-style"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce location of semicolons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/semi-style"
      },
      "fixable": "whitespace",
      "name": "semi-style",
      "plugin": "eslint"
    },
    "sort-imports": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowSeparatedGroups": false,
          "ignoreCase": false,
          "ignoreDeclarationSort": false,
          "ignoreMemberSort": false,
          "memberSyntaxSortOrder": [
            "none",
            "all",
            "multiple",
            "single"
          ]
        }
      ],
      "docs": {
        "description": "Enforce sorted `import` declarations within modules",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/sort-imports"
      },
      "fixable": "code",
      "name": "sort-imports",
      "plugin": "eslint"
    },
    "sort-keys": {
      "type": "suggestion",
      "defaultOptions": [
        "asc",
        {
          "allowLineSeparatedGroups": false,
          "caseSensitive": true,
          "ignoreComputedKeys": false,
          "minKeys": 2,
          "natural": false
        }
      ],
      "docs": {
        "description": "Require object keys to be sorted",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/sort-keys"
      },
      "name": "sort-keys",
      "plugin": "eslint"
    },
    "sort-vars": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "ignoreCase": false
        }
      ],
      "docs": {
        "description": "Require variables within the same declaration block to be sorted",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/sort-vars"
      },
      "fixable": "code",
      "name": "sort-vars",
      "plugin": "eslint"
    },
    "space-before-blocks": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-before-blocks",
              "url": "https://eslint.style/rules/space-before-blocks"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-before-blocks"
      },
      "fixable": "whitespace",
      "name": "space-before-blocks",
      "plugin": "eslint"
    },
    "space-before-function-paren": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-before-function-paren",
              "url": "https://eslint.style/rules/space-before-function-paren"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before `function` definition opening parenthesis",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-before-function-paren"
      },
      "fixable": "whitespace",
      "name": "space-before-function-paren",
      "plugin": "eslint"
    },
    "space-in-parens": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-in-parens",
              "url": "https://eslint.style/rules/space-in-parens"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside parentheses",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-in-parens"
      },
      "fixable": "whitespace",
      "name": "space-in-parens",
      "plugin": "eslint"
    },
    "space-infix-ops": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-infix-ops",
              "url": "https://eslint.style/rules/space-infix-ops"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require spacing around infix operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-infix-ops"
      },
      "fixable": "whitespace",
      "name": "space-infix-ops",
      "plugin": "eslint"
    },
    "space-unary-ops": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-unary-ops",
              "url": "https://eslint.style/rules/space-unary-ops"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before or after unary operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-unary-ops"
      },
      "fixable": "whitespace",
      "name": "space-unary-ops",
      "plugin": "eslint"
    },
    "spaced-comment": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "spaced-comment",
              "url": "https://eslint.style/rules/spaced-comment"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent spacing after the `//` or `/*` in a comment",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/spaced-comment"
      },
      "fixable": "whitespace",
      "name": "spaced-comment",
      "plugin": "eslint"
    },
    "strict": {
      "type": "suggestion",
      "defaultOptions": [
        "safe"
      ],
      "docs": {
        "description": "Require or disallow strict mode directives",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/strict"
      },
      "fixable": "code",
      "name": "strict",
      "plugin": "eslint"
    },
    "switch-colon-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "switch-colon-spacing",
              "url": "https://eslint.style/rules/switch-colon-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce spacing around colons of switch statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/switch-colon-spacing"
      },
      "fixable": "whitespace",
      "name": "switch-colon-spacing",
      "plugin": "eslint"
    },
    "symbol-description": {
      "type": "suggestion",
      "docs": {
        "description": "Require symbol descriptions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/symbol-description"
      },
      "fixable": null,
      "name": "symbol-description",
      "plugin": "eslint"
    },
    "template-curly-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "template-curly-spacing",
              "url": "https://eslint.style/rules/template-curly-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing around embedded expressions of template strings",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/template-curly-spacing"
      },
      "fixable": "whitespace",
      "name": "template-curly-spacing",
      "plugin": "eslint"
    },
    "template-tag-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "template-tag-spacing",
              "url": "https://eslint.style/rules/template-tag-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing between template tags and their literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/template-tag-spacing"
      },
      "fixable": "whitespace",
      "name": "template-tag-spacing",
      "plugin": "eslint"
    },
    "unicode-bom": {
      "type": "layout",
      "defaultOptions": [
        "never"
      ],
      "docs": {
        "description": "Require or disallow Unicode byte order mark (BOM)",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/unicode-bom"
      },
      "fixable": "whitespace",
      "name": "unicode-bom",
      "plugin": "eslint"
    },
    "use-isnan": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Require calls to `isNaN()` when checking for `NaN`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/use-isnan"
      },
      "defaultOptions": [
        {
          "enforceForIndexOf": false,
          "enforceForSwitchCase": true
        }
      ],
      "name": "use-isnan",
      "plugin": "eslint"
    },
    "valid-typeof": {
      "type": "problem",
      "defaultOptions": [
        {
          "requireStringLiterals": false
        }
      ],
      "docs": {
        "description": "Enforce comparing `typeof` expressions against valid strings",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/valid-typeof"
      },
      "hasSuggestions": true,
      "name": "valid-typeof",
      "plugin": "eslint"
    },
    "vars-on-top": {
      "type": "suggestion",
      "docs": {
        "description": "Require `var` declarations be placed at the top of their containing scope",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/vars-on-top"
      },
      "name": "vars-on-top",
      "plugin": "eslint"
    },
    "wrap-iife": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "wrap-iife",
              "url": "https://eslint.style/rules/wrap-iife"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require parentheses around immediate `function` invocations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/wrap-iife"
      },
      "fixable": "code",
      "name": "wrap-iife",
      "plugin": "eslint"
    },
    "wrap-regex": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "wrap-regex",
              "url": "https://eslint.style/rules/wrap-regex"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require parenthesis around regex literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/wrap-regex"
      },
      "fixable": "code",
      "name": "wrap-regex",
      "plugin": "eslint"
    },
    "yield-star-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "yield-star-spacing",
              "url": "https://eslint.style/rules/yield-star-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing around the `*` in `yield*` expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/yield-star-spacing"
      },
      "fixable": "whitespace",
      "name": "yield-star-spacing",
      "plugin": "eslint"
    },
    "yoda": {
      "type": "suggestion",
      "defaultOptions": [
        "never",
        {
          "exceptRange": false,
          "onlyEquality": false
        }
      ],
      "docs": {
        "description": "Require or disallow \"Yoda\" conditions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/yoda"
      },
      "fixable": "code",
      "name": "yoda",
      "plugin": "eslint"
    },
    "sonarjs/function-name": {
      "type": "suggestion",
      "docs": {
        "description": "Function and method names should comply with a naming convention",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S100/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "format": "^[_a-z][a-zA-Z0-9]*$"
        }
      ],
      "name": "sonarjs/function-name",
      "plugin": "sonarjs"
    },
    "sonarjs/class-name": {
      "type": "suggestion",
      "docs": {
        "description": "Class names should comply with a naming convention",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S101/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "format": "^[A-Z][a-zA-Z0-9]*$"
        }
      ],
      "name": "sonarjs/class-name",
      "plugin": "sonarjs"
    },
    "sonarjs/max-lines": {
      "type": "suggestion",
      "docs": {
        "description": "Files should not have too many lines of code",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S104/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "maximum": 1000
        }
      ],
      "name": "sonarjs/max-lines",
      "plugin": "sonarjs"
    },
    "sonarjs/no-tab": {
      "type": "suggestion",
      "docs": {
        "description": "Tabulation characters should not be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S105/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/no-tab",
      "plugin": "sonarjs"
    },
    "sonarjs/variable-name": {
      "type": "suggestion",
      "docs": {
        "description": "Variable, property and parameter names should comply with a naming convention",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S117/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "format": "^[_$A-Za-z][$A-Za-z0-9]*$|^[_$A-Z][_$A-Z0-9]+$"
        }
      ],
      "name": "sonarjs/variable-name",
      "plugin": "sonarjs"
    },
    "sonarjs/comment-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Track comments matching a regular expression",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S124/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "regularExpression": "",
          "message": "The regular expression matches this comment.",
          "flags": ""
        }
      ],
      "name": "sonarjs/comment-regex",
      "plugin": "sonarjs"
    },
    "sonarjs/no-commented-code": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Sections of code should not be commented out",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S125/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-commented-code",
      "plugin": "sonarjs"
    },
    "sonarjs/elseif-without-else": {
      "type": "suggestion",
      "docs": {
        "description": "\"if ... else if\" constructs should end with \"else\" clauses",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S126/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/elseif-without-else",
      "plugin": "sonarjs"
    },
    "sonarjs/no-fallthrough": {
      "type": "suggestion",
      "docs": {
        "description": "Switch cases should end with an unconditional \"break\" statement",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S128/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-fallthrough",
      "plugin": "sonarjs"
    },
    "sonarjs/nested-control-flow": {
      "type": "suggestion",
      "docs": {
        "description": "Control flow statements \"if\", \"for\", \"while\", \"switch\" and \"try\" should not be nested too deeply",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S134/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "maximumNestingLevel": 3
        }
      ],
      "name": "sonarjs/nested-control-flow",
      "plugin": "sonarjs"
    },
    "sonarjs/too-many-break-or-continue-in-loop": {
      "type": "suggestion",
      "docs": {
        "description": "Loops should not contain more than a single \"break\" or \"continue\" statement",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S135/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/too-many-break-or-continue-in-loop",
      "plugin": "sonarjs"
    },
    "sonarjs/max-lines-per-function": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should not have too many lines of code",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S138/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "maximum": 200
        }
      ],
      "name": "sonarjs/max-lines-per-function",
      "plugin": "sonarjs"
    },
    "sonarjs/no-nested-incdec": {
      "type": "suggestion",
      "docs": {
        "description": "Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S881/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-nested-incdec",
      "plugin": "sonarjs"
    },
    "sonarjs/no-equals-in-for-termination": {
      "type": "suggestion",
      "docs": {
        "description": "Equality operators should not be used in \"for\" loop termination conditions",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S888/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-equals-in-for-termination",
      "plugin": "sonarjs"
    },
    "sonarjs/no-extra-arguments": {
      "type": "problem",
      "docs": {
        "description": "Function calls should not pass extra arguments",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S930/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-extra-arguments",
      "plugin": "sonarjs"
    },
    "sonarjs/no-collapsible-if": {
      "type": "suggestion",
      "docs": {
        "description": "Mergeable \"if\" statements should be combined",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1066/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-collapsible-if",
      "plugin": "sonarjs"
    },
    "sonarjs/expression-complexity": {
      "type": "suggestion",
      "docs": {
        "description": "Expressions should not be too complex",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1067/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "max": 3
        }
      ],
      "name": "sonarjs/expression-complexity",
      "plugin": "sonarjs"
    },
    "sonarjs/no-redundant-parentheses": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Redundant pairs of parentheses should be removed",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1110/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/no-redundant-parentheses",
      "plugin": "sonarjs"
    },
    "sonarjs/no-labels": {
      "type": "suggestion",
      "docs": {
        "description": "Labels should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1119/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-labels",
      "plugin": "sonarjs"
    },
    "sonarjs/no-nested-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "Assignments should not be made from within sub-expressions",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1121/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-nested-assignment",
      "plugin": "sonarjs"
    },
    "sonarjs/no-redundant-boolean": {
      "type": "suggestion",
      "docs": {
        "description": "Boolean literals should not be used in comparisons",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1125/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-redundant-boolean",
      "plugin": "sonarjs"
    },
    "sonarjs/prefer-single-boolean-return": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Return of boolean expressions should not be wrapped into an \"if-then-else\" statement",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1126/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/prefer-single-boolean-return",
      "plugin": "sonarjs"
    },
    "sonarjs/unused-import": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Unnecessary imports should be removed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1128/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/unused-import",
      "plugin": "sonarjs"
    },
    "sonarjs/fixme-tag": {
      "type": "suggestion",
      "docs": {
        "description": "Track uses of \"FIXME\" tags",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1134/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/fixme-tag",
      "plugin": "sonarjs"
    },
    "sonarjs/todo-tag": {
      "type": "suggestion",
      "docs": {
        "description": "Track uses of \"TODO\" tags",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1135/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/todo-tag",
      "plugin": "sonarjs"
    },
    "sonarjs/useless-string-operation": {
      "type": "problem",
      "docs": {
        "description": "Results of operations on strings should not be ignored",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1154/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/useless-string-operation",
      "plugin": "sonarjs"
    },
    "sonarjs/no-unused-function-argument": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Unused function parameters should be removed",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1172/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-unused-function-argument",
      "plugin": "sonarjs"
    },
    "sonarjs/no-duplicate-string": {
      "type": "suggestion",
      "docs": {
        "description": "String literals should not be duplicated",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1192/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "threshold": 3,
          "ignoreStrings": "application/json"
        }
      ],
      "name": "sonarjs/no-duplicate-string",
      "plugin": "sonarjs"
    },
    "sonarjs/no-case-label-in-switch": {
      "type": "suggestion",
      "docs": {
        "description": "\"switch\" statements should not contain non-case labels",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1219/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-case-label-in-switch",
      "plugin": "sonarjs"
    },
    "sonarjs/no-parameter-reassignment": {
      "type": "problem",
      "docs": {
        "description": "Initial values of parameters, caught exceptions, and loop variables should not be ignored",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1226/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-parameter-reassignment",
      "plugin": "sonarjs"
    },
    "sonarjs/prefer-while": {
      "fixable": "code",
      "type": "suggestion",
      "docs": {
        "description": "A \"while\" loop should be used instead of a \"for\" loop",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1264/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/prefer-while",
      "plugin": "sonarjs"
    },
    "sonarjs/no-sonar-comments": {
      "type": "suggestion",
      "docs": {
        "description": "Track uses of \"NOSONAR\" comments",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1291/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-sonar-comments",
      "plugin": "sonarjs"
    },
    "sonarjs/no-small-switch": {
      "type": "suggestion",
      "docs": {
        "description": "\"if\" statements should be preferred over \"switch\" when simpler",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1301/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-small-switch",
      "plugin": "sonarjs"
    },
    "sonarjs/no-hardcoded-ip": {
      "type": "problem",
      "docs": {
        "description": "Using hardcoded IP addresses is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1313/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-hardcoded-ip",
      "plugin": "sonarjs"
    },
    "sonarjs/label-position": {
      "type": "suggestion",
      "docs": {
        "description": "Only \"while\", \"do\", \"for\" and \"switch\" statements should be labelled",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1439/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/label-position",
      "plugin": "sonarjs"
    },
    "sonarjs/public-static-readonly": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Public \"static\" fields should be read-only",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1444/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/public-static-readonly",
      "plugin": "sonarjs"
    },
    "sonarjs/file-header": {
      "type": "suggestion",
      "docs": {
        "description": "Track lack of copyright and license headers",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1451/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "headerFormat": "",
          "isRegularExpression": false
        }
      ],
      "name": "sonarjs/file-header",
      "plugin": "sonarjs"
    },
    "sonarjs/call-argument-line": {
      "type": "suggestion",
      "docs": {
        "description": "Function call arguments should not start on new lines",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1472/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/call-argument-line",
      "plugin": "sonarjs"
    },
    "sonarjs/max-switch-cases": {
      "type": "suggestion",
      "docs": {
        "description": "\"switch\" statements should not have too many \"case\" clauses",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1479/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        30
      ],
      "name": "sonarjs/max-switch-cases",
      "plugin": "sonarjs"
    },
    "sonarjs/no-unused-vars": {
      "type": "suggestion",
      "docs": {
        "description": "Unused local variables and functions should be removed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1481/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-unused-vars",
      "plugin": "sonarjs"
    },
    "sonarjs/prefer-immediate-return": {
      "fixable": "code",
      "type": "suggestion",
      "docs": {
        "description": "Local variables should not be declared and then immediately returned or thrown",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1488/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/prefer-immediate-return",
      "plugin": "sonarjs"
    },
    "sonarjs/function-inside-loop": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should not be defined inside loops",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1515/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/function-inside-loop",
      "plugin": "sonarjs"
    },
    "sonarjs/code-eval": {
      "type": "problem",
      "docs": {
        "description": "Dynamically executing code is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1523/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/code-eval",
      "plugin": "sonarjs"
    },
    "sonarjs/no-variable-usage-before-declaration": {
      "type": "suggestion",
      "docs": {
        "description": "Variables declared with \"var\" should be declared before they are used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1526/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-variable-usage-before-declaration",
      "plugin": "sonarjs"
    },
    "sonarjs/future-reserved-words": {
      "type": "suggestion",
      "docs": {
        "description": "Future reserved words should not be used as identifiers",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1527/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/future-reserved-words",
      "plugin": "sonarjs"
    },
    "sonarjs/array-constructor": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Array constructors should not be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1528/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/array-constructor",
      "plugin": "sonarjs"
    },
    "sonarjs/bitwise-operators": {
      "type": "problem",
      "docs": {
        "description": "Bitwise operators should not be used in boolean contexts",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1529/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/bitwise-operators",
      "plugin": "sonarjs"
    },
    "sonarjs/no-function-declaration-in-block": {
      "type": "problem",
      "docs": {
        "description": "Function declarations should not be made within blocks",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1530/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-function-declaration-in-block",
      "plugin": "sonarjs"
    },
    "sonarjs/no-primitive-wrappers": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Wrapper objects should not be used for primitive types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1533/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-primitive-wrappers",
      "plugin": "sonarjs"
    },
    "sonarjs/for-in": {
      "type": "problem",
      "docs": {
        "description": "\"for...in\" loops should filter properties before acting on them",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1535/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/for-in",
      "plugin": "sonarjs"
    },
    "sonarjs/cyclomatic-complexity": {
      "type": "suggestion",
      "docs": {
        "description": "Cyclomatic Complexity of functions should not be too high",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1541/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "threshold": 10
        }
      ],
      "name": "sonarjs/cyclomatic-complexity",
      "plugin": "sonarjs"
    },
    "sonarjs/no-skipped-tests": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should not be skipped without providing a reason",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1607/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-skipped-tests",
      "plugin": "sonarjs"
    },
    "sonarjs/no-one-iteration-loop": {
      "type": "problem",
      "docs": {
        "description": "Loops with at most one iteration should be refactored",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1751/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-one-iteration-loop",
      "plugin": "sonarjs"
    },
    "sonarjs/no-identical-expressions": {
      "type": "problem",
      "docs": {
        "description": "Identical expressions should not be used on both sides of a binary operator",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1764/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-identical-expressions",
      "plugin": "sonarjs"
    },
    "sonarjs/no-nested-switch": {
      "type": "suggestion",
      "docs": {
        "description": "\"switch\" statements should not be nested",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1821/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-nested-switch",
      "plugin": "sonarjs"
    },
    "sonarjs/constructor-for-side-effects": {
      "type": "problem",
      "docs": {
        "description": "Objects should not be created to be dropped immediately without being used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1848/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/constructor-for-side-effects",
      "plugin": "sonarjs"
    },
    "sonarjs/no-dead-store": {
      "type": "suggestion",
      "docs": {
        "description": "Unused assignments should be removed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1854/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-dead-store",
      "plugin": "sonarjs"
    },
    "sonarjs/no-identical-conditions": {
      "type": "problem",
      "docs": {
        "description": "\"if/else if\" chains and \"switch\" cases should not have the same condition",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1862/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-identical-conditions",
      "plugin": "sonarjs"
    },
    "sonarjs/no-duplicated-branches": {
      "type": "suggestion",
      "docs": {
        "description": "Two branches in a conditional structure should not have exactly the same implementation",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1871/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-duplicated-branches",
      "plugin": "sonarjs"
    },
    "sonarjs/deprecation": {
      "type": "suggestion",
      "docs": {
        "description": "Deprecated APIs should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1874/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/deprecation",
      "plugin": "sonarjs"
    },
    "sonarjs/no-inverted-boolean-check": {
      "hasSuggestions": true,
      "fixable": "code",
      "type": "suggestion",
      "docs": {
        "description": "Boolean checks should not be inverted",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1940/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-inverted-boolean-check",
      "plugin": "sonarjs"
    },
    "sonarjs/misplaced-loop-counter": {
      "type": "suggestion",
      "docs": {
        "description": "\"for\" loop increment clauses should modify the loops' counters",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1994/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/misplaced-loop-counter",
      "plugin": "sonarjs"
    },
    "sonarjs/no-nested-functions": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should not be nested too deeply",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2004/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "threshold": 4
        }
      ],
      "name": "sonarjs/no-nested-functions",
      "plugin": "sonarjs"
    },
    "sonarjs/no-hardcoded-passwords": {
      "type": "problem",
      "docs": {
        "description": "Hard-coded passwords are security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2068/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "passwordWords": [
            "password",
            "pwd",
            "passwd",
            "passphrase"
          ]
        }
      ],
      "name": "sonarjs/no-hardcoded-passwords",
      "plugin": "sonarjs"
    },
    "sonarjs/sql-queries": {
      "type": "problem",
      "docs": {
        "description": "Formatting SQL queries is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2077/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/sql-queries",
      "plugin": "sonarjs"
    },
    "sonarjs/insecure-cookie": {
      "type": "problem",
      "docs": {
        "description": "Creating cookies without the \"secure\" flag is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2092/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/insecure-cookie",
      "plugin": "sonarjs"
    },
    "sonarjs/no-useless-increment": {
      "type": "problem",
      "docs": {
        "description": "Values should not be uselessly incremented",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2123/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-useless-increment",
      "plugin": "sonarjs"
    },
    "sonarjs/no-globals-shadowing": {
      "type": "problem",
      "docs": {
        "description": "Special identifiers should not be bound or assigned",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2137/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-globals-shadowing",
      "plugin": "sonarjs"
    },
    "sonarjs/no-undefined-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "\"undefined\" should not be assigned",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2138/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-undefined-assignment",
      "plugin": "sonarjs"
    },
    "sonarjs/no-empty-test-file": {
      "type": "suggestion",
      "docs": {
        "description": "Test files should contain at least one test case",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2187/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-empty-test-file",
      "plugin": "sonarjs"
    },
    "sonarjs/no-ignored-return": {
      "type": "problem",
      "docs": {
        "description": "Return values from functions without side effects should not be ignored",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2201/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-ignored-return",
      "plugin": "sonarjs"
    },
    "sonarjs/no-wildcard-import": {
      "type": "suggestion",
      "docs": {
        "description": "Wildcard imports should not be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2208/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-wildcard-import",
      "plugin": "sonarjs"
    },
    "sonarjs/arguments-order": {
      "type": "suggestion",
      "docs": {
        "description": "Parameters should be passed in the correct order",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2234/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/arguments-order",
      "plugin": "sonarjs"
    },
    "sonarjs/pseudo-random": {
      "type": "problem",
      "docs": {
        "description": "Using pseudorandom number generators (PRNGs) is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2245/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/pseudo-random",
      "plugin": "sonarjs"
    },
    "sonarjs/for-loop-increment-sign": {
      "type": "problem",
      "docs": {
        "description": "A \"for\" loop update clause should move the counter in the right direction",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2251/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/for-loop-increment-sign",
      "plugin": "sonarjs"
    },
    "sonarjs/cookies": {
      "type": "problem",
      "docs": {
        "description": "Writing cookies is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2255/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/cookies",
      "plugin": "sonarjs"
    },
    "sonarjs/null-dereference": {
      "type": "problem",
      "docs": {
        "description": "Properties of variables with \"null\" or \"undefined\" values should not be accessed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2259/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/null-dereference",
      "plugin": "sonarjs"
    },
    "sonarjs/no-selector-parameter": {
      "type": "suggestion",
      "docs": {
        "description": "Methods should not contain selector parameters",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2301/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-selector-parameter",
      "plugin": "sonarjs"
    },
    "sonarjs/updated-loop-counter": {
      "type": "suggestion",
      "docs": {
        "description": "Loop counters should not be assigned within the loop body",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2310/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/updated-loop-counter",
      "plugin": "sonarjs"
    },
    "sonarjs/block-scoped-var": {
      "type": "suggestion",
      "docs": {
        "description": "Variables should be used in the blocks where they are declared",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2392/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/block-scoped-var",
      "plugin": "sonarjs"
    },
    "sonarjs/no-built-in-override": {
      "type": "problem",
      "docs": {
        "description": "Built-in objects should not be overridden",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2424/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-built-in-override",
      "plugin": "sonarjs"
    },
    "sonarjs/prefer-object-literal": {
      "type": "suggestion",
      "docs": {
        "description": "Object literal syntax should be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2428/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/prefer-object-literal",
      "plugin": "sonarjs"
    },
    "sonarjs/no-ignored-exceptions": {
      "type": "suggestion",
      "docs": {
        "description": "Exceptions should not be ignored",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2486/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-ignored-exceptions",
      "plugin": "sonarjs"
    },
    "sonarjs/no-gratuitous-expressions": {
      "type": "suggestion",
      "docs": {
        "description": "Boolean expressions should not be gratuitous",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2589/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-gratuitous-expressions",
      "plugin": "sonarjs"
    },
    "sonarjs/file-uploads": {
      "type": "problem",
      "docs": {
        "description": "File uploads should be restricted",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2598/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/file-uploads",
      "plugin": "sonarjs"
    },
    "sonarjs/file-permissions": {
      "type": "problem",
      "docs": {
        "description": "Setting loose POSIX file permissions is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2612/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/file-permissions",
      "plugin": "sonarjs"
    },
    "sonarjs/no-empty-character-class": {
      "type": "problem",
      "docs": {
        "description": "Empty character classes should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2639/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-empty-character-class",
      "plugin": "sonarjs"
    },
    "sonarjs/no-unenclosed-multiline-block": {
      "type": "suggestion",
      "docs": {
        "description": "Multiline blocks should be enclosed in curly braces",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2681/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-unenclosed-multiline-block",
      "plugin": "sonarjs"
    },
    "sonarjs/index-of-compare-to-positive-number": {
      "type": "suggestion",
      "docs": {
        "description": "\"indexOf\" checks should not be for positive numbers",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2692/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/index-of-compare-to-positive-number",
      "plugin": "sonarjs"
    },
    "sonarjs/assertions-in-tests": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should include assertions",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2699/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/assertions-in-tests",
      "plugin": "sonarjs"
    },
    "sonarjs/no-implicit-global": {
      "type": "suggestion",
      "docs": {
        "description": "Variables should be declared explicitly",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2703/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-implicit-global",
      "plugin": "sonarjs"
    },
    "sonarjs/no-useless-catch": {
      "type": "suggestion",
      "docs": {
        "description": "\"catch\" clauses should do more than rethrow",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2737/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-useless-catch",
      "plugin": "sonarjs"
    },
    "sonarjs/xml-parser-xxe": {
      "type": "problem",
      "docs": {
        "description": "XML parsers should not be vulnerable to XXE attacks",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2755/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/xml-parser-xxe",
      "plugin": "sonarjs"
    },
    "sonarjs/non-existent-operator": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Non-existent operators '=+', '=-' and '=!' should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2757/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/non-existent-operator",
      "plugin": "sonarjs"
    },
    "sonarjs/web-sql-database": {
      "type": "problem",
      "docs": {
        "description": "Web SQL databases should not be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2817/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/web-sql-database",
      "plugin": "sonarjs"
    },
    "sonarjs/post-message": {
      "type": "problem",
      "docs": {
        "description": "Origins should be verified during cross-origin communications",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2819/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/post-message",
      "plugin": "sonarjs"
    },
    "sonarjs/no-array-delete": {
      "type": "suggestion",
      "docs": {
        "description": "\"delete\" should not be used on arrays",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2870/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-array-delete",
      "plugin": "sonarjs"
    },
    "sonarjs/no-alphabetical-sort": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "\"Array.prototype.sort()\" and \"Array.prototype.toSorted()\" should use a compare function",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2871/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-alphabetical-sort",
      "plugin": "sonarjs"
    },
    "sonarjs/no-incomplete-assertions": {
      "type": "suggestion",
      "docs": {
        "description": "Assertions should be complete",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2970/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-incomplete-assertions",
      "plugin": "sonarjs"
    },
    "sonarjs/no-global-this": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "The global \"this\" object should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2990/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-global-this",
      "plugin": "sonarjs"
    },
    "sonarjs/new-operator-misuse": {
      "type": "problem",
      "docs": {
        "description": "\"new\" should only be used with functions and classes",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2999/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "considerJSDoc": false
        }
      ],
      "name": "sonarjs/new-operator-misuse",
      "plugin": "sonarjs"
    },
    "sonarjs/no-delete-var": {
      "type": "problem",
      "docs": {
        "description": "\"delete\" should be used only with object properties",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3001/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-delete-var",
      "plugin": "sonarjs"
    },
    "sonarjs/strings-comparison": {
      "type": "suggestion",
      "docs": {
        "description": "Comparison operators should not be used with strings",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3003/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/strings-comparison",
      "plugin": "sonarjs"
    },
    "sonarjs/file-name-differ-from-class": {
      "type": "suggestion",
      "docs": {
        "description": "Default export names and file names should match",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3317/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/file-name-differ-from-class",
      "plugin": "sonarjs"
    },
    "sonarjs/cookie-no-httponly": {
      "type": "problem",
      "docs": {
        "description": "Creating cookies without the \"HttpOnly\" flag is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3330/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/cookie-no-httponly",
      "plugin": "sonarjs"
    },
    "sonarjs/no-nested-conditional": {
      "type": "suggestion",
      "docs": {
        "description": "Ternary operators should not be nested",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3358/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-nested-conditional",
      "plugin": "sonarjs"
    },
    "sonarjs/no-incorrect-string-concat": {
      "type": "suggestion",
      "docs": {
        "description": "Strings and non-strings should not be added",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3402/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-incorrect-string-concat",
      "plugin": "sonarjs"
    },
    "sonarjs/different-types-comparison": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Strict equality operators should not be used with dissimilar types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3403/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/different-types-comparison",
      "plugin": "sonarjs"
    },
    "sonarjs/inverted-assertion-arguments": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Assertion arguments should be passed in the correct order",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3415/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/inverted-assertion-arguments",
      "plugin": "sonarjs"
    },
    "sonarjs/shorthand-property-grouping": {
      "type": "suggestion",
      "docs": {
        "description": "Shorthand object properties should be grouped at the beginning or end of an object declaration",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3499/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/shorthand-property-grouping",
      "plugin": "sonarjs"
    },
    "sonarjs/updated-const-var": {
      "type": "problem",
      "docs": {
        "description": "\"const\" variables should not be reassigned",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3500/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/updated-const-var",
      "plugin": "sonarjs"
    },
    "sonarjs/arguments-usage": {
      "type": "suggestion",
      "docs": {
        "description": "\"arguments\" should not be accessed directly",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3513/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/arguments-usage",
      "plugin": "sonarjs"
    },
    "sonarjs/destructuring-assignment-syntax": {
      "type": "suggestion",
      "docs": {
        "description": "Destructuring syntax should be used for assignments",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3514/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/destructuring-assignment-syntax",
      "plugin": "sonarjs"
    },
    "sonarjs/no-invariant-returns": {
      "type": "suggestion",
      "docs": {
        "description": "Function returns should not be invariant",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3516/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-invariant-returns",
      "plugin": "sonarjs"
    },
    "sonarjs/arrow-function-convention": {
      "type": "suggestion",
      "docs": {
        "description": "Braces and parentheses should be used consistently with arrow functions",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3524/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "requireParameterParentheses": false,
          "requireBodyBraces": false
        }
      ],
      "name": "sonarjs/arrow-function-convention",
      "plugin": "sonarjs"
    },
    "sonarjs/class-prototype": {
      "type": "suggestion",
      "docs": {
        "description": "Class methods should be used instead of \"prototype\" assignments",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3525/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/class-prototype",
      "plugin": "sonarjs"
    },
    "sonarjs/generator-without-yield": {
      "type": "problem",
      "docs": {
        "description": "Generators should explicitly \"yield\" a value",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3531/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/generator-without-yield",
      "plugin": "sonarjs"
    },
    "sonarjs/no-require-or-define": {
      "type": "suggestion",
      "docs": {
        "description": "\"import\" should be used to include external code",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3533/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-require-or-define",
      "plugin": "sonarjs"
    },
    "sonarjs/no-associative-arrays": {
      "type": "suggestion",
      "docs": {
        "description": "Array indexes should be numeric",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3579/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-associative-arrays",
      "plugin": "sonarjs"
    },
    "sonarjs/comma-or-logical-or-case": {
      "type": "problem",
      "docs": {
        "description": "Comma and logical OR operators should not be used in switch cases",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3616/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/comma-or-logical-or-case",
      "plugin": "sonarjs"
    },
    "sonarjs/no-redundant-jump": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Jump statements should not be redundant",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3626/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-redundant-jump",
      "plugin": "sonarjs"
    },
    "sonarjs/inconsistent-function-call": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should be called consistently with or without \"new\"",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3686/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/inconsistent-function-call",
      "plugin": "sonarjs"
    },
    "sonarjs/no-use-of-empty-return-value": {
      "type": "problem",
      "docs": {
        "description": "The return value of void functions should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3699/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-use-of-empty-return-value",
      "plugin": "sonarjs"
    },
    "sonarjs/enforce-trailing-comma": {
      "deprecated": true,
      "type": "suggestion",
      "docs": {
        "description": "Trailing commas should be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3723/javascript",
        "requiresTypeChecking": false
      },
      "fixable": "code",
      "defaultOptions": [
        "always-multiline"
      ],
      "name": "sonarjs/enforce-trailing-comma",
      "plugin": "sonarjs"
    },
    "sonarjs/void-use": {
      "type": "suggestion",
      "docs": {
        "description": "\"void\" should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3735/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/void-use",
      "plugin": "sonarjs"
    },
    "sonarjs/operation-returning-nan": {
      "type": "suggestion",
      "docs": {
        "description": "Arithmetic operations should not result in \"NaN\"",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3757/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/operation-returning-nan",
      "plugin": "sonarjs"
    },
    "sonarjs/values-not-convertible-to-numbers": {
      "type": "suggestion",
      "docs": {
        "description": "Values not convertible to numbers should not be used in numeric comparisons",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3758/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/values-not-convertible-to-numbers",
      "plugin": "sonarjs"
    },
    "sonarjs/non-number-in-arithmetic-expression": {
      "type": "suggestion",
      "docs": {
        "description": "Arithmetic operators should only have numbers as operands",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3760/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/non-number-in-arithmetic-expression",
      "plugin": "sonarjs"
    },
    "sonarjs/cognitive-complexity": {
      "type": "suggestion",
      "docs": {
        "description": "Cognitive Complexity of functions should not be too high",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3776/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        15
      ],
      "name": "sonarjs/cognitive-complexity",
      "plugin": "sonarjs"
    },
    "sonarjs/argument-type": {
      "type": "suggestion",
      "docs": {
        "description": "Arguments to built-in functions should match documented types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3782/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/argument-type",
      "plugin": "sonarjs"
    },
    "sonarjs/in-operator-type-error": {
      "type": "problem",
      "docs": {
        "description": "\"in\" should not be used with primitive types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3785/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/in-operator-type-error",
      "plugin": "sonarjs"
    },
    "sonarjs/array-callback-without-return": {
      "type": "problem",
      "docs": {
        "description": "Callbacks of array methods should have return statements",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3796/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/array-callback-without-return",
      "plugin": "sonarjs"
    },
    "sonarjs/declarations-in-global-scope": {
      "type": "suggestion",
      "docs": {
        "description": "Variables and functions should not be declared in the global scope",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3798/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/declarations-in-global-scope",
      "plugin": "sonarjs"
    },
    "sonarjs/function-return-type": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should always return the same type",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3800/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/function-return-type",
      "plugin": "sonarjs"
    },
    "sonarjs/no-inconsistent-returns": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should use \"return\" consistently",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3801/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-inconsistent-returns",
      "plugin": "sonarjs"
    },
    "sonarjs/no-reference-error": {
      "type": "problem",
      "docs": {
        "description": "Variables should be defined before being used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3827/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-reference-error",
      "plugin": "sonarjs"
    },
    "sonarjs/super-invocation": {
      "type": "problem",
      "docs": {
        "description": "\"super()\" should be invoked appropriately",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3854/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/super-invocation",
      "plugin": "sonarjs"
    },
    "sonarjs/no-all-duplicated-branches": {
      "type": "problem",
      "docs": {
        "description": "All branches in a conditional structure should not have exactly the same implementation",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3923/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-all-duplicated-branches",
      "plugin": "sonarjs"
    },
    "sonarjs/no-same-line-conditional": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Conditionals should start on new lines",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3972/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-same-line-conditional",
      "plugin": "sonarjs"
    },
    "sonarjs/conditional-indentation": {
      "type": "suggestion",
      "docs": {
        "description": "A conditionally executed single line should be denoted by indentation",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3973/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/conditional-indentation",
      "plugin": "sonarjs"
    },
    "sonarjs/no-collection-size-mischeck": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Collection size and array length comparisons should make sense",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3981/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-collection-size-mischeck",
      "plugin": "sonarjs"
    },
    "sonarjs/no-unthrown-error": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Errors should not be created without being thrown",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3984/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-unthrown-error",
      "plugin": "sonarjs"
    },
    "sonarjs/no-unused-collection": {
      "type": "suggestion",
      "docs": {
        "description": "Collection contents should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4030/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-unused-collection",
      "plugin": "sonarjs"
    },
    "sonarjs/no-os-command-from-path": {
      "type": "problem",
      "docs": {
        "description": "Searching OS commands in PATH is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4036/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-os-command-from-path",
      "plugin": "sonarjs"
    },
    "sonarjs/no-misleading-array-reverse": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Array-mutating methods should not be used misleadingly",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4043/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-misleading-array-reverse",
      "plugin": "sonarjs"
    },
    "sonarjs/no-for-in-iterable": {
      "type": "suggestion",
      "docs": {
        "description": "\"for in\" should not be used with iterables",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4139/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-for-in-iterable",
      "plugin": "sonarjs"
    },
    "sonarjs/no-element-overwrite": {
      "type": "problem",
      "docs": {
        "description": "Collection elements should not be replaced unconditionally",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4143/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-element-overwrite",
      "plugin": "sonarjs"
    },
    "sonarjs/no-identical-functions": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should not have identical implementations",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4144/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        3
      ],
      "name": "sonarjs/no-identical-functions",
      "plugin": "sonarjs"
    },
    "sonarjs/no-empty-collection": {
      "type": "problem",
      "docs": {
        "description": "Empty collections should not be accessed or iterated",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4158/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-empty-collection",
      "plugin": "sonarjs"
    },
    "sonarjs/no-redundant-assignments": {
      "type": "suggestion",
      "docs": {
        "description": "Assignments should not be redundant",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4165/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-redundant-assignments",
      "plugin": "sonarjs"
    },
    "sonarjs/prefer-type-guard": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Type predicates should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4322/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/prefer-type-guard",
      "plugin": "sonarjs"
    },
    "sonarjs/use-type-alias": {
      "type": "suggestion",
      "docs": {
        "description": "Type aliases should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4323/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/use-type-alias",
      "plugin": "sonarjs"
    },
    "sonarjs/no-return-type-any": {
      "type": "suggestion",
      "docs": {
        "description": "Primitive return types should be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4324/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-return-type-any",
      "plugin": "sonarjs"
    },
    "sonarjs/no-implicit-dependencies": {
      "type": "suggestion",
      "docs": {
        "description": "Dependencies should be explicit",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4328/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "whitelist": []
        }
      ],
      "name": "sonarjs/no-implicit-dependencies",
      "plugin": "sonarjs"
    },
    "sonarjs/no-useless-intersection": {
      "type": "problem",
      "docs": {
        "description": "Type intersections should use meaningful types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4335/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-useless-intersection",
      "plugin": "sonarjs"
    },
    "sonarjs/weak-ssl": {
      "type": "problem",
      "docs": {
        "description": "Weak SSL/TLS protocols should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4423/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/weak-ssl",
      "plugin": "sonarjs"
    },
    "sonarjs/no-weak-keys": {
      "type": "problem",
      "docs": {
        "description": "Cryptographic keys should be robust",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4426/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-weak-keys",
      "plugin": "sonarjs"
    },
    "sonarjs/csrf": {
      "type": "problem",
      "docs": {
        "description": "Disabling CSRF protections is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4502/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/csrf",
      "plugin": "sonarjs"
    },
    "sonarjs/production-debug": {
      "type": "problem",
      "docs": {
        "description": "Delivering code in production with debug features activated is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4507/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/production-debug",
      "plugin": "sonarjs"
    },
    "sonarjs/prefer-default-last": {
      "type": "suggestion",
      "docs": {
        "description": "\"default\" clauses should be last",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4524/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/prefer-default-last",
      "plugin": "sonarjs"
    },
    "sonarjs/no-in-misuse": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "\"in\" should not be used on arrays",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4619/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-in-misuse",
      "plugin": "sonarjs"
    },
    "sonarjs/no-duplicate-in-composite": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Union and intersection types should not include duplicated constituents",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4621/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-duplicate-in-composite",
      "plugin": "sonarjs"
    },
    "sonarjs/max-union-size": {
      "type": "suggestion",
      "docs": {
        "description": "Union types should not have too many elements",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4622/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "threshold": 3
        }
      ],
      "name": "sonarjs/max-union-size",
      "plugin": "sonarjs"
    },
    "sonarjs/no-undefined-argument": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "\"undefined\" should not be passed as the value of optional parameters",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4623/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-undefined-argument",
      "plugin": "sonarjs"
    },
    "sonarjs/no-nested-template-literals": {
      "type": "suggestion",
      "docs": {
        "description": "Template literals should not be nested",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4624/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-nested-template-literals",
      "plugin": "sonarjs"
    },
    "sonarjs/prefer-promise-shorthand": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Shorthand promises should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4634/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/prefer-promise-shorthand",
      "plugin": "sonarjs"
    },
    "sonarjs/os-command": {
      "type": "problem",
      "docs": {
        "description": "Using shell interpreter when executing OS commands is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4721/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/os-command",
      "plugin": "sonarjs"
    },
    "sonarjs/no-redundant-optional": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Optional property declarations should not use both '?' and 'undefined' syntax",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4782/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-redundant-optional",
      "plugin": "sonarjs"
    },
    "sonarjs/regular-expr": {
      "type": "problem",
      "docs": {
        "description": "Using regular expressions is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4784/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/regular-expr",
      "plugin": "sonarjs"
    },
    "sonarjs/encryption": {
      "type": "problem",
      "docs": {
        "description": "Encrypting data is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4787/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/encryption",
      "plugin": "sonarjs"
    },
    "sonarjs/hashing": {
      "type": "problem",
      "docs": {
        "description": "Using weak hashing algorithms is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4790/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/hashing",
      "plugin": "sonarjs"
    },
    "sonarjs/bool-param-default": {
      "type": "suggestion",
      "docs": {
        "description": "Optional boolean parameters should have default value",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4798/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/bool-param-default",
      "plugin": "sonarjs"
    },
    "sonarjs/xpath": {
      "type": "problem",
      "docs": {
        "description": "Executing XPath expressions is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4817/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/xpath",
      "plugin": "sonarjs"
    },
    "sonarjs/sockets": {
      "type": "problem",
      "docs": {
        "description": "Using Sockets is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4818/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/sockets",
      "plugin": "sonarjs"
    },
    "sonarjs/no-try-promise": {
      "type": "problem",
      "docs": {
        "description": "Promise rejections should not be caught by \"try\" blocks",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4822/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-try-promise",
      "plugin": "sonarjs"
    },
    "sonarjs/process-argv": {
      "type": "problem",
      "docs": {
        "description": "Using command line arguments is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4823/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/process-argv",
      "plugin": "sonarjs"
    },
    "sonarjs/standard-input": {
      "type": "problem",
      "docs": {
        "description": "Reading the Standard Input is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4829/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/standard-input",
      "plugin": "sonarjs"
    },
    "sonarjs/unverified-certificate": {
      "type": "problem",
      "docs": {
        "description": "Server certificates should be verified during SSL/TLS connections",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4830/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/unverified-certificate",
      "plugin": "sonarjs"
    },
    "sonarjs/no-unsafe-unzip": {
      "type": "problem",
      "docs": {
        "description": "Expanding archive files without controlling resource consumption is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5042/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-unsafe-unzip",
      "plugin": "sonarjs"
    },
    "sonarjs/cors": {
      "type": "problem",
      "docs": {
        "description": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5122/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/cors",
      "plugin": "sonarjs"
    },
    "sonarjs/link-with-target-blank": {
      "type": "problem",
      "docs": {
        "description": "Authorizing an opened window to access back to the originating window is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5148/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/link-with-target-blank",
      "plugin": "sonarjs"
    },
    "sonarjs/disabled-auto-escaping": {
      "type": "problem",
      "docs": {
        "description": "Disabling auto-escaping in template engines is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5247/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/disabled-auto-escaping",
      "plugin": "sonarjs"
    },
    "sonarjs/table-header": {
      "type": "problem",
      "docs": {
        "description": "Tables should have headers",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5256/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/table-header",
      "plugin": "sonarjs"
    },
    "sonarjs/no-table-as-layout": {
      "type": "suggestion",
      "docs": {
        "description": "HTML \"<table>\" should not be used for layout purposes",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5257/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-table-as-layout",
      "plugin": "sonarjs"
    },
    "sonarjs/table-header-reference": {
      "type": "problem",
      "docs": {
        "description": "Table cells should reference their headers",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5260/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/table-header-reference",
      "plugin": "sonarjs"
    },
    "sonarjs/object-alt-content": {
      "type": "suggestion",
      "docs": {
        "description": "\"<object>\" tags should provide an alternative content",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5264/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/object-alt-content",
      "plugin": "sonarjs"
    },
    "sonarjs/no-clear-text-protocols": {
      "type": "problem",
      "docs": {
        "description": "Using clear-text protocols is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5332/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-clear-text-protocols",
      "plugin": "sonarjs"
    },
    "sonarjs/publicly-writable-directories": {
      "type": "problem",
      "docs": {
        "description": "Using publicly writable directories is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5443/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/publicly-writable-directories",
      "plugin": "sonarjs"
    },
    "sonarjs/unverified-hostname": {
      "type": "problem",
      "docs": {
        "description": "Server hostnames should be verified during SSL/TLS connections",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5527/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/unverified-hostname",
      "plugin": "sonarjs"
    },
    "sonarjs/encryption-secure-mode": {
      "type": "problem",
      "docs": {
        "description": "Encryption algorithms should be used with secure mode and padding scheme",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5542/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/encryption-secure-mode",
      "plugin": "sonarjs"
    },
    "sonarjs/no-weak-cipher": {
      "type": "problem",
      "docs": {
        "description": "Cipher algorithms should be robust",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5547/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-weak-cipher",
      "plugin": "sonarjs"
    },
    "sonarjs/no-intrusive-permissions": {
      "type": "problem",
      "docs": {
        "description": "Using intrusive permissions is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5604/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "permissions": [
            "geolocation"
          ]
        }
      ],
      "name": "sonarjs/no-intrusive-permissions",
      "plugin": "sonarjs"
    },
    "sonarjs/insecure-jwt-token": {
      "type": "problem",
      "docs": {
        "description": "JWT should be signed and verified with strong cipher algorithms",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5659/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/insecure-jwt-token",
      "plugin": "sonarjs"
    },
    "sonarjs/x-powered-by": {
      "type": "problem",
      "docs": {
        "description": "Disclosing fingerprints from web application technologies is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5689/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/x-powered-by",
      "plugin": "sonarjs"
    },
    "sonarjs/hidden-files": {
      "type": "problem",
      "docs": {
        "description": "Statically serving hidden files is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5691/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/hidden-files",
      "plugin": "sonarjs"
    },
    "sonarjs/content-length": {
      "type": "problem",
      "docs": {
        "description": "Allowing requests with excessive content length is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5693/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "fileUploadSizeLimit": 8000000,
          "standardSizeLimit": 2000000
        }
      ],
      "name": "sonarjs/content-length",
      "plugin": "sonarjs"
    },
    "sonarjs/disabled-resource-integrity": {
      "type": "problem",
      "docs": {
        "description": "Using remote artifacts without integrity checks is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5725/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/disabled-resource-integrity",
      "plugin": "sonarjs"
    },
    "sonarjs/content-security-policy": {
      "type": "problem",
      "docs": {
        "description": "Disabling content security policy fetch directives is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5728/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/content-security-policy",
      "plugin": "sonarjs"
    },
    "sonarjs/no-mixed-content": {
      "type": "problem",
      "docs": {
        "description": "Allowing mixed-content is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5730/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-mixed-content",
      "plugin": "sonarjs"
    },
    "sonarjs/frame-ancestors": {
      "type": "problem",
      "docs": {
        "description": "Disabling content security policy frame-ancestors directive is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5732/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/frame-ancestors",
      "plugin": "sonarjs"
    },
    "sonarjs/no-mime-sniff": {
      "type": "problem",
      "docs": {
        "description": "Allowing browsers to sniff MIME types is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5734/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-mime-sniff",
      "plugin": "sonarjs"
    },
    "sonarjs/no-referrer-policy": {
      "type": "problem",
      "docs": {
        "description": "Disabling strict HTTP no-referrer policy is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5736/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-referrer-policy",
      "plugin": "sonarjs"
    },
    "sonarjs/strict-transport-security": {
      "type": "problem",
      "docs": {
        "description": "Disabling Strict-Transport-Security policy is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5739/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/strict-transport-security",
      "plugin": "sonarjs"
    },
    "sonarjs/certificate-transparency": {
      "type": "problem",
      "docs": {
        "description": "Disabling Certificate Transparency monitoring is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5742/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/certificate-transparency",
      "plugin": "sonarjs"
    },
    "sonarjs/dns-prefetching": {
      "type": "problem",
      "docs": {
        "description": "Allowing browsers to perform DNS prefetching is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5743/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/dns-prefetching",
      "plugin": "sonarjs"
    },
    "sonarjs/confidential-information-logging": {
      "type": "problem",
      "docs": {
        "description": "Allowing confidential information to be logged is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5757/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/confidential-information-logging",
      "plugin": "sonarjs"
    },
    "sonarjs/no-ip-forward": {
      "type": "problem",
      "docs": {
        "description": "Forwarding client IP address is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5759/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-ip-forward",
      "plugin": "sonarjs"
    },
    "sonarjs/empty-string-repetition": {
      "type": "problem",
      "docs": {
        "description": "Repeated patterns in regular expressions should not match the empty string",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5842/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/empty-string-repetition",
      "plugin": "sonarjs"
    },
    "sonarjs/regex-complexity": {
      "type": "suggestion",
      "docs": {
        "description": "Regular expressions should not be too complicated",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5843/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "threshold": 20
        }
      ],
      "name": "sonarjs/regex-complexity",
      "plugin": "sonarjs"
    },
    "sonarjs/anchor-precedence": {
      "type": "problem",
      "docs": {
        "description": "Alternatives in regular expressions should be grouped when used with anchors",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5850/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/anchor-precedence",
      "plugin": "sonarjs"
    },
    "sonarjs/slow-regex": {
      "type": "problem",
      "docs": {
        "description": "Using slow regular expressions is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5852/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/slow-regex",
      "plugin": "sonarjs"
    },
    "sonarjs/no-invalid-regexp": {
      "type": "problem",
      "docs": {
        "description": "Regular expressions should be syntactically valid",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5856/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-invalid-regexp",
      "plugin": "sonarjs"
    },
    "sonarjs/unused-named-groups": {
      "type": "suggestion",
      "docs": {
        "description": "Names of regular expressions named groups should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5860/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/unused-named-groups",
      "plugin": "sonarjs"
    },
    "sonarjs/no-same-argument-assert": {
      "type": "problem",
      "docs": {
        "description": "Assertions should not be given twice the same argument",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5863/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-same-argument-assert",
      "plugin": "sonarjs"
    },
    "sonarjs/unicode-aware-regex": {
      "type": "problem",
      "docs": {
        "description": "Regular expressions using Unicode character classes or property escapes should enable the unicode flag",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5867/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/unicode-aware-regex",
      "plugin": "sonarjs"
    },
    "sonarjs/no-misleading-character-class": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Unicode Grapheme Clusters should be avoided inside regex character classes",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5868/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-misleading-character-class",
      "plugin": "sonarjs"
    },
    "sonarjs/duplicates-in-character-class": {
      "type": "suggestion",
      "docs": {
        "description": "Character classes in regular expressions should not contain the same character twice",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5869/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/duplicates-in-character-class",
      "plugin": "sonarjs"
    },
    "sonarjs/session-regeneration": {
      "type": "problem",
      "docs": {
        "description": "A new session should be created during user authentication",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5876/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/session-regeneration",
      "plugin": "sonarjs"
    },
    "sonarjs/test-check-exception": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should check which exception is thrown",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5958/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/test-check-exception",
      "plugin": "sonarjs"
    },
    "sonarjs/stable-tests": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should be stable",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5973/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/stable-tests",
      "plugin": "sonarjs"
    },
    "sonarjs/no-empty-after-reluctant": {
      "type": "suggestion",
      "docs": {
        "description": "Reluctant quantifiers in regular expressions should be followed by an expression that can't match the empty string",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6019/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-empty-after-reluctant",
      "plugin": "sonarjs"
    },
    "sonarjs/single-character-alternation": {
      "type": "suggestion",
      "docs": {
        "description": "Single-character alternations in regular expressions should be replaced with character classes",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6035/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/single-character-alternation",
      "plugin": "sonarjs"
    },
    "sonarjs/no-code-after-done": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should not execute any code after \"done()\" is called",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6079/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-code-after-done",
      "plugin": "sonarjs"
    },
    "sonarjs/disabled-timeout": {
      "type": "problem",
      "docs": {
        "description": "Disabling Mocha timeouts should be explicit",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6080/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/disabled-timeout",
      "plugin": "sonarjs"
    },
    "sonarjs/chai-determinate-assertion": {
      "type": "suggestion",
      "docs": {
        "description": "Chai assertions should have only one reason to succeed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6092/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/chai-determinate-assertion",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-s3-bucket-server-encryption": {
      "type": "problem",
      "docs": {
        "description": "Disabling server-side encryption of S3 buckets is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6245/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/aws-s3-bucket-server-encryption",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-s3-bucket-insecure-http": {
      "type": "problem",
      "docs": {
        "description": "Authorizing HTTP communications with S3 buckets is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6249/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-s3-bucket-insecure-http",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-s3-bucket-versioning": {
      "type": "problem",
      "docs": {
        "description": "Disabling versioning of S3 buckets is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6252/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-s3-bucket-versioning",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-s3-bucket-granted-access": {
      "type": "problem",
      "docs": {
        "description": "Granting access to S3 buckets to all or authenticated users is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6265/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-s3-bucket-granted-access",
      "plugin": "sonarjs"
    },
    "sonarjs/no-angular-bypass-sanitization": {
      "type": "problem",
      "docs": {
        "description": "Disabling Angular built-in sanitization is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6268/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-angular-bypass-sanitization",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-iam-public-access": {
      "type": "problem",
      "docs": {
        "description": "Policies authorizing public access to resources are security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6270/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-iam-public-access",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-ec2-unencrypted-ebs-volume": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted EBS volumes is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6275/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-ec2-unencrypted-ebs-volume",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-s3-bucket-public-access": {
      "type": "problem",
      "docs": {
        "description": "Allowing public ACLs or policies on a S3 bucket is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6281/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-s3-bucket-public-access",
      "plugin": "sonarjs"
    },
    "sonarjs/no-vue-bypass-sanitization": {
      "type": "problem",
      "docs": {
        "description": "Disabling Vue.js built-in escaping is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6299/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "defaultOptions": [],
      "name": "sonarjs/no-vue-bypass-sanitization",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-iam-all-privileges": {
      "type": "problem",
      "docs": {
        "description": "Policies granting all privileges are security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6302/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-iam-all-privileges",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-rds-unencrypted-databases": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted RDS DB resources is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6303/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-rds-unencrypted-databases",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-iam-all-resources-accessible": {
      "type": "problem",
      "docs": {
        "description": "Policies granting access to all resources of an account are security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6304/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-iam-all-resources-accessible",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-opensearchservice-domain": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted Elasticsearch domains is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6308/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-opensearchservice-domain",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-iam-privilege-escalation": {
      "type": "problem",
      "docs": {
        "description": "AWS IAM policies should limit the scope of permissions given",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6317/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-iam-privilege-escalation",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-sagemaker-unencrypted-notebook": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted SageMaker notebook instances is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6319/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-sagemaker-unencrypted-notebook",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-restricted-ip-admin-access": {
      "type": "problem",
      "docs": {
        "description": "Administration services access should be restricted to specific IP addresses",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6321/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-restricted-ip-admin-access",
      "plugin": "sonarjs"
    },
    "sonarjs/no-empty-alternatives": {
      "type": "problem",
      "docs": {
        "description": "Alternation in regular expressions should not contain empty alternatives",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6323/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-empty-alternatives",
      "plugin": "sonarjs"
    },
    "sonarjs/no-control-regex": {
      "type": "problem",
      "docs": {
        "description": "Regular expressions should not contain control characters",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6324/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-control-regex",
      "plugin": "sonarjs"
    },
    "sonarjs/no-regex-spaces": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Regular expressions should not contain multiple spaces",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6326/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-regex-spaces",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-sns-unencrypted-topics": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted SNS topics is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6327/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-sns-unencrypted-topics",
      "plugin": "sonarjs"
    },
    "sonarjs/existing-groups": {
      "type": "problem",
      "docs": {
        "description": "Replacement strings should reference existing regular expression groups",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6328/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/existing-groups",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-ec2-rds-dms-public": {
      "type": "problem",
      "docs": {
        "description": "Allowing public network access to cloud resources is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6329/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-ec2-rds-dms-public",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-sqs-unencrypted-queue": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted SQS queues is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6330/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-sqs-unencrypted-queue",
      "plugin": "sonarjs"
    },
    "sonarjs/no-empty-group": {
      "type": "suggestion",
      "docs": {
        "description": "Regular expressions should not contain empty groups",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6331/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-empty-group",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-efs-unencrypted": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted EFS file systems is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6332/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-efs-unencrypted",
      "plugin": "sonarjs"
    },
    "sonarjs/aws-apigateway-public-api": {
      "type": "problem",
      "docs": {
        "description": "Creating public APIs is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6333/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/aws-apigateway-public-api",
      "plugin": "sonarjs"
    },
    "sonarjs/stateful-regex": {
      "type": "problem",
      "docs": {
        "description": "Regular expressions with the global flag should be used with caution",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6351/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/stateful-regex",
      "plugin": "sonarjs"
    },
    "sonarjs/concise-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Regular expression quantifiers and character classes should be used concisely",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6353/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/concise-regex",
      "plugin": "sonarjs"
    },
    "sonarjs/single-char-in-character-classes": {
      "type": "suggestion",
      "docs": {
        "description": "Character classes in regular expressions should not contain only one character",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6397/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/single-char-in-character-classes",
      "plugin": "sonarjs"
    },
    "sonarjs/no-hardcoded-secrets": {
      "type": "problem",
      "docs": {
        "description": "Hard-coded secrets are security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6418/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [
        {
          "secretWords": "api[_.-]?key,auth,credential,secret,token",
          "randomnessSensibility": 5
        }
      ],
      "name": "sonarjs/no-hardcoded-secrets",
      "plugin": "sonarjs"
    },
    "sonarjs/no-exclusive-tests": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Exclusive tests should not be commited to version control",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6426/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-exclusive-tests",
      "plugin": "sonarjs"
    },
    "sonarjs/jsx-no-leaked-render": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "React components should not render non-boolean condition values",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6439/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/jsx-no-leaked-render",
      "plugin": "sonarjs"
    },
    "sonarjs/no-hook-setter-in-body": {
      "type": "problem",
      "docs": {
        "description": "React's useState hook should not be used directly in the render function or body of a component",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6442/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-hook-setter-in-body",
      "plugin": "sonarjs"
    },
    "sonarjs/no-useless-react-setstate": {
      "type": "problem",
      "docs": {
        "description": "React state setter function should not be called with its matching state variable",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6443/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-useless-react-setstate",
      "plugin": "sonarjs"
    },
    "sonarjs/no-uniq-key": {
      "type": "suggestion",
      "docs": {
        "description": "JSX list components keys should match up between renders",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6486/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-uniq-key",
      "plugin": "sonarjs"
    },
    "sonarjs/redundant-type-aliases": {
      "type": "suggestion",
      "docs": {
        "description": "Redundant type aliases should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6564/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/redundant-type-aliases",
      "plugin": "sonarjs"
    },
    "sonarjs/prefer-regexp-exec": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "\"RegExp.exec()\" should be preferred over \"String.match()\"",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6594/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/prefer-regexp-exec",
      "plugin": "sonarjs"
    },
    "sonarjs/no-internal-api-use": {
      "type": "suggestion",
      "docs": {
        "description": "Users should not use internal APIs",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6627/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-internal-api-use",
      "plugin": "sonarjs"
    },
    "sonarjs/prefer-read-only-props": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "React props should be read-only",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6759/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/prefer-read-only-props",
      "plugin": "sonarjs"
    },
    "sonarjs/no-literal-call": {
      "type": "problem",
      "docs": {
        "description": "Literals should not be used as functions",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6958/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-literal-call",
      "plugin": "sonarjs"
    },
    "sonarjs/reduce-initial-value": {
      "type": "problem",
      "docs": {
        "description": "\"Array.reduce()\" calls should include an initial value",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6959/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/reduce-initial-value",
      "plugin": "sonarjs"
    },
    "sonarjs/no-async-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Constructors should not contain asynchronous operations",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S7059/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "defaultOptions": [],
      "name": "sonarjs/no-async-constructor",
      "plugin": "sonarjs"
    },
    "import/no-unresolved": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure imports point to a file/module that can be resolved.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-unresolved.md"
      },
      "name": "import/no-unresolved",
      "plugin": "import"
    },
    "import/named": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure named imports correspond to a named export in the remote file.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/named.md"
      },
      "name": "import/named",
      "plugin": "import"
    },
    "import/default": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure a default export is present, given a default import.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/default.md"
      },
      "name": "import/default",
      "plugin": "import"
    },
    "import/namespace": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure imported namespaces contain dereferenced properties as they are dereferenced.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/namespace.md"
      },
      "name": "import/namespace",
      "plugin": "import"
    },
    "import/no-namespace": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid namespace (a.k.a. \"wildcard\" `*`) imports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-namespace.md"
      },
      "fixable": "code",
      "name": "import/no-namespace",
      "plugin": "import"
    },
    "import/export": {
      "type": "problem",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid any invalid exports, i.e. re-export of the same name.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/export.md"
      },
      "name": "import/export",
      "plugin": "import"
    },
    "import/no-mutable-exports": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid the use of mutable exports with `var` or `let`.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-mutable-exports.md"
      },
      "name": "import/no-mutable-exports",
      "plugin": "import"
    },
    "import/extensions": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Ensure consistent use of file extension within the import path.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/extensions.md"
      },
      "name": "import/extensions",
      "plugin": "import"
    },
    "import/no-restricted-paths": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Enforce which files can be imported in a given folder.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-restricted-paths.md"
      },
      "name": "import/no-restricted-paths",
      "plugin": "import"
    },
    "import/no-internal-modules": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid importing the submodules of other modules.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-internal-modules.md"
      },
      "name": "import/no-internal-modules",
      "plugin": "import"
    },
    "import/group-exports": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Prefer named exports to be grouped together in a single export declaration",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/group-exports.md"
      },
      "name": "import/group-exports",
      "plugin": "import"
    },
    "import/no-relative-packages": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid importing packages through relative paths.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-relative-packages.md"
      },
      "fixable": "code",
      "name": "import/no-relative-packages",
      "plugin": "import"
    },
    "import/no-relative-parent-imports": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid importing modules from parent directories.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-relative-parent-imports.md"
      },
      "name": "import/no-relative-parent-imports",
      "plugin": "import"
    },
    "import/consistent-type-specifier-style": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce or ban the use of inline type-only markers for named imports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/consistent-type-specifier-style.md"
      },
      "fixable": "code",
      "name": "import/consistent-type-specifier-style",
      "plugin": "import"
    },
    "import/no-self-import": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid a module from importing itself.",
        "recommended": true,
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-self-import.md"
      },
      "name": "import/no-self-import",
      "plugin": "import"
    },
    "import/no-cycle": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid a module from importing a module with a dependency path back to itself.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-cycle.md"
      },
      "name": "import/no-cycle",
      "plugin": "import"
    },
    "import/no-named-default": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid named default exports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-named-default.md"
      },
      "name": "import/no-named-default",
      "plugin": "import"
    },
    "import/no-named-as-default": {
      "type": "problem",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid use of exported name as identifier of default export.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-named-as-default.md"
      },
      "name": "import/no-named-as-default",
      "plugin": "import"
    },
    "import/no-named-as-default-member": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid use of exported name as property of default export.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-named-as-default-member.md"
      },
      "name": "import/no-named-as-default-member",
      "plugin": "import"
    },
    "import/no-anonymous-default-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid anonymous values as default exports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-anonymous-default-export.md"
      },
      "name": "import/no-anonymous-default-export",
      "plugin": "import"
    },
    "import/no-unused-modules": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid modules without exports, or exports without matching import in another module.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-unused-modules.md"
      },
      "name": "import/no-unused-modules",
      "plugin": "import"
    },
    "import/no-commonjs": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid CommonJS `require` calls and `module.exports` or `exports.*`.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-commonjs.md"
      },
      "name": "import/no-commonjs",
      "plugin": "import"
    },
    "import/no-amd": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid AMD `require` and `define` calls.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-amd.md"
      },
      "name": "import/no-amd",
      "plugin": "import"
    },
    "import/no-duplicates": {
      "type": "problem",
      "docs": {
        "category": "Style guide",
        "description": "Forbid repeated import of the same module in multiple places.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-duplicates.md"
      },
      "fixable": "code",
      "name": "import/no-duplicates",
      "plugin": "import"
    },
    "import/first": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Ensure all imports appear before other statements.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/first.md"
      },
      "fixable": "code",
      "name": "import/first",
      "plugin": "import"
    },
    "import/max-dependencies": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce the maximum number of dependencies a module can have.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/max-dependencies.md"
      },
      "name": "import/max-dependencies",
      "plugin": "import"
    },
    "import/no-extraneous-dependencies": {
      "type": "problem",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid the use of extraneous packages.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-extraneous-dependencies.md"
      },
      "name": "import/no-extraneous-dependencies",
      "plugin": "import"
    },
    "import/no-absolute-path": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid import of modules using absolute paths.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-absolute-path.md"
      },
      "fixable": "code",
      "name": "import/no-absolute-path",
      "plugin": "import"
    },
    "import/no-nodejs-modules": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid Node.js builtin modules.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-nodejs-modules.md"
      },
      "name": "import/no-nodejs-modules",
      "plugin": "import"
    },
    "import/no-webpack-loader-syntax": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid webpack loader syntax in imports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-webpack-loader-syntax.md"
      },
      "name": "import/no-webpack-loader-syntax",
      "plugin": "import"
    },
    "import/order": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce a convention in module import order.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/order.md"
      },
      "fixable": "code",
      "name": "import/order",
      "plugin": "import"
    },
    "import/newline-after-import": {
      "type": "layout",
      "docs": {
        "category": "Style guide",
        "description": "Enforce a newline after import statements.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/newline-after-import.md"
      },
      "fixable": "whitespace",
      "name": "import/newline-after-import",
      "plugin": "import"
    },
    "import/prefer-default-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Prefer a default export if module exports a single name or multiple names.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/prefer-default-export.md"
      },
      "name": "import/prefer-default-export",
      "plugin": "import"
    },
    "import/no-default-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid default exports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-default-export.md"
      },
      "name": "import/no-default-export",
      "plugin": "import"
    },
    "import/no-named-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid named exports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-named-export.md"
      },
      "name": "import/no-named-export",
      "plugin": "import"
    },
    "import/no-dynamic-require": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid `require()` calls with expressions.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-dynamic-require.md"
      },
      "name": "import/no-dynamic-require",
      "plugin": "import"
    },
    "import/unambiguous": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid potentially ambiguous parse goal (`script` vs. `module`).",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/unambiguous.md"
      },
      "name": "import/unambiguous",
      "plugin": "import"
    },
    "import/no-unassigned-import": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid unassigned imports",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-unassigned-import.md"
      },
      "name": "import/no-unassigned-import",
      "plugin": "import"
    },
    "import/no-useless-path-segments": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid unnecessary path segments in import and require statements.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-useless-path-segments.md"
      },
      "fixable": "code",
      "name": "import/no-useless-path-segments",
      "plugin": "import"
    },
    "import/dynamic-import-chunkname": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce a leading comment with the webpackChunkName for dynamic imports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/dynamic-import-chunkname.md"
      },
      "hasSuggestions": true,
      "name": "import/dynamic-import-chunkname",
      "plugin": "import"
    },
    "import/no-import-module-exports": {
      "type": "problem",
      "docs": {
        "category": "Module systems",
        "description": "Forbid import statements with CommonJS module.exports.",
        "recommended": true
      },
      "fixable": "code",
      "name": "import/no-import-module-exports",
      "plugin": "import"
    },
    "import/no-empty-named-blocks": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid empty named import blocks.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-empty-named-blocks.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "import/no-empty-named-blocks",
      "plugin": "import"
    },
    "import/enforce-node-protocol-usage": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce either using, or omitting, the `node:` protocol when importing Node.js builtin modules.",
        "recommended": true,
        "category": "Static analysis",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/enforce-node-protocol-usage.md"
      },
      "fixable": "code",
      "name": "import/enforce-node-protocol-usage",
      "plugin": "import"
    },
    "import/exports-last": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Ensure all exports appear after other statements.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/exports-last.md"
      },
      "name": "import/exports-last",
      "plugin": "import"
    },
    "import/no-deprecated": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid imported names marked with `@deprecated` documentation tag.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.32.0/docs/rules/no-deprecated.md"
      },
      "name": "import/no-deprecated",
      "plugin": "import"
    },
    "import/imports-first": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Replaced by `import/first`.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/7b25c1cb95ee18acc1531002fd343e1e6031f9ed/docs/rules/imports-first.md"
      },
      "fixable": "code",
      "deprecated": true,
      "name": "import/imports-first",
      "plugin": "import"
    },
    "unicorn/better-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Improve regexes by making them shorter, consistent, and safer.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/better-regex.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "sortCharacterClasses": true
        }
      ],
      "name": "unicorn/better-regex",
      "plugin": "unicorn"
    },
    "unicorn/catch-error-name": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a specific parameter name in catch clauses.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/catch-error-name.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/catch-error-name",
      "plugin": "unicorn"
    },
    "unicorn/consistent-assert": {
      "type": "problem",
      "docs": {
        "description": "Enforce consistent assertion style with `node:assert`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-assert.md"
      },
      "fixable": "code",
      "name": "unicorn/consistent-assert",
      "plugin": "unicorn"
    },
    "unicorn/consistent-date-clone": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer passing `Date` directly to the constructor when cloning.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-date-clone.md"
      },
      "fixable": "code",
      "name": "unicorn/consistent-date-clone",
      "plugin": "unicorn"
    },
    "unicorn/consistent-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Use destructured variables over properties.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-destructuring.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/consistent-destructuring",
      "plugin": "unicorn"
    },
    "unicorn/consistent-empty-array-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer consistent types when spreading a ternary in an array literal.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-empty-array-spread.md"
      },
      "fixable": "code",
      "name": "unicorn/consistent-empty-array-spread",
      "plugin": "unicorn"
    },
    "unicorn/consistent-existence-index-check": {
      "type": "problem",
      "docs": {
        "description": "Enforce consistent style for element existence checks with `indexOf()`, `lastIndexOf()`, `findIndex()`, and `findLastIndex()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-existence-index-check.md"
      },
      "fixable": "code",
      "name": "unicorn/consistent-existence-index-check",
      "plugin": "unicorn"
    },
    "unicorn/consistent-function-scoping": {
      "type": "suggestion",
      "docs": {
        "description": "Move function definitions to the highest possible scope.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-function-scoping.md"
      },
      "defaultOptions": [
        {
          "checkArrowFunctions": true
        }
      ],
      "name": "unicorn/consistent-function-scoping",
      "plugin": "unicorn"
    },
    "unicorn/custom-error-definition": {
      "type": "problem",
      "docs": {
        "description": "Enforce correct `Error` subclassing.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/custom-error-definition.md"
      },
      "fixable": "code",
      "name": "unicorn/custom-error-definition",
      "plugin": "unicorn"
    },
    "unicorn/empty-brace-spaces": {
      "type": "layout",
      "docs": {
        "description": "Enforce no spaces between braces.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/empty-brace-spaces.md"
      },
      "fixable": "whitespace",
      "name": "unicorn/empty-brace-spaces",
      "plugin": "unicorn"
    },
    "unicorn/error-message": {
      "type": "problem",
      "docs": {
        "description": "Enforce passing a `message` value when creating a built-in error.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/error-message.md"
      },
      "name": "unicorn/error-message",
      "plugin": "unicorn"
    },
    "unicorn/escape-case": {
      "type": "suggestion",
      "docs": {
        "description": "Require escape sequences to use uppercase or lowercase values.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/escape-case.md"
      },
      "fixable": "code",
      "defaultOptions": [
        "uppercase"
      ],
      "name": "unicorn/escape-case",
      "plugin": "unicorn"
    },
    "unicorn/expiring-todo-comments": {
      "type": "suggestion",
      "docs": {
        "description": "Add expiration conditions to TODO comments.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/expiring-todo-comments.md"
      },
      "defaultOptions": [
        {
          "terms": [
            "todo",
            "fixme",
            "xxx"
          ],
          "ignore": [],
          "ignoreDatesOnPullRequests": true,
          "allowWarningComments": true
        }
      ],
      "name": "unicorn/expiring-todo-comments",
      "plugin": "unicorn"
    },
    "unicorn/explicit-length-check": {
      "type": "problem",
      "docs": {
        "description": "Enforce explicitly comparing the `length` or `size` property of a value.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/explicit-length-check.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/explicit-length-check",
      "plugin": "unicorn"
    },
    "unicorn/filename-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a case style for filenames.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/filename-case.md"
      },
      "defaultOptions": [],
      "name": "unicorn/filename-case",
      "plugin": "unicorn"
    },
    "unicorn/import-style": {
      "type": "problem",
      "docs": {
        "description": "Enforce specific import styles per module.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/import-style.md"
      },
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/import-style",
      "plugin": "unicorn"
    },
    "unicorn/new-for-builtins": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `new` for all builtins, except `String`, `Number`, `Boolean`, `Symbol` and `BigInt`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/new-for-builtins.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/new-for-builtins",
      "plugin": "unicorn"
    },
    "unicorn/no-abusive-eslint-disable": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce specifying rules to disable in `eslint-disable` comments.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-abusive-eslint-disable.md"
      },
      "name": "unicorn/no-abusive-eslint-disable",
      "plugin": "unicorn"
    },
    "unicorn/no-accessor-recursion": {
      "type": "problem",
      "docs": {
        "description": "Disallow recursive access to `this` within getters and setters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-accessor-recursion.md"
      },
      "defaultOptions": [],
      "name": "unicorn/no-accessor-recursion",
      "plugin": "unicorn"
    },
    "unicorn/no-anonymous-default-export": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow anonymous functions and classes as the default export.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-anonymous-default-export.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-anonymous-default-export",
      "plugin": "unicorn"
    },
    "unicorn/no-array-callback-reference": {
      "type": "problem",
      "docs": {
        "description": "Prevent passing a function reference directly to iterator methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-callback-reference.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-array-callback-reference",
      "plugin": "unicorn"
    },
    "unicorn/no-array-for-each": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `for…of` over the `forEach` method.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-for-each.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-array-for-each",
      "plugin": "unicorn"
    },
    "unicorn/no-array-method-this-argument": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using the `this` argument in array methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-method-this-argument.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-array-method-this-argument",
      "plugin": "unicorn"
    },
    "unicorn/no-array-reduce": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `Array#reduce()` and `Array#reduceRight()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-reduce.md"
      },
      "defaultOptions": [
        {
          "allowSimpleOperations": true
        }
      ],
      "name": "unicorn/no-array-reduce",
      "plugin": "unicorn"
    },
    "unicorn/no-array-reverse": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Array#toReversed()` over `Array#reverse()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-reverse.md"
      },
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "allowExpressionStatement": true
        }
      ],
      "name": "unicorn/no-array-reverse",
      "plugin": "unicorn"
    },
    "unicorn/no-await-expression-member": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow member access from await expression.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-await-expression-member.md"
      },
      "fixable": "code",
      "name": "unicorn/no-await-expression-member",
      "plugin": "unicorn"
    },
    "unicorn/no-await-in-promise-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `await` in `Promise` method parameters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-await-in-promise-methods.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-await-in-promise-methods",
      "plugin": "unicorn"
    },
    "unicorn/no-console-spaces": {
      "type": "suggestion",
      "docs": {
        "description": "Do not use leading/trailing space between `console.log` parameters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-console-spaces.md"
      },
      "fixable": "code",
      "name": "unicorn/no-console-spaces",
      "plugin": "unicorn"
    },
    "unicorn/no-document-cookie": {
      "type": "problem",
      "docs": {
        "description": "Do not use `document.cookie` directly.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-document-cookie.md"
      },
      "name": "unicorn/no-document-cookie",
      "plugin": "unicorn"
    },
    "unicorn/no-empty-file": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow empty files.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-empty-file.md"
      },
      "name": "unicorn/no-empty-file",
      "plugin": "unicorn"
    },
    "unicorn/no-for-loop": {
      "type": "suggestion",
      "docs": {
        "description": "Do not use a `for` loop that can be replaced with a `for-of` loop.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-for-loop.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-for-loop",
      "plugin": "unicorn"
    },
    "unicorn/no-hex-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of Unicode escapes instead of hexadecimal escapes.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-hex-escape.md"
      },
      "fixable": "code",
      "name": "unicorn/no-hex-escape",
      "plugin": "unicorn"
    },
    "unicorn/no-instanceof-builtins": {
      "type": "problem",
      "docs": {
        "description": "Disallow `instanceof` with built-in objects",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-instanceof-builtins.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "useErrorIsError": false,
          "strategy": "loose",
          "include": [],
          "exclude": []
        }
      ],
      "hasSuggestions": true,
      "name": "unicorn/no-instanceof-builtins",
      "plugin": "unicorn"
    },
    "unicorn/no-invalid-fetch-options": {
      "type": "problem",
      "docs": {
        "description": "Disallow invalid options in `fetch()` and `new Request()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-invalid-fetch-options.md"
      },
      "name": "unicorn/no-invalid-fetch-options",
      "plugin": "unicorn"
    },
    "unicorn/no-invalid-remove-event-listener": {
      "type": "problem",
      "docs": {
        "description": "Prevent calling `EventTarget#removeEventListener()` with the result of an expression.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-invalid-remove-event-listener.md"
      },
      "name": "unicorn/no-invalid-remove-event-listener",
      "plugin": "unicorn"
    },
    "unicorn/no-keyword-prefix": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow identifiers starting with `new` or `class`.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-keyword-prefix.md"
      },
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/no-keyword-prefix",
      "plugin": "unicorn"
    },
    "unicorn/no-lonely-if": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `if` statements as the only statement in `if` blocks without `else`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-lonely-if.md"
      },
      "fixable": "code",
      "name": "unicorn/no-lonely-if",
      "plugin": "unicorn"
    },
    "unicorn/no-magic-array-flat-depth": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow a magic number as the `depth` argument in `Array#flat(…).`",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-magic-array-flat-depth.md"
      },
      "name": "unicorn/no-magic-array-flat-depth",
      "plugin": "unicorn"
    },
    "unicorn/no-named-default": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow named usage of default import and export.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-named-default.md"
      },
      "fixable": "code",
      "name": "unicorn/no-named-default",
      "plugin": "unicorn"
    },
    "unicorn/no-negated-condition": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow negated conditions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-negated-condition.md"
      },
      "fixable": "code",
      "name": "unicorn/no-negated-condition",
      "plugin": "unicorn"
    },
    "unicorn/no-negation-in-equality-check": {
      "type": "problem",
      "docs": {
        "description": "Disallow negated expression in equality check.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-negation-in-equality-check.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-negation-in-equality-check",
      "plugin": "unicorn"
    },
    "unicorn/no-nested-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow nested ternary expressions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-nested-ternary.md"
      },
      "fixable": "code",
      "name": "unicorn/no-nested-ternary",
      "plugin": "unicorn"
    },
    "unicorn/no-new-array": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new Array()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-new-array.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-new-array",
      "plugin": "unicorn"
    },
    "unicorn/no-new-buffer": {
      "type": "problem",
      "docs": {
        "description": "Enforce the use of `Buffer.from()` and `Buffer.alloc()` instead of the deprecated `new Buffer()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-new-buffer.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-new-buffer",
      "plugin": "unicorn"
    },
    "unicorn/no-null": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of the `null` literal.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-null.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "checkStrictEquality": false
        }
      ],
      "name": "unicorn/no-null",
      "plugin": "unicorn"
    },
    "unicorn/no-object-as-default-parameter": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of objects as default parameters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-object-as-default-parameter.md"
      },
      "name": "unicorn/no-object-as-default-parameter",
      "plugin": "unicorn"
    },
    "unicorn/no-process-exit": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `process.exit()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-process-exit.md"
      },
      "name": "unicorn/no-process-exit",
      "plugin": "unicorn"
    },
    "unicorn/no-single-promise-in-promise-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow passing single-element arrays to `Promise` methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-single-promise-in-promise-methods.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-single-promise-in-promise-methods",
      "plugin": "unicorn"
    },
    "unicorn/no-static-only-class": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow classes that only have static members.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-static-only-class.md"
      },
      "fixable": "code",
      "name": "unicorn/no-static-only-class",
      "plugin": "unicorn"
    },
    "unicorn/no-thenable": {
      "type": "problem",
      "docs": {
        "description": "Disallow `then` property.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-thenable.md"
      },
      "name": "unicorn/no-thenable",
      "plugin": "unicorn"
    },
    "unicorn/no-this-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow assigning `this` to a variable.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-this-assignment.md"
      },
      "name": "unicorn/no-this-assignment",
      "plugin": "unicorn"
    },
    "unicorn/no-typeof-undefined": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow comparing `undefined` using `typeof`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-typeof-undefined.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "checkGlobalVariables": false
        }
      ],
      "name": "unicorn/no-typeof-undefined",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-array-flat-depth": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `1` as the `depth` argument of `Array#flat()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-array-flat-depth.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unnecessary-array-flat-depth",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-array-splice-count": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `.length` or `Infinity` as the `deleteCount` or `skipCount` argument of `Array#{splice,toSpliced}()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-array-splice-count.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unnecessary-array-splice-count",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-await": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow awaiting non-promise values.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-await.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unnecessary-await",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-polyfills": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of built-in methods instead of unnecessary polyfills.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-polyfills.md"
      },
      "defaultOptions": [],
      "name": "unicorn/no-unnecessary-polyfills",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-slice-end": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `.length` or `Infinity` as the `end` argument of `{Array,String,TypedArray}#slice()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-slice-end.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unnecessary-slice-end",
      "plugin": "unicorn"
    },
    "unicorn/no-unreadable-array-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unreadable array destructuring.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unreadable-array-destructuring.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unreadable-array-destructuring",
      "plugin": "unicorn"
    },
    "unicorn/no-unreadable-iife": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unreadable IIFEs.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unreadable-iife.md"
      },
      "hasSuggestions": false,
      "name": "unicorn/no-unreadable-iife",
      "plugin": "unicorn"
    },
    "unicorn/no-unused-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unused object properties.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unused-properties.md"
      },
      "name": "unicorn/no-unused-properties",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-error-capture-stack-trace": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary `Error.captureStackTrace(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-error-capture-stack-trace.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-error-capture-stack-trace",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-fallback-in-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless fallback when spreading in object literals.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-fallback-in-spread.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-fallback-in-spread",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-length-check": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless array length check.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-length-check.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-length-check",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-promise-resolve-reject": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow returning/yielding `Promise.resolve/reject()` in async functions or promise callbacks",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-promise-resolve-reject.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-promise-resolve-reject",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary spread.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-spread.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-spread",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-switch-case": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless case in switch statements.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-switch-case.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-useless-switch-case",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-undefined": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless `undefined`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-undefined.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/no-useless-undefined",
      "plugin": "unicorn"
    },
    "unicorn/no-zero-fractions": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow number literals with zero fractions or dangling dots.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-zero-fractions.md"
      },
      "fixable": "code",
      "name": "unicorn/no-zero-fractions",
      "plugin": "unicorn"
    },
    "unicorn/number-literal-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce proper case for numeric literals.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/number-literal-case.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "hexadecimalValue": "uppercase"
        }
      ],
      "name": "unicorn/number-literal-case",
      "plugin": "unicorn"
    },
    "unicorn/numeric-separators-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the style of numeric separators by correctly grouping digits.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/numeric-separators-style.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "onlyIfContainsSeparator": false,
          "binary": {
            "minimumDigits": 0,
            "groupLength": 4
          },
          "octal": {
            "minimumDigits": 0,
            "groupLength": 4
          },
          "hexadecimal": {
            "minimumDigits": 0,
            "groupLength": 2
          },
          "number": {
            "minimumDigits": 5,
            "groupLength": 3
          }
        }
      ],
      "name": "unicorn/numeric-separators-style",
      "plugin": "unicorn"
    },
    "unicorn/prefer-add-event-listener": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.addEventListener()` and `.removeEventListener()` over `on`-functions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-add-event-listener.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-add-event-listener",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-find": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.find(…)` and `.findLast(…)` over the first or last element from `.filter(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-find.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "checkFromLast": true
        }
      ],
      "name": "unicorn/prefer-array-find",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-flat": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Array#flat()` over legacy techniques to flatten arrays.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-flat.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-array-flat",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-flat-map": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.flatMap(…)` over `.map(…).flat()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-flat-map.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-array-flat-map",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-index-of": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Array#{indexOf,lastIndexOf}()` over `Array#{findIndex,findLastIndex}()` when looking for the index of an item.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-index-of.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-array-index-of",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-some": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.some(…)` over `.filter(…).length` check and `.{find,findLast,findIndex,findLastIndex}(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-some.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-array-some",
      "plugin": "unicorn"
    },
    "unicorn/prefer-at": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.at()` method for index access and `String#charAt()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-at.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "getLastElementFunctions": [],
          "checkAllIndexAccess": false
        }
      ],
      "name": "unicorn/prefer-at",
      "plugin": "unicorn"
    },
    "unicorn/prefer-blob-reading-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Blob#arrayBuffer()` over `FileReader#readAsArrayBuffer(…)` and `Blob#text()` over `FileReader#readAsText(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-blob-reading-methods.md"
      },
      "name": "unicorn/prefer-blob-reading-methods",
      "plugin": "unicorn"
    },
    "unicorn/prefer-class-fields": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer class field declarations over `this` assignments in constructors.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-class-fields.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-class-fields",
      "plugin": "unicorn"
    },
    "unicorn/prefer-code-point": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#codePointAt(…)` over `String#charCodeAt(…)` and `String.fromCodePoint(…)` over `String.fromCharCode(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-code-point.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-code-point",
      "plugin": "unicorn"
    },
    "unicorn/prefer-date-now": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Date.now()` to get the number of milliseconds since the Unix Epoch.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-date-now.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-date-now",
      "plugin": "unicorn"
    },
    "unicorn/prefer-default-parameters": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer default parameters over reassignment.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-default-parameters.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-default-parameters",
      "plugin": "unicorn"
    },
    "unicorn/prefer-dom-node-append": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Node#append()` over `Node#appendChild()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-dom-node-append.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-dom-node-append",
      "plugin": "unicorn"
    },
    "unicorn/prefer-dom-node-dataset": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `.dataset` on DOM elements over calling attribute methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-dom-node-dataset.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-dom-node-dataset",
      "plugin": "unicorn"
    },
    "unicorn/prefer-dom-node-remove": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-dom-node-remove.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-dom-node-remove",
      "plugin": "unicorn"
    },
    "unicorn/prefer-dom-node-text-content": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.textContent` over `.innerText`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-dom-node-text-content.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-dom-node-text-content",
      "plugin": "unicorn"
    },
    "unicorn/prefer-event-target": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `EventTarget` over `EventEmitter`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-event-target.md"
      },
      "name": "unicorn/prefer-event-target",
      "plugin": "unicorn"
    },
    "unicorn/prefer-export-from": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `export…from` when re-exporting.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-export-from.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "ignoreUsedVariables": false
        }
      ],
      "name": "unicorn/prefer-export-from",
      "plugin": "unicorn"
    },
    "unicorn/prefer-global-this": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `globalThis` over `window`, `self`, and `global`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-global-this.md"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "name": "unicorn/prefer-global-this",
      "plugin": "unicorn"
    },
    "unicorn/prefer-import-meta-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `import.meta.{dirname,filename}` over legacy techniques for getting file paths.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-import-meta-properties.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-import-meta-properties",
      "plugin": "unicorn"
    },
    "unicorn/prefer-includes": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.includes()` over `.indexOf()`, `.lastIndexOf()`, and `Array#some()` when checking for existence or non-existence.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-includes.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-includes",
      "plugin": "unicorn"
    },
    "unicorn/prefer-json-parse-buffer": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer reading a JSON file as a buffer.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-json-parse-buffer.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-json-parse-buffer",
      "plugin": "unicorn"
    },
    "unicorn/prefer-keyboard-event-key": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `KeyboardEvent#key` over `KeyboardEvent#keyCode`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-keyboard-event-key.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-keyboard-event-key",
      "plugin": "unicorn"
    },
    "unicorn/prefer-logical-operator-over-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using a logical operator over a ternary.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-logical-operator-over-ternary.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-logical-operator-over-ternary",
      "plugin": "unicorn"
    },
    "unicorn/prefer-math-min-max": {
      "type": "problem",
      "docs": {
        "description": "Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-math-min-max.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-math-min-max",
      "plugin": "unicorn"
    },
    "unicorn/prefer-math-trunc": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `Math.trunc` instead of bitwise operators.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-math-trunc.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-math-trunc",
      "plugin": "unicorn"
    },
    "unicorn/prefer-modern-dom-apis": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.before()` over `.insertBefore()`, `.replaceWith()` over `.replaceChild()`, prefer one of `.before()`, `.after()`, `.append()` or `.prepend()` over `insertAdjacentText()` and `insertAdjacentElement()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-modern-dom-apis.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-modern-dom-apis",
      "plugin": "unicorn"
    },
    "unicorn/prefer-modern-math-apis": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer modern `Math` APIs over legacy patterns.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-modern-math-apis.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-modern-math-apis",
      "plugin": "unicorn"
    },
    "unicorn/prefer-module": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer JavaScript modules (ESM) over CommonJS.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-module.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-module",
      "plugin": "unicorn"
    },
    "unicorn/prefer-native-coercion-functions": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `String`, `Number`, `BigInt`, `Boolean`, and `Symbol` directly.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-native-coercion-functions.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-native-coercion-functions",
      "plugin": "unicorn"
    },
    "unicorn/prefer-negative-index": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer negative index over `.length - index` when possible.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-negative-index.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-negative-index",
      "plugin": "unicorn"
    },
    "unicorn/prefer-node-protocol": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using the `node:` protocol when importing Node.js builtin modules.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-node-protocol.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-node-protocol",
      "plugin": "unicorn"
    },
    "unicorn/prefer-number-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Number` static properties over global ones.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-number-properties.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "checkInfinity": false,
          "checkNaN": true
        }
      ],
      "name": "unicorn/prefer-number-properties",
      "plugin": "unicorn"
    },
    "unicorn/prefer-object-from-entries": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `Object.fromEntries(…)` to transform a list of key-value pairs into an object.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-object-from-entries.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-object-from-entries",
      "plugin": "unicorn"
    },
    "unicorn/prefer-optional-catch-binding": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer omitting the `catch` binding parameter.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-optional-catch-binding.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-optional-catch-binding",
      "plugin": "unicorn"
    },
    "unicorn/prefer-prototype-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer borrowing methods from the prototype instead of the instance.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-prototype-methods.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-prototype-methods",
      "plugin": "unicorn"
    },
    "unicorn/prefer-query-selector": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.querySelector()` over `.getElementById()`, `.querySelectorAll()` over `.getElementsByClassName()` and `.getElementsByTagName()` and `.getElementsByName()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-query-selector.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-query-selector",
      "plugin": "unicorn"
    },
    "unicorn/prefer-reflect-apply": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Reflect.apply()` over `Function#apply()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-reflect-apply.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-reflect-apply",
      "plugin": "unicorn"
    },
    "unicorn/prefer-regexp-test": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `RegExp#test()` over `String#match()` and `RegExp#exec()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-regexp-test.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-regexp-test",
      "plugin": "unicorn"
    },
    "unicorn/prefer-set-has": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Set#has()` over `Array#includes()` when checking for existence or non-existence.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-set-has.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-set-has",
      "plugin": "unicorn"
    },
    "unicorn/prefer-set-size": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `Set#size` instead of `Array#length`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-set-size.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-set-size",
      "plugin": "unicorn"
    },
    "unicorn/prefer-single-call": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce combining multiple `Array#push()`, `Element#classList.{add,remove}()`, and `importScripts()` into one call.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-single-call.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-single-call",
      "plugin": "unicorn"
    },
    "unicorn/prefer-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer the spread operator over `Array.from(…)`, `Array#concat(…)`, `Array#{slice,toSpliced}()` and `String#split('')`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-spread.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-spread",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-raw": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using the `String.raw` tag to avoid escaping `\\`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-raw.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-string-raw",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-replace-all": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#replaceAll()` over regex searches with the global flag.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-replace-all.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-string-replace-all",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-slice": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#slice()` over `String#substr()` and `String#substring()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-slice.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-string-slice",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-starts-ends-with": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#startsWith()` & `String#endsWith()` over `RegExp#test()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-starts-ends-with.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-string-starts-ends-with",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-trim-start-end": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#trimStart()` / `String#trimEnd()` over `String#trimLeft()` / `String#trimRight()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-trim-start-end.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-string-trim-start-end",
      "plugin": "unicorn"
    },
    "unicorn/prefer-structured-clone": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `structuredClone` to create a deep clone.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-structured-clone.md"
      },
      "hasSuggestions": true,
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-structured-clone",
      "plugin": "unicorn"
    },
    "unicorn/prefer-switch": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `switch` over multiple `else-if`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-switch.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "minimumCases": 3,
          "emptyDefaultCase": "no-default-comment"
        }
      ],
      "name": "unicorn/prefer-switch",
      "plugin": "unicorn"
    },
    "unicorn/prefer-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer ternary expressions over simple `if-else` statements.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-ternary.md"
      },
      "fixable": "code",
      "defaultOptions": [
        "always"
      ],
      "name": "unicorn/prefer-ternary",
      "plugin": "unicorn"
    },
    "unicorn/prefer-top-level-await": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer top-level await over top-level promises and async function calls.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-top-level-await.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-top-level-await",
      "plugin": "unicorn"
    },
    "unicorn/prefer-type-error": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce throwing `TypeError` in type checking conditions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-type-error.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-type-error",
      "plugin": "unicorn"
    },
    "unicorn/prevent-abbreviations": {
      "type": "suggestion",
      "docs": {
        "description": "Prevent abbreviations.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prevent-abbreviations.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prevent-abbreviations",
      "plugin": "unicorn"
    },
    "unicorn/relative-url-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent relative URL style.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/relative-url-style.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        "never"
      ],
      "name": "unicorn/relative-url-style",
      "plugin": "unicorn"
    },
    "unicorn/require-array-join-separator": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using the separator argument with `Array#join()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/require-array-join-separator.md"
      },
      "fixable": "code",
      "name": "unicorn/require-array-join-separator",
      "plugin": "unicorn"
    },
    "unicorn/require-module-specifiers": {
      "type": "suggestion",
      "docs": {
        "description": "Require non-empty specifier list in import and export statements.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/require-module-specifiers.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/require-module-specifiers",
      "plugin": "unicorn"
    },
    "unicorn/require-number-to-fixed-digits-argument": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using the digits argument with `Number#toFixed()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/require-number-to-fixed-digits-argument.md"
      },
      "fixable": "code",
      "name": "unicorn/require-number-to-fixed-digits-argument",
      "plugin": "unicorn"
    },
    "unicorn/require-post-message-target-origin": {
      "type": "problem",
      "docs": {
        "description": "Enforce using the `targetOrigin` argument with `window.postMessage()`.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/require-post-message-target-origin.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/require-post-message-target-origin",
      "plugin": "unicorn"
    },
    "unicorn/string-content": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce better string content.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/string-content.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/string-content",
      "plugin": "unicorn"
    },
    "unicorn/switch-case-braces": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent brace style for `case` clauses.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/switch-case-braces.md"
      },
      "fixable": "code",
      "defaultOptions": [
        "always"
      ],
      "name": "unicorn/switch-case-braces",
      "plugin": "unicorn"
    },
    "unicorn/template-indent": {
      "type": "suggestion",
      "docs": {
        "description": "Fix whitespace-insensitive template indentation.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/template-indent.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/template-indent",
      "plugin": "unicorn"
    },
    "unicorn/text-encoding-identifier-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent case for text encoding identifiers.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/text-encoding-identifier-case.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/text-encoding-identifier-case",
      "plugin": "unicorn"
    },
    "unicorn/throw-new-error": {
      "type": "suggestion",
      "docs": {
        "description": "Require `new` when creating an error.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/throw-new-error.md"
      },
      "fixable": "code",
      "name": "unicorn/throw-new-error",
      "plugin": "unicorn"
    },
    "unicorn/no-instanceof-array": {
      "docs": {
        "description": "Replaced by `unicorn/no-instanceof-builtins` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-instanceof-array"
      },
      "deprecated": {
        "message": "Replaced by `unicorn/no-instanceof-builtins` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-instanceof-array",
        "replacedBy": [
          "unicorn/no-instanceof-builtins"
        ]
      },
      "name": "unicorn/no-instanceof-array",
      "plugin": "unicorn"
    },
    "unicorn/no-length-as-slice-end": {
      "docs": {
        "description": "Replaced by `unicorn/no-unnecessary-slice-end` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-length-as-slice-end"
      },
      "deprecated": {
        "message": "Replaced by `unicorn/no-unnecessary-slice-end` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-length-as-slice-end",
        "replacedBy": [
          "unicorn/no-unnecessary-slice-end"
        ]
      },
      "name": "unicorn/no-length-as-slice-end",
      "plugin": "unicorn"
    },
    "unicorn/no-array-push-push": {
      "docs": {
        "description": "Replaced by `unicorn/prefer-single-call` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-array-push-push"
      },
      "deprecated": {
        "message": "Replaced by `unicorn/prefer-single-call` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-array-push-push",
        "replacedBy": [
          "unicorn/prefer-single-call"
        ]
      },
      "name": "unicorn/no-array-push-push",
      "plugin": "unicorn"
    },
    "@typescript-eslint/adjacent-overload-signatures": {
      "type": "suggestion",
      "docs": {
        "description": "Require that function overload signatures be consecutive",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/adjacent-overload-signatures"
      },
      "name": "@typescript-eslint/adjacent-overload-signatures",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/array-type": {
      "type": "suggestion",
      "docs": {
        "description": "Require consistently using either `T[]` or `Array<T>` for arrays",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/array-type"
      },
      "fixable": "code",
      "name": "@typescript-eslint/array-type",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/await-thenable": {
      "type": "problem",
      "docs": {
        "description": "Disallow awaiting a value that is not a Thenable",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/await-thenable"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/await-thenable",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/ban-ts-comment": {
      "type": "problem",
      "docs": {
        "description": "Disallow `@ts-<directive>` comments or require descriptions after directives",
        "recommended": {
          "recommended": true,
          "strict": [
            {
              "minimumDescriptionLength": 10
            }
          ]
        },
        "url": "https://typescript-eslint.io/rules/ban-ts-comment"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/ban-ts-comment",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/ban-tslint-comment": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `// tslint:<rule-flag>` comments",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/ban-tslint-comment"
      },
      "fixable": "code",
      "name": "@typescript-eslint/ban-tslint-comment",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/class-literal-property-style": {
      "type": "problem",
      "docs": {
        "description": "Enforce that literals on classes are exposed in a consistent style",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/class-literal-property-style"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/class-literal-property-style",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/class-methods-use-this": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce that class methods utilize `this`",
        "extendsBaseRule": true,
        "requiresTypeChecking": false,
        "url": "https://typescript-eslint.io/rules/class-methods-use-this"
      },
      "name": "@typescript-eslint/class-methods-use-this",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/consistent-generic-constructors": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce specifying generic type arguments on type annotation or constructor name of a constructor call",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-generic-constructors"
      },
      "fixable": "code",
      "name": "@typescript-eslint/consistent-generic-constructors",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/consistent-indexed-object-style": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow the `Record` type",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-indexed-object-style"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/consistent-indexed-object-style",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/consistent-return": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "treatUndefinedAsUnspecified": false
        }
      ],
      "docs": {
        "description": "Require `return` statements to either always or never specify values",
        "extendsBaseRule": true,
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/consistent-return"
      },
      "name": "@typescript-eslint/consistent-return",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/consistent-type-assertions": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent usage of type assertions",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-type-assertions"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/consistent-type-assertions",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/consistent-type-definitions": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce type definitions to consistently use either `interface` or `type`",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-type-definitions"
      },
      "fixable": "code",
      "name": "@typescript-eslint/consistent-type-definitions",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/consistent-type-exports": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent usage of type exports",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/consistent-type-exports"
      },
      "fixable": "code",
      "name": "@typescript-eslint/consistent-type-exports",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/consistent-type-imports": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent usage of type imports",
        "url": "https://typescript-eslint.io/rules/consistent-type-imports"
      },
      "fixable": "code",
      "name": "@typescript-eslint/consistent-type-imports",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/default-param-last": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce default parameters to be last",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/default-param-last"
      },
      "name": "@typescript-eslint/default-param-last",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/dot-notation": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowIndexSignaturePropertyAccess": false,
          "allowKeywords": true,
          "allowPattern": "",
          "allowPrivateClassPropertyAccess": false,
          "allowProtectedClassPropertyAccess": false
        }
      ],
      "docs": {
        "description": "Enforce dot notation whenever possible",
        "extendsBaseRule": true,
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/dot-notation"
      },
      "fixable": "code",
      "name": "@typescript-eslint/dot-notation",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/explicit-function-return-type": {
      "type": "problem",
      "docs": {
        "description": "Require explicit return types on functions and class methods",
        "url": "https://typescript-eslint.io/rules/explicit-function-return-type"
      },
      "name": "@typescript-eslint/explicit-function-return-type",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/explicit-member-accessibility": {
      "type": "problem",
      "docs": {
        "description": "Require explicit accessibility modifiers on class properties and methods",
        "url": "https://typescript-eslint.io/rules/explicit-member-accessibility"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/explicit-member-accessibility",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/explicit-module-boundary-types": {
      "type": "problem",
      "docs": {
        "description": "Require explicit return and argument types on exported functions' and classes' public class methods",
        "url": "https://typescript-eslint.io/rules/explicit-module-boundary-types"
      },
      "name": "@typescript-eslint/explicit-module-boundary-types",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/init-declarations": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow initialization in variable declarations",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/init-declarations"
      },
      "name": "@typescript-eslint/init-declarations",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/max-params": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of parameters in function definitions",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/max-params"
      },
      "name": "@typescript-eslint/max-params",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/member-ordering": {
      "type": "suggestion",
      "docs": {
        "description": "Require a consistent member declaration order",
        "url": "https://typescript-eslint.io/rules/member-ordering"
      },
      "name": "@typescript-eslint/member-ordering",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/method-signature-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using a particular method signature syntax",
        "url": "https://typescript-eslint.io/rules/method-signature-style"
      },
      "fixable": "code",
      "name": "@typescript-eslint/method-signature-style",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/naming-convention": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce naming conventions for everything across a codebase",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/naming-convention"
      },
      "name": "@typescript-eslint/naming-convention",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-array-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow generic `Array` constructors",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-array-constructor"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-array-constructor",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-array-delete": {
      "type": "problem",
      "docs": {
        "description": "Disallow using the `delete` operator on array values",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-array-delete"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-array-delete",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-base-to-string": {
      "type": "suggestion",
      "docs": {
        "description": "Require `.toString()` and `.toLocaleString()` to only be called on objects which provide useful information when stringified",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-base-to-string"
      },
      "name": "@typescript-eslint/no-base-to-string",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-confusing-non-null-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertion in locations that may be confusing",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/no-confusing-non-null-assertion"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-confusing-non-null-assertion",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-confusing-void-expression": {
      "type": "problem",
      "docs": {
        "description": "Require expressions of type void to appear in statement position",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-confusing-void-expression"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-confusing-void-expression",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-deprecated": {
      "type": "problem",
      "docs": {
        "description": "Disallow using code marked as `@deprecated`",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-deprecated"
      },
      "name": "@typescript-eslint/no-deprecated",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-dupe-class-members": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate class members",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-dupe-class-members"
      },
      "name": "@typescript-eslint/no-dupe-class-members",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-duplicate-enum-values": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate enum member values",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-duplicate-enum-values"
      },
      "hasSuggestions": false,
      "name": "@typescript-eslint/no-duplicate-enum-values",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-duplicate-type-constituents": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow duplicate constituents of union or intersection types",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-duplicate-type-constituents"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-duplicate-type-constituents",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-dynamic-delete": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using the `delete` operator on computed key expressions",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-dynamic-delete"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-dynamic-delete",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-empty-function": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": []
        }
      ],
      "docs": {
        "description": "Disallow empty functions",
        "extendsBaseRule": true,
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/no-empty-function"
      },
      "name": "@typescript-eslint/no-empty-function",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-empty-interface": {
      "type": "suggestion",
      "deprecated": {
        "deprecatedSince": "8.0.0",
        "replacedBy": [
          {
            "rule": {
              "name": "@typescript-eslint/no-empty-object-type",
              "url": "https://typescript-eslint.io/rules/no-empty-object-type"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
      },
      "docs": {
        "description": "Disallow the declaration of empty interfaces",
        "url": "https://typescript-eslint.io/rules/no-empty-interface"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "replacedBy": [
        "@typescript-eslint/no-empty-object-type"
      ],
      "name": "@typescript-eslint/no-empty-interface",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-empty-object-type": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow accidentally using the \"empty object\" type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-empty-object-type"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-empty-object-type",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-explicit-any": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the `any` type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-explicit-any"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-explicit-any",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-extra-non-null-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow extra non-null assertions",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-extra-non-null-assertion"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-extra-non-null-assertion",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-extraneous-class": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow classes used as namespaces",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-extraneous-class"
      },
      "name": "@typescript-eslint/no-extraneous-class",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-floating-promises": {
      "type": "problem",
      "docs": {
        "description": "Require Promise-like statements to be handled appropriately",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-floating-promises"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-floating-promises",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-for-in-array": {
      "type": "problem",
      "docs": {
        "description": "Disallow iterating over an array with a for-in loop",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-for-in-array"
      },
      "name": "@typescript-eslint/no-for-in-array",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-implied-eval": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `eval()`-like functions",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-implied-eval"
      },
      "name": "@typescript-eslint/no-implied-eval",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-import-type-side-effects": {
      "type": "problem",
      "docs": {
        "description": "Enforce the use of top-level import type qualifier when an import only has specifiers with inline type qualifiers",
        "url": "https://typescript-eslint.io/rules/no-import-type-side-effects"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-import-type-side-effects",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-inferrable-types": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/no-inferrable-types"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-inferrable-types",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-invalid-this": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "capIsConstructor": true
        }
      ],
      "docs": {
        "description": "Disallow `this` keywords outside of classes or class-like objects",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-invalid-this"
      },
      "name": "@typescript-eslint/no-invalid-this",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-invalid-void-type": {
      "type": "problem",
      "docs": {
        "description": "Disallow `void` type outside of generic or return types",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-invalid-void-type"
      },
      "name": "@typescript-eslint/no-invalid-void-type",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-loop-func": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow function declarations that contain unsafe references inside loop statements",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-loop-func"
      },
      "name": "@typescript-eslint/no-loop-func",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-loss-of-precision": {
      "type": "problem",
      "deprecated": {
        "deprecatedSince": "8.0.0",
        "replacedBy": [
          {
            "rule": {
              "name": "no-loss-of-precision",
              "url": "https://eslint.org/docs/latest/rules/no-loss-of-precision"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8832"
      },
      "docs": {
        "description": "Disallow literal numbers that lose precision",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-loss-of-precision"
      },
      "name": "@typescript-eslint/no-loss-of-precision",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-magic-numbers": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow magic numbers",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-magic-numbers"
      },
      "name": "@typescript-eslint/no-magic-numbers",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-meaningless-void-operator": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the `void` operator except when used to discard a value",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-meaningless-void-operator"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-meaningless-void-operator",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-misused-new": {
      "type": "problem",
      "docs": {
        "description": "Enforce valid definition of `new` and `constructor`",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-misused-new"
      },
      "name": "@typescript-eslint/no-misused-new",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-misused-promises": {
      "type": "problem",
      "docs": {
        "description": "Disallow Promises in places not designed to handle them",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-misused-promises"
      },
      "name": "@typescript-eslint/no-misused-promises",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-misused-spread": {
      "type": "problem",
      "docs": {
        "description": "Disallow using the spread operator when it might cause unexpected behavior",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-misused-spread"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-misused-spread",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-mixed-enums": {
      "type": "problem",
      "docs": {
        "description": "Disallow enums from having both number and string members",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-mixed-enums"
      },
      "name": "@typescript-eslint/no-mixed-enums",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-namespace": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow TypeScript namespaces",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-namespace"
      },
      "name": "@typescript-eslint/no-namespace",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertions in the left operand of a nullish coalescing operator",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-non-null-asserted-nullish-coalescing",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-non-null-asserted-optional-chain": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertions after an optional chain expression",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-non-null-asserted-optional-chain",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-non-null-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertions using the `!` postfix operator",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-non-null-assertion"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-non-null-assertion",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-redeclare": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow variable redeclaration",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-redeclare"
      },
      "name": "@typescript-eslint/no-redeclare",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-redundant-type-constituents": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow members of unions and intersections that do nothing or override type information",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-redundant-type-constituents"
      },
      "name": "@typescript-eslint/no-redundant-type-constituents",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-require-imports": {
      "type": "problem",
      "docs": {
        "description": "Disallow invocation of `require()`",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-require-imports"
      },
      "name": "@typescript-eslint/no-require-imports",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-restricted-imports": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified modules when loaded by `import`",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-restricted-imports"
      },
      "name": "@typescript-eslint/no-restricted-imports",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-restricted-types": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain types",
        "url": "https://typescript-eslint.io/rules/no-restricted-types"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-restricted-types",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-shadow": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow variable declarations from shadowing variables declared in the outer scope",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-shadow"
      },
      "name": "@typescript-eslint/no-shadow",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-this-alias": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow aliasing `this`",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-this-alias"
      },
      "name": "@typescript-eslint/no-this-alias",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-type-alias": {
      "type": "suggestion",
      "deprecated": {
        "deprecatedSince": "6.0.0",
        "replacedBy": [
          {
            "rule": {
              "name": "@typescript-eslint/consistent-type-definitions",
              "url": "https://typescript-eslint.io/rules/consistent-type-definitions"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/6229"
      },
      "docs": {
        "description": "Disallow type aliases",
        "url": "https://typescript-eslint.io/rules/no-type-alias"
      },
      "name": "@typescript-eslint/no-type-alias",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary equality comparisons against boolean literals",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-unnecessary-boolean-literal-compare",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-condition": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow conditionals where the type is always truthy or always falsy",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-condition"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-unnecessary-condition",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-parameter-property-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary assignment of constructor property parameter",
        "url": "https://typescript-eslint.io/rules/no-unnecessary-parameter-property-assignment"
      },
      "name": "@typescript-eslint/no-unnecessary-parameter-property-assignment",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-qualifier": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary namespace qualifiers",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-qualifier"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-unnecessary-qualifier",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-template-expression": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary template expressions",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-template-expression"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-unnecessary-template-expression",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-type-arguments": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow type arguments that are equal to the default",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-arguments"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-unnecessary-type-arguments",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-type-assertion": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow type assertions that do not change the type of an expression",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-assertion"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-unnecessary-type-assertion",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-type-constraint": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary constraints on generic types",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-constraint"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-unnecessary-type-constraint",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-type-conversion": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow conversion idioms when they do not change the type or value of the expression",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-conversion"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-unnecessary-type-conversion",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unnecessary-type-parameters": {
      "type": "problem",
      "docs": {
        "description": "Disallow type parameters that aren't used multiple times",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-parameters"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-unnecessary-type-parameters",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-argument": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling a function with a value with type `any`",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-argument"
      },
      "name": "@typescript-eslint/no-unsafe-argument",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-assignment": {
      "type": "problem",
      "docs": {
        "description": "Disallow assigning a value with type `any` to variables and properties",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-assignment"
      },
      "name": "@typescript-eslint/no-unsafe-assignment",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-call": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling a value with type `any`",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-call"
      },
      "name": "@typescript-eslint/no-unsafe-call",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-declaration-merging": {
      "type": "problem",
      "docs": {
        "description": "Disallow unsafe declaration merging",
        "recommended": "recommended",
        "requiresTypeChecking": false,
        "url": "https://typescript-eslint.io/rules/no-unsafe-declaration-merging"
      },
      "name": "@typescript-eslint/no-unsafe-declaration-merging",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-enum-comparison": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow comparing an enum value with a non-enum value",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-enum-comparison"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-unsafe-enum-comparison",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-function-type": {
      "type": "problem",
      "docs": {
        "description": "Disallow using the unsafe built-in Function type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unsafe-function-type"
      },
      "name": "@typescript-eslint/no-unsafe-function-type",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-member-access": {
      "type": "problem",
      "docs": {
        "description": "Disallow member access on a value with type `any`",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-member-access"
      },
      "name": "@typescript-eslint/no-unsafe-member-access",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-return": {
      "type": "problem",
      "docs": {
        "description": "Disallow returning a value with type `any` from a function",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-return"
      },
      "name": "@typescript-eslint/no-unsafe-return",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-type-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow type assertions that narrow a type",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-type-assertion"
      },
      "name": "@typescript-eslint/no-unsafe-type-assertion",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unsafe-unary-minus": {
      "type": "problem",
      "docs": {
        "description": "Require unary negation to take a number",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-unary-minus"
      },
      "name": "@typescript-eslint/no-unsafe-unary-minus",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unused-expressions": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowShortCircuit": false,
          "allowTaggedTemplates": false,
          "allowTernary": false
        }
      ],
      "docs": {
        "description": "Disallow unused expressions",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unused-expressions"
      },
      "name": "@typescript-eslint/no-unused-expressions",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-unused-vars": {
      "type": "problem",
      "docs": {
        "description": "Disallow unused variables",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unused-vars"
      },
      "name": "@typescript-eslint/no-unused-vars",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-use-before-define": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of variables before they are defined",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-use-before-define"
      },
      "name": "@typescript-eslint/no-use-before-define",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-useless-constructor": {
      "type": "problem",
      "docs": {
        "description": "Disallow unnecessary constructors",
        "extendsBaseRule": true,
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-useless-constructor"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/no-useless-constructor",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-useless-empty-export": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow empty exports that don't change anything in a module file",
        "url": "https://typescript-eslint.io/rules/no-useless-empty-export"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "name": "@typescript-eslint/no-useless-empty-export",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-var-requires": {
      "type": "problem",
      "deprecated": {
        "deprecatedSince": "8.0.0",
        "replacedBy": [
          {
            "rule": {
              "name": "@typescript-eslint/no-require-imports",
              "url": "https://typescript-eslint.io/rules/no-require-imports"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8334"
      },
      "docs": {
        "description": "Disallow `require` statements except in import statements",
        "url": "https://typescript-eslint.io/rules/no-var-requires"
      },
      "replacedBy": [
        "@typescript-eslint/no-require-imports"
      ],
      "name": "@typescript-eslint/no-var-requires",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/no-wrapper-object-types": {
      "type": "problem",
      "docs": {
        "description": "Disallow using confusing built-in primitive class wrappers",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-wrapper-object-types"
      },
      "fixable": "code",
      "name": "@typescript-eslint/no-wrapper-object-types",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/non-nullable-type-assertion-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce non-null assertions over explicit type assertions",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/non-nullable-type-assertion-style"
      },
      "fixable": "code",
      "name": "@typescript-eslint/non-nullable-type-assertion-style",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/only-throw-error": {
      "type": "problem",
      "docs": {
        "description": "Disallow throwing non-`Error` values as exceptions",
        "extendsBaseRule": "no-throw-literal",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/only-throw-error"
      },
      "name": "@typescript-eslint/only-throw-error",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/parameter-properties": {
      "type": "problem",
      "docs": {
        "description": "Require or disallow parameter properties in class constructors",
        "url": "https://typescript-eslint.io/rules/parameter-properties"
      },
      "name": "@typescript-eslint/parameter-properties",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-as-const": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `as const` over literal type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/prefer-as-const"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/prefer-as-const",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Require destructuring from arrays and/or objects",
        "extendsBaseRule": true,
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-destructuring"
      },
      "fixable": "code",
      "name": "@typescript-eslint/prefer-destructuring",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-enum-initializers": {
      "type": "suggestion",
      "docs": {
        "description": "Require each enum member value to be explicitly initialized",
        "url": "https://typescript-eslint.io/rules/prefer-enum-initializers"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/prefer-enum-initializers",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-find": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of Array.prototype.find() over Array.prototype.filter() followed by [0] when looking for a single result",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-find"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/prefer-find",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-for-of": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `for-of` loop over the standard `for` loop where possible",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/prefer-for-of"
      },
      "name": "@typescript-eslint/prefer-for-of",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-function-type": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using function types instead of interfaces with call signatures",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/prefer-function-type"
      },
      "fixable": "code",
      "name": "@typescript-eslint/prefer-function-type",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-includes": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce `includes` method over `indexOf` method",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-includes"
      },
      "fixable": "code",
      "name": "@typescript-eslint/prefer-includes",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-literal-enum-member": {
      "type": "suggestion",
      "docs": {
        "description": "Require all enum members to be literal values",
        "recommended": "strict",
        "requiresTypeChecking": false,
        "url": "https://typescript-eslint.io/rules/prefer-literal-enum-member"
      },
      "name": "@typescript-eslint/prefer-literal-enum-member",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-namespace-keyword": {
      "type": "suggestion",
      "docs": {
        "description": "Require using `namespace` keyword over `module` keyword to declare custom TypeScript modules",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/prefer-namespace-keyword"
      },
      "fixable": "code",
      "name": "@typescript-eslint/prefer-namespace-keyword",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-nullish-coalescing": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using the nullish coalescing operator instead of logical assignments or chaining",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-nullish-coalescing"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/prefer-nullish-coalescing",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-optional-chain": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using concise optional chain expressions instead of chained logical ands, negated logical ors, or empty objects",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-optional-chain"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/prefer-optional-chain",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-promise-reject-errors": {
      "type": "suggestion",
      "docs": {
        "description": "Require using Error objects as Promise rejection reasons",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-promise-reject-errors"
      },
      "name": "@typescript-eslint/prefer-promise-reject-errors",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-readonly": {
      "type": "suggestion",
      "docs": {
        "description": "Require private members to be marked as `readonly` if they're never modified outside of the constructor",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-readonly"
      },
      "fixable": "code",
      "name": "@typescript-eslint/prefer-readonly",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-readonly-parameter-types": {
      "type": "suggestion",
      "docs": {
        "description": "Require function parameters to be typed as `readonly` to prevent accidental mutation of inputs",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-readonly-parameter-types"
      },
      "name": "@typescript-eslint/prefer-readonly-parameter-types",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-reduce-type-parameter": {
      "type": "problem",
      "docs": {
        "description": "Enforce using type parameter when calling `Array#reduce` instead of using a type assertion",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-reduce-type-parameter"
      },
      "fixable": "code",
      "name": "@typescript-eslint/prefer-reduce-type-parameter",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-regexp-exec": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce `RegExp#exec` over `String#match` if no global flag is provided",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-regexp-exec"
      },
      "fixable": "code",
      "name": "@typescript-eslint/prefer-regexp-exec",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-return-this-type": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce that `this` is used when only `this` type is returned",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-return-this-type"
      },
      "fixable": "code",
      "name": "@typescript-eslint/prefer-return-this-type",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-string-starts-ends-with": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using `String#startsWith` and `String#endsWith` over other equivalent methods of checking substrings",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-string-starts-ends-with"
      },
      "fixable": "code",
      "name": "@typescript-eslint/prefer-string-starts-ends-with",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/prefer-ts-expect-error": {
      "type": "problem",
      "deprecated": {
        "deprecatedSince": "7.11.0",
        "replacedBy": [
          {
            "rule": {
              "name": "@typescript-eslint/ban-ts-comment",
              "url": "https://typescript-eslint.io/rules/ban-ts-comment"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/9081"
      },
      "docs": {
        "description": "Enforce using `@ts-expect-error` over `@ts-ignore`",
        "url": "https://typescript-eslint.io/rules/prefer-ts-expect-error"
      },
      "fixable": "code",
      "replacedBy": [
        "@typescript-eslint/ban-ts-comment"
      ],
      "name": "@typescript-eslint/prefer-ts-expect-error",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/promise-function-async": {
      "type": "suggestion",
      "docs": {
        "description": "Require any function or method that returns a Promise to be marked async",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/promise-function-async"
      },
      "fixable": "code",
      "name": "@typescript-eslint/promise-function-async",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/related-getter-setter-pairs": {
      "type": "problem",
      "docs": {
        "description": "Enforce that `get()` types should be assignable to their equivalent `set()` type",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/related-getter-setter-pairs"
      },
      "name": "@typescript-eslint/related-getter-setter-pairs",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/require-array-sort-compare": {
      "type": "problem",
      "docs": {
        "description": "Require `Array#sort` and `Array#toSorted` calls to always provide a `compareFunction`",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/require-array-sort-compare"
      },
      "name": "@typescript-eslint/require-array-sort-compare",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/require-await": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow async functions which do not return promises and have no `await` expression",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/require-await"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/require-await",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/restrict-plus-operands": {
      "type": "problem",
      "docs": {
        "description": "Require both operands of addition to be the same type and be `bigint`, `number`, or `string`",
        "recommended": {
          "recommended": true,
          "strict": [
            {
              "allowAny": false,
              "allowBoolean": false,
              "allowNullish": false,
              "allowNumberAndString": false,
              "allowRegExp": false
            }
          ]
        },
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/restrict-plus-operands"
      },
      "name": "@typescript-eslint/restrict-plus-operands",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/restrict-template-expressions": {
      "type": "problem",
      "docs": {
        "description": "Enforce template literal expressions to be of `string` type",
        "recommended": {
          "recommended": true,
          "strict": [
            {
              "allowAny": false,
              "allowBoolean": false,
              "allowNever": false,
              "allowNullish": false,
              "allowNumber": false,
              "allowRegExp": false
            }
          ]
        },
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/restrict-template-expressions"
      },
      "name": "@typescript-eslint/restrict-template-expressions",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/return-await": {
      "type": "problem",
      "docs": {
        "description": "Enforce consistent awaiting of returned promises",
        "recommended": {
          "strict": [
            "error-handling-correctness-only"
          ]
        },
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/return-await"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@typescript-eslint/return-await",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/sort-type-constituents": {
      "type": "suggestion",
      "deprecated": {
        "deprecatedSince": "7.13.0",
        "replacedBy": [
          {
            "plugin": {
              "name": "eslint-plugin-perfectionist",
              "url": "https://perfectionist.dev"
            },
            "rule": {
              "name": "perfectionist/sort-intersection-types",
              "url": "https://perfectionist.dev/rules/sort-intersection-types"
            }
          },
          {
            "plugin": {
              "name": "eslint-plugin-perfectionist",
              "url": "https://perfectionist.dev"
            },
            "rule": {
              "name": "perfectionist/sort-union-types",
              "url": "https://perfectionist.dev/rules/sort-union-types"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/9253"
      },
      "docs": {
        "description": "Enforce constituents of a type union/intersection to be sorted alphabetically",
        "url": "https://typescript-eslint.io/rules/sort-type-constituents"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "replacedBy": [
        "perfectionist/sort-intersection-types",
        "perfectionist/sort-union-types"
      ],
      "name": "@typescript-eslint/sort-type-constituents",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/strict-boolean-expressions": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain types in boolean expressions",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/strict-boolean-expressions"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/strict-boolean-expressions",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/switch-exhaustiveness-check": {
      "type": "suggestion",
      "docs": {
        "description": "Require switch-case statements to be exhaustive",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/switch-exhaustiveness-check"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/switch-exhaustiveness-check",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/triple-slash-reference": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain triple slash directives in favor of ES6-style import declarations",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/triple-slash-reference"
      },
      "name": "@typescript-eslint/triple-slash-reference",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/typedef": {
      "type": "suggestion",
      "deprecated": {
        "deprecatedSince": "8.33.0",
        "message": "This is an old rule that is no longer recommended for use."
      },
      "docs": {
        "description": "Require type annotations in certain places",
        "url": "https://typescript-eslint.io/rules/typedef"
      },
      "name": "@typescript-eslint/typedef",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/unbound-method": {
      "type": "problem",
      "docs": {
        "description": "Enforce unbound methods are called with their expected scope",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/unbound-method"
      },
      "name": "@typescript-eslint/unbound-method",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/unified-signatures": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow two overloads that could be unified into one with a union or an optional/rest parameter",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/unified-signatures"
      },
      "name": "@typescript-eslint/unified-signatures",
      "plugin": "@typescript-eslint"
    },
    "@typescript-eslint/use-unknown-in-catch-callback-variable": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce typing arguments in Promise rejection callbacks as `unknown`",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/use-unknown-in-catch-callback-variable"
      },
      "hasSuggestions": true,
      "name": "@typescript-eslint/use-unknown-in-catch-callback-variable",
      "plugin": "@typescript-eslint"
    },
    "prettier/prettier": {
      "docs": {
        "url": "https://github.com/prettier/eslint-plugin-prettier#options"
      },
      "type": "layout",
      "fixable": "code",
      "name": "prettier/prettier",
      "plugin": "prettier"
    }
  },
  "files": [
    {
      "filepath": ".nx/cache/1149006984717556373/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/1149006984717556373/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/1149006984717556373/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/1149006984717556373/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/12640556624318932435/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/12640556624318932435/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/12640556624318932435/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/12640556624318932435/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/13949733314864080752/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/13949733314864080752/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/13949733314864080752/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/13949733314864080752/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/14105271551560973506/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/14105271551560973506/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/14105271551560973506/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/14105271551560973506/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/14239497251914194536/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/14239497251914194536/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/14239497251914194536/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/14239497251914194536/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/15786009601293164535/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/15786009601293164535/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/15786009601293164535/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/15786009601293164535/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/16077546242775261607/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/16077546242775261607/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/16077546242775261607/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/16077546242775261607/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/16347536520144748047/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/16347536520144748047/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/16347536520144748047/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/16347536520144748047/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/16405149867491440663/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/16405149867491440663/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/16405149867491440663/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/16405149867491440663/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/2969379836034987624/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/2969379836034987624/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/2969379836034987624/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/2969379836034987624/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/3994454330648390687/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/3994454330648390687/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/3994454330648390687/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/3994454330648390687/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/5082315228871930207/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/5082315228871930207/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/5082315228871930207/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/526395692058119117/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/526395692058119117/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/526395692058119117/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/5622609769147334741/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/5622609769147334741/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/5622609769147334741/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/5622609769147334741/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/6818781218609798191/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/6818781218609798191/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/6818781218609798191/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/6818781218609798191/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/786902778895962394/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/786902778895962394/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/786902778895962394/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/786902778895962394/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/8231358171613156542/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/8231358171613156542/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/8231358171613156542/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/8231358171613156542/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/9189721239765908583/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/9189721239765908583/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/9189721239765908583/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/9189721239765908583/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/939650365743099811/packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/939650365743099811/packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/939650365743099811/packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/939650365743099811/packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": ".nx/cache/cloud/2507.21.8/index.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/cloud/2507.21.8/lib/daemon/process-run-end.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": ".nx/cache/cloud/2507.21.8/lib/heartbeat/heartbeat-process.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": "eslint.config.mjs",
      "globs": [
        "**/*.mjs",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": "packages/eslint-config/dist/index.cjs.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": "packages/eslint-config/dist/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": "packages/eslint-config/dist/index.esm.js",
      "globs": [
        "**/*.js",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": "packages/eslint-config/dist/src/index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    },
    {
      "filepath": "packages/eslint-config/eslint.config.mjs",
      "globs": [
        "**/*.mjs",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        2,
        21
      ]
    },
    {
      "filepath": "packages/eslint-config/rollup.config.cjs",
      "globs": [
        "**/*.cjs",
        "**/*.{js,jsx,cjs,mjs}"
      ],
      "configs": [
        3,
        21
      ]
    },
    {
      "filepath": "packages/eslint-config/src/index.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        12
      ]
    }
  ],
  "meta": {
    "lastUpdate": 1753261540209,
    "basePath": "",
    "configPath": ""
  }
}